!function(e,n,i,t){"use strict";n="undefined"!=typeof n&&n.Math==Math?n:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),e.fn.modal=function(o){var a,r=e(this),s=e(n),c=e(i),l=e("body"),d=r.selector||"",u=(new Date).getTime(),m=[],f=arguments[0],g="string"==typeof f,h=[].slice.call(arguments,1),v=n.requestAnimationFrame||n.mozRequestAnimationFrame||n.webkitRequestAnimationFrame||n.msRequestAnimationFrame||function(e){setTimeout(e,0)};return r.each(function(){var r,b,p,y,k,w,M,S,C,F=e.isPlainObject(o)?e.extend(!0,{},e.fn.modal.settings,o):e.extend({},e.fn.modal.settings),A=F.selector,D=F.className,H=F.namespace,T=F.error,x="."+H,z="module-"+H,O=e(this),q=e(F.context),E=O.find(A.close),j=this,P=O.data(z);C={initialize:function(){C.verbose("Initializing dimmer",q),C.create.id(),C.create.dimmer(),C.refreshModals(),C.bind.events(),F.observeChanges&&C.observeChanges(),C.instantiate()},instantiate:function(){C.verbose("Storing instance of modal"),P=C,O.data(z,P)},create:{dimmer:function(){var n={debug:F.debug,dimmerName:"modals",duration:{show:F.duration,hide:F.duration}},i=e.extend(!0,n,F.dimmerSettings);return F.inverted&&(i.variation=i.variation!==t?i.variation+" inverted":"inverted"),e.fn.dimmer===t?void C.error(T.dimmer):(C.debug("Creating dimmer with settings",i),y=q.dimmer(i),F.detachable?(C.verbose("Modal is detachable, moving content into dimmer"),y.dimmer("add content",O)):C.set.undetached(),F.blurring&&y.addClass(D.blurring),void(k=y.dimmer("get dimmer")))},id:function(){M=(Math.random().toString(16)+"000000000").substr(2,8),w="."+M,C.verbose("Creating unique id for element",M)}},destroy:function(){C.verbose("Destroying previous modal"),O.removeData(z).off(x),s.off(w),k.off(w),E.off(x),q.dimmer("destroy")},observeChanges:function(){"MutationObserver"in n&&(S=new MutationObserver(function(e){C.debug("DOM tree modified, refreshing"),C.refresh()}),S.observe(j,{childList:!0,subtree:!0}),C.debug("Setting up mutation observer",S))},refresh:function(){C.remove.scrolling(),C.cacheSizes(),C.set.screenHeight(),C.set.type(),C.set.position()},refreshModals:function(){b=O.siblings(A.modal),r=b.add(O)},attachEvents:function(n,i){var t=e(n);i=e.isFunction(C[i])?C[i]:C.toggle,t.length>0?(C.debug("Attaching modal events to element",n,i),t.off(x).on("click"+x,i)):C.error(T.notFound,n)},bind:{events:function(){C.verbose("Attaching events"),O.on("click"+x,A.close,C.event.close).on("click"+x,A.approve,C.event.approve).on("click"+x,A.deny,C.event.deny),s.on("resize"+w,C.event.resize)}},get:{id:function(){return(Math.random().toString(16)+"000000000").substr(2,8)}},event:{approve:function(){return F.onApprove.call(j,e(this))===!1?void C.verbose("Approve callback returned false cancelling hide"):void C.hide()},deny:function(){return F.onDeny.call(j,e(this))===!1?void C.verbose("Deny callback returned false cancelling hide"):void C.hide()},close:function(){C.hide()},click:function(n){var t=e(n.target),o=t.closest(A.modal).length>0,a=e.contains(i.documentElement,n.target);!o&&a&&(C.debug("Dimmer clicked, hiding all modals"),C.is.active()&&(C.remove.clickaway(),F.allowMultiple?C.hide():C.hideAll()))},debounce:function(e,n){clearTimeout(C.timer),C.timer=setTimeout(e,n)},keyboard:function(e){var n=e.which,i=27;n==i&&(F.closable?(C.debug("Escape key pressed hiding modal"),C.hide()):C.debug("Escape key pressed, but closable is set to false"),e.preventDefault())},resize:function(){y.dimmer("is active")&&v(C.refresh)}},toggle:function(){C.is.active()||C.is.animating()?C.hide():C.show()},show:function(n){n=e.isFunction(n)?n:function(){},C.refreshModals(),C.showModal(n)},hide:function(n){n=e.isFunction(n)?n:function(){},C.refreshModals(),C.hideModal(n)},showModal:function(n){n=e.isFunction(n)?n:function(){},C.is.animating()||!C.is.active()?(C.showDimmer(),C.cacheSizes(),C.set.position(),C.set.screenHeight(),C.set.type(),C.set.clickaway(),!F.allowMultiple&&C.others.active()?C.hideOthers(C.showModal):(F.onShow.call(j),F.transition&&e.fn.transition!==t&&O.transition("is supported")?(C.debug("Showing modal with css animations"),O.transition({debug:F.debug,animation:F.transition+" in",queue:F.queue,duration:F.duration,useFailSafe:!0,onComplete:function(){F.onVisible.apply(j),F.keyboardShortcuts&&C.add.keyboardShortcuts(),C.save.focus(),C.set.active(),F.autofocus&&C.set.autofocus(),n()}})):C.error(T.noTransition))):C.debug("Modal is already visible")},hideModal:function(n,i){return n=e.isFunction(n)?n:function(){},C.debug("Hiding modal"),F.onHide.call(j,e(this))===!1?void C.verbose("Hide callback returned false cancelling hide"):void((C.is.animating()||C.is.active())&&(F.transition&&e.fn.transition!==t&&O.transition("is supported")?(C.remove.active(),O.transition({debug:F.debug,animation:F.transition+" out",queue:F.queue,duration:F.duration,useFailSafe:!0,onStart:function(){C.others.active()||i||C.hideDimmer(),F.keyboardShortcuts&&C.remove.keyboardShortcuts()},onComplete:function(){F.onHidden.call(j),C.restore.focus(),n()}})):C.error(T.noTransition)))},showDimmer:function(){y.dimmer("is animating")||!y.dimmer("is active")?(C.debug("Showing dimmer"),y.dimmer("show")):C.debug("Dimmer already visible")},hideDimmer:function(){return y.dimmer("is animating")||y.dimmer("is active")?void y.dimmer("hide",function(){C.remove.clickaway(),C.remove.screenHeight()}):void C.debug("Dimmer is not visible cannot hide")},hideAll:function(n){var i=r.filter("."+D.active+", ."+D.animating);n=e.isFunction(n)?n:function(){},i.length>0&&(C.debug("Hiding all visible modals"),C.hideDimmer(),i.modal("hide modal",n))},hideOthers:function(n){var i=b.filter("."+D.active+", ."+D.animating);n=e.isFunction(n)?n:function(){},i.length>0&&(C.debug("Hiding other modals",b),i.modal("hide modal",n,!0))},others:{active:function(){return b.filter("."+D.active).length>0},animating:function(){return b.filter("."+D.animating).length>0}},add:{keyboardShortcuts:function(){C.verbose("Adding keyboard shortcuts"),c.on("keyup"+x,C.event.keyboard)}},save:{focus:function(){p=e(i.activeElement).blur()}},restore:{focus:function(){p&&p.length>0&&p.focus()}},remove:{active:function(){O.removeClass(D.active)},clickaway:function(){F.closable&&k.off("click"+w)},bodyStyle:function(){""===l.attr("style")&&(C.verbose("Removing style attribute"),l.removeAttr("style"))},screenHeight:function(){C.debug("Removing page height"),l.css("height","")},keyboardShortcuts:function(){C.verbose("Removing keyboard shortcuts"),c.off("keyup"+x)},scrolling:function(){y.removeClass(D.scrolling),O.removeClass(D.scrolling)}},cacheSizes:function(){var o=O.outerHeight();C.cache!==t&&0===o||(C.cache={pageHeight:e(i).outerHeight(),height:o+F.offset,contextHeight:"body"==F.context?e(n).height():y.height()}),C.debug("Caching modal and container sizes",C.cache)},can:{fit:function(){return C.cache.height+2*F.padding<C.cache.contextHeight}},is:{active:function(){return O.hasClass(D.active)},animating:function(){return O.transition("is supported")?O.transition("is animating"):O.is(":visible")},scrolling:function(){return y.hasClass(D.scrolling)},modernBrowser:function(){return!(n.ActiveXObject||"ActiveXObject"in n)}},set:{autofocus:function(){var e=O.find("[tabindex], :input").filter(":visible"),n=e.filter("[autofocus]"),i=n.length>0?n.first():e.first();i.length>0&&i.focus()},clickaway:function(){F.closable&&k.on("click"+w,C.event.click)},screenHeight:function(){C.can.fit()?l.css("height",""):(C.debug("Modal is taller than page content, resizing page height"),l.css("height",C.cache.height+2*F.padding))},active:function(){O.addClass(D.active)},scrolling:function(){y.addClass(D.scrolling),O.addClass(D.scrolling)},type:function(){C.can.fit()?(C.verbose("Modal fits on screen"),C.others.active()||C.others.animating()||C.remove.scrolling()):(C.verbose("Modal cannot fit on screen setting to scrolling"),C.set.scrolling())},position:function(){C.verbose("Centering modal on page",C.cache),C.can.fit()?O.css({top:"",marginTop:-(C.cache.height/2)}):O.css({marginTop:"",top:c.scrollTop()})},undetached:function(){y.addClass(D.undetached)}},setting:function(n,i){if(C.debug("Changing setting",n,i),e.isPlainObject(n))e.extend(!0,F,n);else{if(i===t)return F[n];e.isPlainObject(F[n])?e.extend(!0,F[n],i):F[n]=i}},internal:function(n,i){if(e.isPlainObject(n))e.extend(!0,C,n);else{if(i===t)return C[n];C[n]=i}},debug:function(){!F.silent&&F.debug&&(F.performance?C.performance.log(arguments):(C.debug=Function.prototype.bind.call(console.info,console,F.name+":"),C.debug.apply(console,arguments)))},verbose:function(){!F.silent&&F.verbose&&F.debug&&(F.performance?C.performance.log(arguments):(C.verbose=Function.prototype.bind.call(console.info,console,F.name+":"),C.verbose.apply(console,arguments)))},error:function(){F.silent||(C.error=Function.prototype.bind.call(console.error,console,F.name+":"),C.error.apply(console,arguments))},performance:{log:function(e){var n,i,t;F.performance&&(n=(new Date).getTime(),t=u||n,i=n-t,u=n,m.push({Name:e[0],Arguments:[].slice.call(e,1)||"",Element:j,"Execution Time":i})),clearTimeout(C.performance.timer),C.performance.timer=setTimeout(C.performance.display,500)},display:function(){var n=F.name+":",i=0;u=!1,clearTimeout(C.performance.timer),e.each(m,function(e,n){i+=n["Execution Time"]}),n+=" "+i+"ms",d&&(n+=" '"+d+"'"),(console.group!==t||console.table!==t)&&m.length>0&&(console.groupCollapsed(n),console.table?console.table(m):e.each(m,function(e,n){console.log(n.Name+": "+n["Execution Time"]+"ms")}),console.groupEnd()),m=[]}},invoke:function(n,i,o){var r,s,c,l=P;return i=i||h,o=j||o,"string"==typeof n&&l!==t&&(n=n.split(/[\. ]/),r=n.length-1,e.each(n,function(i,o){var a=i!=r?o+n[i+1].charAt(0).toUpperCase()+n[i+1].slice(1):n;if(e.isPlainObject(l[a])&&i!=r)l=l[a];else{if(l[a]!==t)return s=l[a],!1;if(!e.isPlainObject(l[o])||i==r)return l[o]!==t&&(s=l[o],!1);l=l[o]}})),e.isFunction(s)?c=s.apply(o,i):s!==t&&(c=s),e.isArray(a)?a.push(c):a!==t?a=[a,c]:c!==t&&(a=c),s}},g?(P===t&&C.initialize(),C.invoke(f)):(P!==t&&P.invoke("destroy"),C.initialize())}),a!==t?a:this},e.fn.modal.settings={name:"Modal",namespace:"modal",silent:!1,debug:!1,verbose:!1,performance:!0,observeChanges:!1,allowMultiple:!1,detachable:!0,closable:!0,autofocus:!0,inverted:!1,blurring:!1,dimmerSettings:{closable:!1,useCSS:!0},keyboardShortcuts:!0,context:"body",queue:!1,duration:500,offset:0,transition:"scale",padding:50,onShow:function(){},onVisible:function(){},onHide:function(){return!0},onHidden:function(){},onApprove:function(){return!0},onDeny:function(){return!0},selector:{close:"> .close",approve:".actions .positive, .actions .approve, .actions .ok",deny:".actions .negative, .actions .deny, .actions .cancel",modal:".ui.modal"},error:{dimmer:"UI Dimmer, a required component is not included in this page",method:"The method you called is not defined.",notFound:"The element you specified could not be found"},className:{active:"active",animating:"animating",blurring:"blurring",scrolling:"scrolling",undetached:"undetached"}}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9tb2RhbC5qcyJdLCJuYW1lcyI6WyIkIiwid2luZG93IiwiZG9jdW1lbnQiLCJ1bmRlZmluZWQiLCJNYXRoIiwic2VsZiIsIkZ1bmN0aW9uIiwiZm4iLCJtb2RhbCIsInBhcmFtZXRlcnMiLCJyZXR1cm5lZFZhbHVlIiwiJGFsbE1vZHVsZXMiLCJ0aGlzIiwiJHdpbmRvdyIsIiRkb2N1bWVudCIsIiRib2R5IiwibW9kdWxlU2VsZWN0b3IiLCJzZWxlY3RvciIsInRpbWUiLCJEYXRlIiwiZ2V0VGltZSIsInBlcmZvcm1hbmNlIiwicXVlcnkiLCJhcmd1bWVudHMiLCJtZXRob2RJbnZva2VkIiwicXVlcnlBcmd1bWVudHMiLCJzbGljZSIsImNhbGwiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtc1JlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbGxiYWNrIiwic2V0VGltZW91dCIsImVhY2giLCIkYWxsTW9kYWxzIiwiJG90aGVyTW9kYWxzIiwiJGZvY3VzZWRFbGVtZW50IiwiJGRpbW1hYmxlIiwiJGRpbW1lciIsImVsZW1lbnRFdmVudE5hbWVzcGFjZSIsImlkIiwib2JzZXJ2ZXIiLCJtb2R1bGUiLCJzZXR0aW5ncyIsImlzUGxhaW5PYmplY3QiLCJleHRlbmQiLCJjbGFzc05hbWUiLCJuYW1lc3BhY2UiLCJlcnJvciIsImV2ZW50TmFtZXNwYWNlIiwibW9kdWxlTmFtZXNwYWNlIiwiJG1vZHVsZSIsIiRjb250ZXh0IiwiY29udGV4dCIsIiRjbG9zZSIsImZpbmQiLCJjbG9zZSIsImVsZW1lbnQiLCJpbnN0YW5jZSIsImRhdGEiLCJpbml0aWFsaXplIiwidmVyYm9zZSIsImNyZWF0ZSIsImRpbW1lciIsInJlZnJlc2hNb2RhbHMiLCJiaW5kIiwiZXZlbnRzIiwib2JzZXJ2ZUNoYW5nZXMiLCJpbnN0YW50aWF0ZSIsImRlZmF1bHRTZXR0aW5ncyIsImRlYnVnIiwiZGltbWVyTmFtZSIsImR1cmF0aW9uIiwic2hvdyIsImhpZGUiLCJkaW1tZXJTZXR0aW5ncyIsImludmVydGVkIiwidmFyaWF0aW9uIiwiZGV0YWNoYWJsZSIsInNldCIsInVuZGV0YWNoZWQiLCJibHVycmluZyIsImFkZENsYXNzIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHIiLCJkZXN0cm95IiwicmVtb3ZlRGF0YSIsIm9mZiIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJtdXRhdGlvbnMiLCJyZWZyZXNoIiwib2JzZXJ2ZSIsImNoaWxkTGlzdCIsInN1YnRyZWUiLCJyZW1vdmUiLCJzY3JvbGxpbmciLCJjYWNoZVNpemVzIiwic2NyZWVuSGVpZ2h0IiwidHlwZSIsInBvc2l0aW9uIiwic2libGluZ3MiLCJhZGQiLCJhdHRhY2hFdmVudHMiLCJldmVudCIsIiR0b2dnbGUiLCJpc0Z1bmN0aW9uIiwidG9nZ2xlIiwibGVuZ3RoIiwib24iLCJub3RGb3VuZCIsImFwcHJvdmUiLCJkZW55IiwicmVzaXplIiwiZ2V0Iiwib25BcHByb3ZlIiwib25EZW55IiwiY2xpY2siLCIkdGFyZ2V0IiwidGFyZ2V0IiwiaXNJbk1vZGFsIiwiY2xvc2VzdCIsImlzSW5ET00iLCJjb250YWlucyIsImRvY3VtZW50RWxlbWVudCIsImlzIiwiYWN0aXZlIiwiY2xpY2thd2F5IiwiYWxsb3dNdWx0aXBsZSIsImhpZGVBbGwiLCJkZWJvdW5jZSIsIm1ldGhvZCIsImRlbGF5IiwiY2xlYXJUaW1lb3V0IiwidGltZXIiLCJrZXlib2FyZCIsImtleUNvZGUiLCJ3aGljaCIsImVzY2FwZUtleSIsImNsb3NhYmxlIiwicHJldmVudERlZmF1bHQiLCJhbmltYXRpbmciLCJzaG93TW9kYWwiLCJoaWRlTW9kYWwiLCJzaG93RGltbWVyIiwib3RoZXJzIiwiaGlkZU90aGVycyIsIm9uU2hvdyIsInRyYW5zaXRpb24iLCJhbmltYXRpb24iLCJxdWV1ZSIsInVzZUZhaWxTYWZlIiwib25Db21wbGV0ZSIsIm9uVmlzaWJsZSIsImFwcGx5Iiwia2V5Ym9hcmRTaG9ydGN1dHMiLCJzYXZlIiwiZm9jdXMiLCJhdXRvZm9jdXMiLCJub1RyYW5zaXRpb24iLCJrZWVwRGltbWVkIiwib25IaWRlIiwib25TdGFydCIsImhpZGVEaW1tZXIiLCJvbkhpZGRlbiIsInJlc3RvcmUiLCIkdmlzaWJsZU1vZGFscyIsImZpbHRlciIsImFjdGl2ZUVsZW1lbnQiLCJibHVyIiwicmVtb3ZlQ2xhc3MiLCJib2R5U3R5bGUiLCJhdHRyIiwicmVtb3ZlQXR0ciIsImNzcyIsIm1vZGFsSGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJjYWNoZSIsInBhZ2VIZWlnaHQiLCJoZWlnaHQiLCJvZmZzZXQiLCJjb250ZXh0SGVpZ2h0IiwiY2FuIiwiZml0IiwicGFkZGluZyIsImhhc0NsYXNzIiwibW9kZXJuQnJvd3NlciIsIkFjdGl2ZVhPYmplY3QiLCIkaW5wdXRzIiwiJGF1dG9mb2N1cyIsIiRpbnB1dCIsImZpcnN0IiwidG9wIiwibWFyZ2luVG9wIiwic2Nyb2xsVG9wIiwic2V0dGluZyIsIm5hbWUiLCJ2YWx1ZSIsImludGVybmFsIiwic2lsZW50IiwibG9nIiwicHJvdG90eXBlIiwiY29uc29sZSIsImluZm8iLCJtZXNzYWdlIiwiY3VycmVudFRpbWUiLCJleGVjdXRpb25UaW1lIiwicHJldmlvdXNUaW1lIiwicHVzaCIsIk5hbWUiLCJBcmd1bWVudHMiLCJFbGVtZW50IiwiRXhlY3V0aW9uIFRpbWUiLCJkaXNwbGF5IiwidGl0bGUiLCJ0b3RhbFRpbWUiLCJpbmRleCIsImdyb3VwIiwidGFibGUiLCJncm91cENvbGxhcHNlZCIsImdyb3VwRW5kIiwiaW52b2tlIiwicGFzc2VkQXJndW1lbnRzIiwibWF4RGVwdGgiLCJmb3VuZCIsInJlc3BvbnNlIiwib2JqZWN0Iiwic3BsaXQiLCJkZXB0aCIsImNhbWVsQ2FzZVZhbHVlIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJpc0FycmF5IiwidXNlQ1NTIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQ0FVQyxTQUFX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akJsRixVQUFpQixFQUNqQkssVUFBaUIsRUFFakJOLGdCQUNFZ0UsVUFBVyxFQUNYOEYsUUFBVyxHQUliOUUsbUJBQW1CLEVBRW5CdEcsUUFBYSxPQUViaUcsT0FBYSxFQUNiOUUsU0FBYSxJQUNiNEcsT0FBYSxFQUNiaEMsV0FBYSxRQUdib0MsUUFBYSxHQUdickMsT0FBYSxhQUdiTSxVQUFhLGFBR2JRLE9BQWEsV0FBWSxPQUFPLEdBR2hDRyxTQUFhLGFBR2JqRCxVQUFhLFdBQVksT0FBTyxHQUdoQ0MsT0FBYSxXQUFZLE9BQU8sR0FFaENwRyxVQUNFd0MsTUFBVyxXQUNYdUQsUUFBVyxzREFDWEMsS0FBVyx1REFDWHpHLE1BQVcsYUFFYnlDLE9BQ0VlLE9BQVksK0RBQ1pvRSxPQUFZLHdDQUNackIsU0FBWSxnREFFZGhFLFdBQ0VnRixPQUFhLFNBQ2JlLFVBQWEsWUFDYjVELFNBQWEsV0FDYmUsVUFBYSxZQUNiaEIsV0FBYSxnQkFLYjBKLE9BQVExTyxPQUFRQyIsImZpbGUiOiJ2ZW5kb3IvbW9kYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqICMgU2VtYW50aWMgVUkgMi4yLjcgLSBNb2RhbFxuICogaHR0cDovL2dpdGh1Yi5jb20vc2VtYW50aWMtb3JnL3NlbWFudGljLXVpL1xuICpcbiAqXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVRcbiAqXG4gKi9cblxuOyhmdW5jdGlvbiAoJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG53aW5kb3cgPSAodHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoKVxuICA/IHdpbmRvd1xuICA6ICh0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aClcbiAgICA/IHNlbGZcbiAgICA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKClcbjtcblxuJC5mbi5tb2RhbCA9IGZ1bmN0aW9uKHBhcmFtZXRlcnMpIHtcbiAgdmFyXG4gICAgJGFsbE1vZHVsZXMgICAgPSAkKHRoaXMpLFxuICAgICR3aW5kb3cgICAgICAgID0gJCh3aW5kb3cpLFxuICAgICRkb2N1bWVudCAgICAgID0gJChkb2N1bWVudCksXG4gICAgJGJvZHkgICAgICAgICAgPSAkKCdib2R5JyksXG5cbiAgICBtb2R1bGVTZWxlY3RvciA9ICRhbGxNb2R1bGVzLnNlbGVjdG9yIHx8ICcnLFxuXG4gICAgdGltZSAgICAgICAgICAgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSxcbiAgICBwZXJmb3JtYW5jZSAgICA9IFtdLFxuXG4gICAgcXVlcnkgICAgICAgICAgPSBhcmd1bWVudHNbMF0sXG4gICAgbWV0aG9kSW52b2tlZCAgPSAodHlwZW9mIHF1ZXJ5ID09ICdzdHJpbmcnKSxcbiAgICBxdWVyeUFyZ3VtZW50cyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSxcblxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgICAgIHx8IHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgICAgIHx8IHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgICAgIHx8IHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZVxuICAgICAgfHwgZnVuY3Rpb24oY2FsbGJhY2spIHsgc2V0VGltZW91dChjYWxsYmFjaywgMCk7IH0sXG5cbiAgICByZXR1cm5lZFZhbHVlXG4gIDtcblxuICAkYWxsTW9kdWxlc1xuICAgIC5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyXG4gICAgICAgIHNldHRpbmdzICAgID0gKCAkLmlzUGxhaW5PYmplY3QocGFyYW1ldGVycykgKVxuICAgICAgICAgID8gJC5leHRlbmQodHJ1ZSwge30sICQuZm4ubW9kYWwuc2V0dGluZ3MsIHBhcmFtZXRlcnMpXG4gICAgICAgICAgOiAkLmV4dGVuZCh7fSwgJC5mbi5tb2RhbC5zZXR0aW5ncyksXG5cbiAgICAgICAgc2VsZWN0b3IgICAgICAgID0gc2V0dGluZ3Muc2VsZWN0b3IsXG4gICAgICAgIGNsYXNzTmFtZSAgICAgICA9IHNldHRpbmdzLmNsYXNzTmFtZSxcbiAgICAgICAgbmFtZXNwYWNlICAgICAgID0gc2V0dGluZ3MubmFtZXNwYWNlLFxuICAgICAgICBlcnJvciAgICAgICAgICAgPSBzZXR0aW5ncy5lcnJvcixcblxuICAgICAgICBldmVudE5hbWVzcGFjZSAgPSAnLicgKyBuYW1lc3BhY2UsXG4gICAgICAgIG1vZHVsZU5hbWVzcGFjZSA9ICdtb2R1bGUtJyArIG5hbWVzcGFjZSxcblxuICAgICAgICAkbW9kdWxlICAgICAgICAgPSAkKHRoaXMpLFxuICAgICAgICAkY29udGV4dCAgICAgICAgPSAkKHNldHRpbmdzLmNvbnRleHQpLFxuICAgICAgICAkY2xvc2UgICAgICAgICAgPSAkbW9kdWxlLmZpbmQoc2VsZWN0b3IuY2xvc2UpLFxuXG4gICAgICAgICRhbGxNb2RhbHMsXG4gICAgICAgICRvdGhlck1vZGFscyxcbiAgICAgICAgJGZvY3VzZWRFbGVtZW50LFxuICAgICAgICAkZGltbWFibGUsXG4gICAgICAgICRkaW1tZXIsXG5cbiAgICAgICAgZWxlbWVudCAgICAgICAgID0gdGhpcyxcbiAgICAgICAgaW5zdGFuY2UgICAgICAgID0gJG1vZHVsZS5kYXRhKG1vZHVsZU5hbWVzcGFjZSksXG5cbiAgICAgICAgZWxlbWVudEV2ZW50TmFtZXNwYWNlLFxuICAgICAgICBpZCxcbiAgICAgICAgb2JzZXJ2ZXIsXG4gICAgICAgIG1vZHVsZVxuICAgICAgO1xuICAgICAgbW9kdWxlICA9IHtcblxuICAgICAgICBpbml0aWFsaXplOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBtb2R1bGUudmVyYm9zZSgnSW5pdGlhbGl6aW5nIGRpbW1lcicsICRjb250ZXh0KTtcblxuICAgICAgICAgIG1vZHVsZS5jcmVhdGUuaWQoKTtcbiAgICAgICAgICBtb2R1bGUuY3JlYXRlLmRpbW1lcigpO1xuICAgICAgICAgIG1vZHVsZS5yZWZyZXNoTW9kYWxzKCk7XG5cbiAgICAgICAgICBtb2R1bGUuYmluZC5ldmVudHMoKTtcbiAgICAgICAgICBpZihzZXR0aW5ncy5vYnNlcnZlQ2hhbmdlcykge1xuICAgICAgICAgICAgbW9kdWxlLm9ic2VydmVDaGFuZ2VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG1vZHVsZS5pbnN0YW50aWF0ZSgpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluc3RhbnRpYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBtb2R1bGUudmVyYm9zZSgnU3RvcmluZyBpbnN0YW5jZSBvZiBtb2RhbCcpO1xuICAgICAgICAgIGluc3RhbmNlID0gbW9kdWxlO1xuICAgICAgICAgICRtb2R1bGVcbiAgICAgICAgICAgIC5kYXRhKG1vZHVsZU5hbWVzcGFjZSwgaW5zdGFuY2UpXG4gICAgICAgICAgO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNyZWF0ZToge1xuICAgICAgICAgIGRpbW1lcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXJcbiAgICAgICAgICAgICAgZGVmYXVsdFNldHRpbmdzID0ge1xuICAgICAgICAgICAgICAgIGRlYnVnICAgICAgOiBzZXR0aW5ncy5kZWJ1ZyxcbiAgICAgICAgICAgICAgICBkaW1tZXJOYW1lIDogJ21vZGFscycsXG4gICAgICAgICAgICAgICAgZHVyYXRpb24gICA6IHtcbiAgICAgICAgICAgICAgICAgIHNob3cgICAgIDogc2V0dGluZ3MuZHVyYXRpb24sXG4gICAgICAgICAgICAgICAgICBoaWRlICAgICA6IHNldHRpbmdzLmR1cmF0aW9uXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkaW1tZXJTZXR0aW5ncyA9ICQuZXh0ZW5kKHRydWUsIGRlZmF1bHRTZXR0aW5ncywgc2V0dGluZ3MuZGltbWVyU2V0dGluZ3MpXG4gICAgICAgICAgICA7XG4gICAgICAgICAgICBpZihzZXR0aW5ncy5pbnZlcnRlZCkge1xuICAgICAgICAgICAgICBkaW1tZXJTZXR0aW5ncy52YXJpYXRpb24gPSAoZGltbWVyU2V0dGluZ3MudmFyaWF0aW9uICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgPyBkaW1tZXJTZXR0aW5ncy52YXJpYXRpb24gKyAnIGludmVydGVkJ1xuICAgICAgICAgICAgICAgIDogJ2ludmVydGVkJ1xuICAgICAgICAgICAgICA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZigkLmZuLmRpbW1lciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIG1vZHVsZS5lcnJvcihlcnJvci5kaW1tZXIpO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBtb2R1bGUuZGVidWcoJ0NyZWF0aW5nIGRpbW1lciB3aXRoIHNldHRpbmdzJywgZGltbWVyU2V0dGluZ3MpO1xuICAgICAgICAgICAgJGRpbW1hYmxlID0gJGNvbnRleHQuZGltbWVyKGRpbW1lclNldHRpbmdzKTtcbiAgICAgICAgICAgIGlmKHNldHRpbmdzLmRldGFjaGFibGUpIHtcbiAgICAgICAgICAgICAgbW9kdWxlLnZlcmJvc2UoJ01vZGFsIGlzIGRldGFjaGFibGUsIG1vdmluZyBjb250ZW50IGludG8gZGltbWVyJyk7XG4gICAgICAgICAgICAgICRkaW1tYWJsZS5kaW1tZXIoJ2FkZCBjb250ZW50JywgJG1vZHVsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgbW9kdWxlLnNldC51bmRldGFjaGVkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZihzZXR0aW5ncy5ibHVycmluZykge1xuICAgICAgICAgICAgICAkZGltbWFibGUuYWRkQ2xhc3MoY2xhc3NOYW1lLmJsdXJyaW5nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICRkaW1tZXIgPSAkZGltbWFibGUuZGltbWVyKCdnZXQgZGltbWVyJyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBpZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZCA9IChNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KSArICcwMDAwMDAwMDAnKS5zdWJzdHIoMiw4KTtcbiAgICAgICAgICAgIGVsZW1lbnRFdmVudE5hbWVzcGFjZSA9ICcuJyArIGlkO1xuICAgICAgICAgICAgbW9kdWxlLnZlcmJvc2UoJ0NyZWF0aW5nIHVuaXF1ZSBpZCBmb3IgZWxlbWVudCcsIGlkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgZGVzdHJveTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbW9kdWxlLnZlcmJvc2UoJ0Rlc3Ryb3lpbmcgcHJldmlvdXMgbW9kYWwnKTtcbiAgICAgICAgICAkbW9kdWxlXG4gICAgICAgICAgICAucmVtb3ZlRGF0YShtb2R1bGVOYW1lc3BhY2UpXG4gICAgICAgICAgICAub2ZmKGV2ZW50TmFtZXNwYWNlKVxuICAgICAgICAgIDtcbiAgICAgICAgICAkd2luZG93Lm9mZihlbGVtZW50RXZlbnROYW1lc3BhY2UpO1xuICAgICAgICAgICRkaW1tZXIub2ZmKGVsZW1lbnRFdmVudE5hbWVzcGFjZSk7XG4gICAgICAgICAgJGNsb3NlLm9mZihldmVudE5hbWVzcGFjZSk7XG4gICAgICAgICAgJGNvbnRleHQuZGltbWVyKCdkZXN0cm95Jyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb2JzZXJ2ZUNoYW5nZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmKCdNdXRhdGlvbk9ic2VydmVyJyBpbiB3aW5kb3cpIHtcbiAgICAgICAgICAgIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24obXV0YXRpb25zKSB7XG4gICAgICAgICAgICAgIG1vZHVsZS5kZWJ1ZygnRE9NIHRyZWUgbW9kaWZpZWQsIHJlZnJlc2hpbmcnKTtcbiAgICAgICAgICAgICAgbW9kdWxlLnJlZnJlc2goKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShlbGVtZW50LCB7XG4gICAgICAgICAgICAgIGNoaWxkTGlzdCA6IHRydWUsXG4gICAgICAgICAgICAgIHN1YnRyZWUgICA6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbW9kdWxlLmRlYnVnKCdTZXR0aW5nIHVwIG11dGF0aW9uIG9ic2VydmVyJywgb2JzZXJ2ZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICByZWZyZXNoOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBtb2R1bGUucmVtb3ZlLnNjcm9sbGluZygpO1xuICAgICAgICAgIG1vZHVsZS5jYWNoZVNpemVzKCk7XG4gICAgICAgICAgbW9kdWxlLnNldC5zY3JlZW5IZWlnaHQoKTtcbiAgICAgICAgICBtb2R1bGUuc2V0LnR5cGUoKTtcbiAgICAgICAgICBtb2R1bGUuc2V0LnBvc2l0aW9uKCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVmcmVzaE1vZGFsczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgJG90aGVyTW9kYWxzID0gJG1vZHVsZS5zaWJsaW5ncyhzZWxlY3Rvci5tb2RhbCk7XG4gICAgICAgICAgJGFsbE1vZGFscyAgID0gJG90aGVyTW9kYWxzLmFkZCgkbW9kdWxlKTtcbiAgICAgICAgfSxcblxuICAgICAgICBhdHRhY2hFdmVudHM6IGZ1bmN0aW9uKHNlbGVjdG9yLCBldmVudCkge1xuICAgICAgICAgIHZhclxuICAgICAgICAgICAgJHRvZ2dsZSA9ICQoc2VsZWN0b3IpXG4gICAgICAgICAgO1xuICAgICAgICAgIGV2ZW50ID0gJC5pc0Z1bmN0aW9uKG1vZHVsZVtldmVudF0pXG4gICAgICAgICAgICA/IG1vZHVsZVtldmVudF1cbiAgICAgICAgICAgIDogbW9kdWxlLnRvZ2dsZVxuICAgICAgICAgIDtcbiAgICAgICAgICBpZigkdG9nZ2xlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIG1vZHVsZS5kZWJ1ZygnQXR0YWNoaW5nIG1vZGFsIGV2ZW50cyB0byBlbGVtZW50Jywgc2VsZWN0b3IsIGV2ZW50KTtcbiAgICAgICAgICAgICR0b2dnbGVcbiAgICAgICAgICAgICAgLm9mZihldmVudE5hbWVzcGFjZSlcbiAgICAgICAgICAgICAgLm9uKCdjbGljaycgKyBldmVudE5hbWVzcGFjZSwgZXZlbnQpXG4gICAgICAgICAgICA7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbW9kdWxlLmVycm9yKGVycm9yLm5vdEZvdW5kLCBzZWxlY3Rvcik7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGJpbmQ6IHtcbiAgICAgICAgICBldmVudHM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbW9kdWxlLnZlcmJvc2UoJ0F0dGFjaGluZyBldmVudHMnKTtcbiAgICAgICAgICAgICRtb2R1bGVcbiAgICAgICAgICAgICAgLm9uKCdjbGljaycgKyBldmVudE5hbWVzcGFjZSwgc2VsZWN0b3IuY2xvc2UsIG1vZHVsZS5ldmVudC5jbG9zZSlcbiAgICAgICAgICAgICAgLm9uKCdjbGljaycgKyBldmVudE5hbWVzcGFjZSwgc2VsZWN0b3IuYXBwcm92ZSwgbW9kdWxlLmV2ZW50LmFwcHJvdmUpXG4gICAgICAgICAgICAgIC5vbignY2xpY2snICsgZXZlbnROYW1lc3BhY2UsIHNlbGVjdG9yLmRlbnksIG1vZHVsZS5ldmVudC5kZW55KVxuICAgICAgICAgICAgO1xuICAgICAgICAgICAgJHdpbmRvd1xuICAgICAgICAgICAgICAub24oJ3Jlc2l6ZScgKyBlbGVtZW50RXZlbnROYW1lc3BhY2UsIG1vZHVsZS5ldmVudC5yZXNpemUpXG4gICAgICAgICAgICA7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGdldDoge1xuICAgICAgICAgIGlkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAoTWF0aC5yYW5kb20oKS50b1N0cmluZygxNikgKyAnMDAwMDAwMDAwJykuc3Vic3RyKDIsOCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgYXBwcm92ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZihzZXR0aW5ncy5vbkFwcHJvdmUuY2FsbChlbGVtZW50LCAkKHRoaXMpKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgbW9kdWxlLnZlcmJvc2UoJ0FwcHJvdmUgY2FsbGJhY2sgcmV0dXJuZWQgZmFsc2UgY2FuY2VsbGluZyBoaWRlJyk7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1vZHVsZS5oaWRlKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBkZW55OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmKHNldHRpbmdzLm9uRGVueS5jYWxsKGVsZW1lbnQsICQodGhpcykpID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICBtb2R1bGUudmVyYm9zZSgnRGVueSBjYWxsYmFjayByZXR1cm5lZCBmYWxzZSBjYW5jZWxsaW5nIGhpZGUnKTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbW9kdWxlLmhpZGUoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNsb3NlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIG1vZHVsZS5oaWRlKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjbGljazogZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIHZhclxuICAgICAgICAgICAgICAkdGFyZ2V0ICAgPSAkKGV2ZW50LnRhcmdldCksXG4gICAgICAgICAgICAgIGlzSW5Nb2RhbCA9ICgkdGFyZ2V0LmNsb3Nlc3Qoc2VsZWN0b3IubW9kYWwpLmxlbmd0aCA+IDApLFxuICAgICAgICAgICAgICBpc0luRE9NICAgPSAkLmNvbnRhaW5zKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgZXZlbnQudGFyZ2V0KVxuICAgICAgICAgICAgO1xuICAgICAgICAgICAgaWYoIWlzSW5Nb2RhbCAmJiBpc0luRE9NKSB7XG4gICAgICAgICAgICAgIG1vZHVsZS5kZWJ1ZygnRGltbWVyIGNsaWNrZWQsIGhpZGluZyBhbGwgbW9kYWxzJyk7XG4gICAgICAgICAgICAgIGlmKCBtb2R1bGUuaXMuYWN0aXZlKCkgKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLnJlbW92ZS5jbGlja2F3YXkoKTtcbiAgICAgICAgICAgICAgICBpZihzZXR0aW5ncy5hbGxvd011bHRpcGxlKSB7XG4gICAgICAgICAgICAgICAgICBtb2R1bGUuaGlkZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIG1vZHVsZS5oaWRlQWxsKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBkZWJvdW5jZTogZnVuY3Rpb24obWV0aG9kLCBkZWxheSkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KG1vZHVsZS50aW1lcik7XG4gICAgICAgICAgICBtb2R1bGUudGltZXIgPSBzZXRUaW1lb3V0KG1ldGhvZCwgZGVsYXkpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAga2V5Ym9hcmQ6IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXJcbiAgICAgICAgICAgICAga2V5Q29kZSAgID0gZXZlbnQud2hpY2gsXG4gICAgICAgICAgICAgIGVzY2FwZUtleSA9IDI3XG4gICAgICAgICAgICA7XG4gICAgICAgICAgICBpZihrZXlDb2RlID09IGVzY2FwZUtleSkge1xuICAgICAgICAgICAgICBpZihzZXR0aW5ncy5jbG9zYWJsZSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5kZWJ1ZygnRXNjYXBlIGtleSBwcmVzc2VkIGhpZGluZyBtb2RhbCcpO1xuICAgICAgICAgICAgICAgIG1vZHVsZS5oaWRlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmRlYnVnKCdFc2NhcGUga2V5IHByZXNzZWQsIGJ1dCBjbG9zYWJsZSBpcyBzZXQgdG8gZmFsc2UnKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcmVzaXplOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmKCAkZGltbWFibGUuZGltbWVyKCdpcyBhY3RpdmUnKSApIHtcbiAgICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKG1vZHVsZS5yZWZyZXNoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdG9nZ2xlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiggbW9kdWxlLmlzLmFjdGl2ZSgpIHx8IG1vZHVsZS5pcy5hbmltYXRpbmcoKSApIHtcbiAgICAgICAgICAgIG1vZHVsZS5oaWRlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbW9kdWxlLnNob3coKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2hvdzogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICBjYWxsYmFjayA9ICQuaXNGdW5jdGlvbihjYWxsYmFjaylcbiAgICAgICAgICAgID8gY2FsbGJhY2tcbiAgICAgICAgICAgIDogZnVuY3Rpb24oKXt9XG4gICAgICAgICAgO1xuICAgICAgICAgIG1vZHVsZS5yZWZyZXNoTW9kYWxzKCk7XG4gICAgICAgICAgbW9kdWxlLnNob3dNb2RhbChjYWxsYmFjayk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaGlkZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICBjYWxsYmFjayA9ICQuaXNGdW5jdGlvbihjYWxsYmFjaylcbiAgICAgICAgICAgID8gY2FsbGJhY2tcbiAgICAgICAgICAgIDogZnVuY3Rpb24oKXt9XG4gICAgICAgICAgO1xuICAgICAgICAgIG1vZHVsZS5yZWZyZXNoTW9kYWxzKCk7XG4gICAgICAgICAgbW9kdWxlLmhpZGVNb2RhbChjYWxsYmFjayk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2hvd01vZGFsOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICAgIGNhbGxiYWNrID0gJC5pc0Z1bmN0aW9uKGNhbGxiYWNrKVxuICAgICAgICAgICAgPyBjYWxsYmFja1xuICAgICAgICAgICAgOiBmdW5jdGlvbigpe31cbiAgICAgICAgICA7XG4gICAgICAgICAgaWYoIG1vZHVsZS5pcy5hbmltYXRpbmcoKSB8fCAhbW9kdWxlLmlzLmFjdGl2ZSgpICkge1xuXG4gICAgICAgICAgICBtb2R1bGUuc2hvd0RpbW1lcigpO1xuICAgICAgICAgICAgbW9kdWxlLmNhY2hlU2l6ZXMoKTtcbiAgICAgICAgICAgIG1vZHVsZS5zZXQucG9zaXRpb24oKTtcbiAgICAgICAgICAgIG1vZHVsZS5zZXQuc2NyZWVuSGVpZ2h0KCk7XG4gICAgICAgICAgICBtb2R1bGUuc2V0LnR5cGUoKTtcbiAgICAgICAgICAgIG1vZHVsZS5zZXQuY2xpY2thd2F5KCk7XG5cbiAgICAgICAgICAgIGlmKCAhc2V0dGluZ3MuYWxsb3dNdWx0aXBsZSAmJiBtb2R1bGUub3RoZXJzLmFjdGl2ZSgpICkge1xuICAgICAgICAgICAgICBtb2R1bGUuaGlkZU90aGVycyhtb2R1bGUuc2hvd01vZGFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBzZXR0aW5ncy5vblNob3cuY2FsbChlbGVtZW50KTtcbiAgICAgICAgICAgICAgaWYoc2V0dGluZ3MudHJhbnNpdGlvbiAmJiAkLmZuLnRyYW5zaXRpb24gIT09IHVuZGVmaW5lZCAmJiAkbW9kdWxlLnRyYW5zaXRpb24oJ2lzIHN1cHBvcnRlZCcpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmRlYnVnKCdTaG93aW5nIG1vZGFsIHdpdGggY3NzIGFuaW1hdGlvbnMnKTtcbiAgICAgICAgICAgICAgICAkbW9kdWxlXG4gICAgICAgICAgICAgICAgICAudHJhbnNpdGlvbih7XG4gICAgICAgICAgICAgICAgICAgIGRlYnVnICAgICAgIDogc2V0dGluZ3MuZGVidWcsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbiAgIDogc2V0dGluZ3MudHJhbnNpdGlvbiArICcgaW4nLFxuICAgICAgICAgICAgICAgICAgICBxdWV1ZSAgICAgICA6IHNldHRpbmdzLnF1ZXVlLFxuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbiAgICA6IHNldHRpbmdzLmR1cmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICB1c2VGYWlsU2FmZSA6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG9uQ29tcGxldGUgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5vblZpc2libGUuYXBwbHkoZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgaWYoc2V0dGluZ3Mua2V5Ym9hcmRTaG9ydGN1dHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZS5hZGQua2V5Ym9hcmRTaG9ydGN1dHMoKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgbW9kdWxlLnNhdmUuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICBtb2R1bGUuc2V0LmFjdGl2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgIGlmKHNldHRpbmdzLmF1dG9mb2N1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlLnNldC5hdXRvZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmVycm9yKGVycm9yLm5vVHJhbnNpdGlvbik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtb2R1bGUuZGVidWcoJ01vZGFsIGlzIGFscmVhZHkgdmlzaWJsZScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBoaWRlTW9kYWw6IGZ1bmN0aW9uKGNhbGxiYWNrLCBrZWVwRGltbWVkKSB7XG4gICAgICAgICAgY2FsbGJhY2sgPSAkLmlzRnVuY3Rpb24oY2FsbGJhY2spXG4gICAgICAgICAgICA/IGNhbGxiYWNrXG4gICAgICAgICAgICA6IGZ1bmN0aW9uKCl7fVxuICAgICAgICAgIDtcbiAgICAgICAgICBtb2R1bGUuZGVidWcoJ0hpZGluZyBtb2RhbCcpO1xuICAgICAgICAgIGlmKHNldHRpbmdzLm9uSGlkZS5jYWxsKGVsZW1lbnQsICQodGhpcykpID09PSBmYWxzZSkge1xuICAgICAgICAgICAgbW9kdWxlLnZlcmJvc2UoJ0hpZGUgY2FsbGJhY2sgcmV0dXJuZWQgZmFsc2UgY2FuY2VsbGluZyBoaWRlJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYoIG1vZHVsZS5pcy5hbmltYXRpbmcoKSB8fCBtb2R1bGUuaXMuYWN0aXZlKCkgKSB7XG4gICAgICAgICAgICBpZihzZXR0aW5ncy50cmFuc2l0aW9uICYmICQuZm4udHJhbnNpdGlvbiAhPT0gdW5kZWZpbmVkICYmICRtb2R1bGUudHJhbnNpdGlvbignaXMgc3VwcG9ydGVkJykpIHtcbiAgICAgICAgICAgICAgbW9kdWxlLnJlbW92ZS5hY3RpdmUoKTtcbiAgICAgICAgICAgICAgJG1vZHVsZVxuICAgICAgICAgICAgICAgIC50cmFuc2l0aW9uKHtcbiAgICAgICAgICAgICAgICAgIGRlYnVnICAgICAgIDogc2V0dGluZ3MuZGVidWcsXG4gICAgICAgICAgICAgICAgICBhbmltYXRpb24gICA6IHNldHRpbmdzLnRyYW5zaXRpb24gKyAnIG91dCcsXG4gICAgICAgICAgICAgICAgICBxdWV1ZSAgICAgICA6IHNldHRpbmdzLnF1ZXVlLFxuICAgICAgICAgICAgICAgICAgZHVyYXRpb24gICAgOiBzZXR0aW5ncy5kdXJhdGlvbixcbiAgICAgICAgICAgICAgICAgIHVzZUZhaWxTYWZlIDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIG9uU3RhcnQgICAgIDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmKCFtb2R1bGUub3RoZXJzLmFjdGl2ZSgpICYmICFrZWVwRGltbWVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgbW9kdWxlLmhpZGVEaW1tZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZihzZXR0aW5ncy5rZXlib2FyZFNob3J0Y3V0cykge1xuICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZS5yZW1vdmUua2V5Ym9hcmRTaG9ydGN1dHMoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIG9uQ29tcGxldGUgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Mub25IaWRkZW4uY2FsbChlbGVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlLnJlc3RvcmUuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgbW9kdWxlLmVycm9yKGVycm9yLm5vVHJhbnNpdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHNob3dEaW1tZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmKCRkaW1tYWJsZS5kaW1tZXIoJ2lzIGFuaW1hdGluZycpIHx8ICEkZGltbWFibGUuZGltbWVyKCdpcyBhY3RpdmUnKSApIHtcbiAgICAgICAgICAgIG1vZHVsZS5kZWJ1ZygnU2hvd2luZyBkaW1tZXInKTtcbiAgICAgICAgICAgICRkaW1tYWJsZS5kaW1tZXIoJ3Nob3cnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtb2R1bGUuZGVidWcoJ0RpbW1lciBhbHJlYWR5IHZpc2libGUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgaGlkZURpbW1lcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYoICRkaW1tYWJsZS5kaW1tZXIoJ2lzIGFuaW1hdGluZycpIHx8ICgkZGltbWFibGUuZGltbWVyKCdpcyBhY3RpdmUnKSkgKSB7XG4gICAgICAgICAgICAkZGltbWFibGUuZGltbWVyKCdoaWRlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIG1vZHVsZS5yZW1vdmUuY2xpY2thd2F5KCk7XG4gICAgICAgICAgICAgIG1vZHVsZS5yZW1vdmUuc2NyZWVuSGVpZ2h0KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtb2R1bGUuZGVidWcoJ0RpbW1lciBpcyBub3QgdmlzaWJsZSBjYW5ub3QgaGlkZScpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBoaWRlQWxsOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICAgIHZhclxuICAgICAgICAgICAgJHZpc2libGVNb2RhbHMgPSAkYWxsTW9kYWxzLmZpbHRlcignLicgKyBjbGFzc05hbWUuYWN0aXZlICsgJywgLicgKyBjbGFzc05hbWUuYW5pbWF0aW5nKVxuICAgICAgICAgIDtcbiAgICAgICAgICBjYWxsYmFjayA9ICQuaXNGdW5jdGlvbihjYWxsYmFjaylcbiAgICAgICAgICAgID8gY2FsbGJhY2tcbiAgICAgICAgICAgIDogZnVuY3Rpb24oKXt9XG4gICAgICAgICAgO1xuICAgICAgICAgIGlmKCAkdmlzaWJsZU1vZGFscy5sZW5ndGggPiAwICkge1xuICAgICAgICAgICAgbW9kdWxlLmRlYnVnKCdIaWRpbmcgYWxsIHZpc2libGUgbW9kYWxzJyk7XG4gICAgICAgICAgICBtb2R1bGUuaGlkZURpbW1lcigpO1xuICAgICAgICAgICAgJHZpc2libGVNb2RhbHNcbiAgICAgICAgICAgICAgLm1vZGFsKCdoaWRlIG1vZGFsJywgY2FsbGJhY2spXG4gICAgICAgICAgICA7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGhpZGVPdGhlcnM6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgICAgdmFyXG4gICAgICAgICAgICAkdmlzaWJsZU1vZGFscyA9ICRvdGhlck1vZGFscy5maWx0ZXIoJy4nICsgY2xhc3NOYW1lLmFjdGl2ZSArICcsIC4nICsgY2xhc3NOYW1lLmFuaW1hdGluZylcbiAgICAgICAgICA7XG4gICAgICAgICAgY2FsbGJhY2sgPSAkLmlzRnVuY3Rpb24oY2FsbGJhY2spXG4gICAgICAgICAgICA/IGNhbGxiYWNrXG4gICAgICAgICAgICA6IGZ1bmN0aW9uKCl7fVxuICAgICAgICAgIDtcbiAgICAgICAgICBpZiggJHZpc2libGVNb2RhbHMubGVuZ3RoID4gMCApIHtcbiAgICAgICAgICAgIG1vZHVsZS5kZWJ1ZygnSGlkaW5nIG90aGVyIG1vZGFscycsICRvdGhlck1vZGFscyk7XG4gICAgICAgICAgICAkdmlzaWJsZU1vZGFsc1xuICAgICAgICAgICAgICAubW9kYWwoJ2hpZGUgbW9kYWwnLCBjYWxsYmFjaywgdHJ1ZSlcbiAgICAgICAgICAgIDtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgb3RoZXJzOiB7XG4gICAgICAgICAgYWN0aXZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAoJG90aGVyTW9kYWxzLmZpbHRlcignLicgKyBjbGFzc05hbWUuYWN0aXZlKS5sZW5ndGggPiAwKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGFuaW1hdGluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gKCRvdGhlck1vZGFscy5maWx0ZXIoJy4nICsgY2xhc3NOYW1lLmFuaW1hdGluZykubGVuZ3RoID4gMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG5cbiAgICAgICAgYWRkOiB7XG4gICAgICAgICAga2V5Ym9hcmRTaG9ydGN1dHM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbW9kdWxlLnZlcmJvc2UoJ0FkZGluZyBrZXlib2FyZCBzaG9ydGN1dHMnKTtcbiAgICAgICAgICAgICRkb2N1bWVudFxuICAgICAgICAgICAgICAub24oJ2tleXVwJyArIGV2ZW50TmFtZXNwYWNlLCBtb2R1bGUuZXZlbnQua2V5Ym9hcmQpXG4gICAgICAgICAgICA7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHNhdmU6IHtcbiAgICAgICAgICBmb2N1czogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkZm9jdXNlZEVsZW1lbnQgPSAkKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpLmJsdXIoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVzdG9yZToge1xuICAgICAgICAgIGZvY3VzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmKCRmb2N1c2VkRWxlbWVudCAmJiAkZm9jdXNlZEVsZW1lbnQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAkZm9jdXNlZEVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVtb3ZlOiB7XG4gICAgICAgICAgYWN0aXZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICRtb2R1bGUucmVtb3ZlQ2xhc3MoY2xhc3NOYW1lLmFjdGl2ZSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjbGlja2F3YXk6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYoc2V0dGluZ3MuY2xvc2FibGUpIHtcbiAgICAgICAgICAgICAgJGRpbW1lclxuICAgICAgICAgICAgICAgIC5vZmYoJ2NsaWNrJyArIGVsZW1lbnRFdmVudE5hbWVzcGFjZSlcbiAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keVN0eWxlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmKCRib2R5LmF0dHIoJ3N0eWxlJykgPT09ICcnKSB7XG4gICAgICAgICAgICAgIG1vZHVsZS52ZXJib3NlKCdSZW1vdmluZyBzdHlsZSBhdHRyaWJ1dGUnKTtcbiAgICAgICAgICAgICAgJGJvZHkucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHNjcmVlbkhlaWdodDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBtb2R1bGUuZGVidWcoJ1JlbW92aW5nIHBhZ2UgaGVpZ2h0Jyk7XG4gICAgICAgICAgICAkYm9keVxuICAgICAgICAgICAgICAuY3NzKCdoZWlnaHQnLCAnJylcbiAgICAgICAgICAgIDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGtleWJvYXJkU2hvcnRjdXRzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIG1vZHVsZS52ZXJib3NlKCdSZW1vdmluZyBrZXlib2FyZCBzaG9ydGN1dHMnKTtcbiAgICAgICAgICAgICRkb2N1bWVudFxuICAgICAgICAgICAgICAub2ZmKCdrZXl1cCcgKyBldmVudE5hbWVzcGFjZSlcbiAgICAgICAgICAgIDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNjcm9sbGluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkZGltbWFibGUucmVtb3ZlQ2xhc3MoY2xhc3NOYW1lLnNjcm9sbGluZyk7XG4gICAgICAgICAgICAkbW9kdWxlLnJlbW92ZUNsYXNzKGNsYXNzTmFtZS5zY3JvbGxpbmcpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBjYWNoZVNpemVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXJcbiAgICAgICAgICAgIG1vZGFsSGVpZ2h0ID0gJG1vZHVsZS5vdXRlckhlaWdodCgpXG4gICAgICAgICAgO1xuICAgICAgICAgIGlmKG1vZHVsZS5jYWNoZSA9PT0gdW5kZWZpbmVkIHx8IG1vZGFsSGVpZ2h0ICE9PSAwKSB7XG4gICAgICAgICAgICBtb2R1bGUuY2FjaGUgPSB7XG4gICAgICAgICAgICAgIHBhZ2VIZWlnaHQgICAgOiAkKGRvY3VtZW50KS5vdXRlckhlaWdodCgpLFxuICAgICAgICAgICAgICBoZWlnaHQgICAgICAgIDogbW9kYWxIZWlnaHQgKyBzZXR0aW5ncy5vZmZzZXQsXG4gICAgICAgICAgICAgIGNvbnRleHRIZWlnaHQgOiAoc2V0dGluZ3MuY29udGV4dCA9PSAnYm9keScpXG4gICAgICAgICAgICAgICAgPyAkKHdpbmRvdykuaGVpZ2h0KClcbiAgICAgICAgICAgICAgICA6ICRkaW1tYWJsZS5oZWlnaHQoKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbW9kdWxlLmRlYnVnKCdDYWNoaW5nIG1vZGFsIGFuZCBjb250YWluZXIgc2l6ZXMnLCBtb2R1bGUuY2FjaGUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNhbjoge1xuICAgICAgICAgIGZpdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gKCAoIG1vZHVsZS5jYWNoZS5oZWlnaHQgKyAoc2V0dGluZ3MucGFkZGluZyAqIDIpICkgPCBtb2R1bGUuY2FjaGUuY29udGV4dEhlaWdodCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGlzOiB7XG4gICAgICAgICAgYWN0aXZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAkbW9kdWxlLmhhc0NsYXNzKGNsYXNzTmFtZS5hY3RpdmUpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgYW5pbWF0aW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAkbW9kdWxlLnRyYW5zaXRpb24oJ2lzIHN1cHBvcnRlZCcpXG4gICAgICAgICAgICAgID8gJG1vZHVsZS50cmFuc2l0aW9uKCdpcyBhbmltYXRpbmcnKVxuICAgICAgICAgICAgICA6ICRtb2R1bGUuaXMoJzp2aXNpYmxlJylcbiAgICAgICAgICAgIDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNjcm9sbGluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gJGRpbW1hYmxlLmhhc0NsYXNzKGNsYXNzTmFtZS5zY3JvbGxpbmcpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbW9kZXJuQnJvd3NlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAvLyBhcHBOYW1lIGZvciBJRTExIHJlcG9ydHMgJ05ldHNjYXBlJyBjYW4gbm8gbG9uZ2VyIHVzZVxuICAgICAgICAgICAgcmV0dXJuICEod2luZG93LkFjdGl2ZVhPYmplY3QgfHwgXCJBY3RpdmVYT2JqZWN0XCIgaW4gd2luZG93KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0OiB7XG4gICAgICAgICAgYXV0b2ZvY3VzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhclxuICAgICAgICAgICAgICAkaW5wdXRzICAgID0gJG1vZHVsZS5maW5kKCdbdGFiaW5kZXhdLCA6aW5wdXQnKS5maWx0ZXIoJzp2aXNpYmxlJyksXG4gICAgICAgICAgICAgICRhdXRvZm9jdXMgPSAkaW5wdXRzLmZpbHRlcignW2F1dG9mb2N1c10nKSxcbiAgICAgICAgICAgICAgJGlucHV0ICAgICA9ICgkYXV0b2ZvY3VzLmxlbmd0aCA+IDApXG4gICAgICAgICAgICAgICAgPyAkYXV0b2ZvY3VzLmZpcnN0KClcbiAgICAgICAgICAgICAgICA6ICRpbnB1dHMuZmlyc3QoKVxuICAgICAgICAgICAgO1xuICAgICAgICAgICAgaWYoJGlucHV0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgJGlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjbGlja2F3YXk6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYoc2V0dGluZ3MuY2xvc2FibGUpIHtcbiAgICAgICAgICAgICAgJGRpbW1lclxuICAgICAgICAgICAgICAgIC5vbignY2xpY2snICsgZWxlbWVudEV2ZW50TmFtZXNwYWNlLCBtb2R1bGUuZXZlbnQuY2xpY2spXG4gICAgICAgICAgICAgIDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHNjcmVlbkhlaWdodDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiggbW9kdWxlLmNhbi5maXQoKSApIHtcbiAgICAgICAgICAgICAgJGJvZHkuY3NzKCdoZWlnaHQnLCAnJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgbW9kdWxlLmRlYnVnKCdNb2RhbCBpcyB0YWxsZXIgdGhhbiBwYWdlIGNvbnRlbnQsIHJlc2l6aW5nIHBhZ2UgaGVpZ2h0Jyk7XG4gICAgICAgICAgICAgICRib2R5XG4gICAgICAgICAgICAgICAgLmNzcygnaGVpZ2h0JywgbW9kdWxlLmNhY2hlLmhlaWdodCArIChzZXR0aW5ncy5wYWRkaW5nICogMikgKVxuICAgICAgICAgICAgICA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBhY3RpdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJG1vZHVsZS5hZGRDbGFzcyhjbGFzc05hbWUuYWN0aXZlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNjcm9sbGluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkZGltbWFibGUuYWRkQ2xhc3MoY2xhc3NOYW1lLnNjcm9sbGluZyk7XG4gICAgICAgICAgICAkbW9kdWxlLmFkZENsYXNzKGNsYXNzTmFtZS5zY3JvbGxpbmcpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgdHlwZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZihtb2R1bGUuY2FuLmZpdCgpKSB7XG4gICAgICAgICAgICAgIG1vZHVsZS52ZXJib3NlKCdNb2RhbCBmaXRzIG9uIHNjcmVlbicpO1xuICAgICAgICAgICAgICBpZighbW9kdWxlLm90aGVycy5hY3RpdmUoKSAmJiAhbW9kdWxlLm90aGVycy5hbmltYXRpbmcoKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5yZW1vdmUuc2Nyb2xsaW5nKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBtb2R1bGUudmVyYm9zZSgnTW9kYWwgY2Fubm90IGZpdCBvbiBzY3JlZW4gc2V0dGluZyB0byBzY3JvbGxpbmcnKTtcbiAgICAgICAgICAgICAgbW9kdWxlLnNldC5zY3JvbGxpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHBvc2l0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIG1vZHVsZS52ZXJib3NlKCdDZW50ZXJpbmcgbW9kYWwgb24gcGFnZScsIG1vZHVsZS5jYWNoZSk7XG4gICAgICAgICAgICBpZihtb2R1bGUuY2FuLmZpdCgpKSB7XG4gICAgICAgICAgICAgICRtb2R1bGVcbiAgICAgICAgICAgICAgICAuY3NzKHtcbiAgICAgICAgICAgICAgICAgIHRvcDogJycsXG4gICAgICAgICAgICAgICAgICBtYXJnaW5Ub3A6IC0obW9kdWxlLmNhY2hlLmhlaWdodCAvIDIpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICRtb2R1bGVcbiAgICAgICAgICAgICAgICAuY3NzKHtcbiAgICAgICAgICAgICAgICAgIG1hcmdpblRvcCA6ICcnLFxuICAgICAgICAgICAgICAgICAgdG9wICAgICAgIDogJGRvY3VtZW50LnNjcm9sbFRvcCgpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgdW5kZXRhY2hlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkZGltbWFibGUuYWRkQ2xhc3MoY2xhc3NOYW1lLnVuZGV0YWNoZWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBzZXR0aW5nOiBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgICAgIG1vZHVsZS5kZWJ1ZygnQ2hhbmdpbmcgc2V0dGluZycsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgICBpZiggJC5pc1BsYWluT2JqZWN0KG5hbWUpICkge1xuICAgICAgICAgICAgJC5leHRlbmQodHJ1ZSwgc2V0dGluZ3MsIG5hbWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIGlmKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmKCQuaXNQbGFpbk9iamVjdChzZXR0aW5nc1tuYW1lXSkpIHtcbiAgICAgICAgICAgICAgJC5leHRlbmQodHJ1ZSwgc2V0dGluZ3NbbmFtZV0sIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBzZXR0aW5nc1tuYW1lXSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBzZXR0aW5nc1tuYW1lXTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGludGVybmFsOiBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgICAgIGlmKCAkLmlzUGxhaW5PYmplY3QobmFtZSkgKSB7XG4gICAgICAgICAgICAkLmV4dGVuZCh0cnVlLCBtb2R1bGUsIG5hbWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIGlmKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG1vZHVsZVtuYW1lXSA9IHZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBtb2R1bGVbbmFtZV07XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBkZWJ1ZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYoIXNldHRpbmdzLnNpbGVudCAmJiBzZXR0aW5ncy5kZWJ1Zykge1xuICAgICAgICAgICAgaWYoc2V0dGluZ3MucGVyZm9ybWFuY2UpIHtcbiAgICAgICAgICAgICAgbW9kdWxlLnBlcmZvcm1hbmNlLmxvZyhhcmd1bWVudHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgIG1vZHVsZS5kZWJ1ZyA9IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmNhbGwoY29uc29sZS5pbmZvLCBjb25zb2xlLCBzZXR0aW5ncy5uYW1lICsgJzonKTtcbiAgICAgICAgICAgICAgbW9kdWxlLmRlYnVnLmFwcGx5KGNvbnNvbGUsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB2ZXJib3NlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZighc2V0dGluZ3Muc2lsZW50ICYmIHNldHRpbmdzLnZlcmJvc2UgJiYgc2V0dGluZ3MuZGVidWcpIHtcbiAgICAgICAgICAgIGlmKHNldHRpbmdzLnBlcmZvcm1hbmNlKSB7XG4gICAgICAgICAgICAgIG1vZHVsZS5wZXJmb3JtYW5jZS5sb2coYXJndW1lbnRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBtb2R1bGUudmVyYm9zZSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmNhbGwoY29uc29sZS5pbmZvLCBjb25zb2xlLCBzZXR0aW5ncy5uYW1lICsgJzonKTtcbiAgICAgICAgICAgICAgbW9kdWxlLnZlcmJvc2UuYXBwbHkoY29uc29sZSwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZighc2V0dGluZ3Muc2lsZW50KSB7XG4gICAgICAgICAgICBtb2R1bGUuZXJyb3IgPSBGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5jYWxsKGNvbnNvbGUuZXJyb3IsIGNvbnNvbGUsIHNldHRpbmdzLm5hbWUgKyAnOicpO1xuICAgICAgICAgICAgbW9kdWxlLmVycm9yLmFwcGx5KGNvbnNvbGUsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBwZXJmb3JtYW5jZToge1xuICAgICAgICAgIGxvZzogZnVuY3Rpb24obWVzc2FnZSkge1xuICAgICAgICAgICAgdmFyXG4gICAgICAgICAgICAgIGN1cnJlbnRUaW1lLFxuICAgICAgICAgICAgICBleGVjdXRpb25UaW1lLFxuICAgICAgICAgICAgICBwcmV2aW91c1RpbWVcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIGlmKHNldHRpbmdzLnBlcmZvcm1hbmNlKSB7XG4gICAgICAgICAgICAgIGN1cnJlbnRUaW1lICAgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgICAgICAgcHJldmlvdXNUaW1lICA9IHRpbWUgfHwgY3VycmVudFRpbWU7XG4gICAgICAgICAgICAgIGV4ZWN1dGlvblRpbWUgPSBjdXJyZW50VGltZSAtIHByZXZpb3VzVGltZTtcbiAgICAgICAgICAgICAgdGltZSAgICAgICAgICA9IGN1cnJlbnRUaW1lO1xuICAgICAgICAgICAgICBwZXJmb3JtYW5jZS5wdXNoKHtcbiAgICAgICAgICAgICAgICAnTmFtZScgICAgICAgICAgIDogbWVzc2FnZVswXSxcbiAgICAgICAgICAgICAgICAnQXJndW1lbnRzJyAgICAgIDogW10uc2xpY2UuY2FsbChtZXNzYWdlLCAxKSB8fCAnJyxcbiAgICAgICAgICAgICAgICAnRWxlbWVudCcgICAgICAgIDogZWxlbWVudCxcbiAgICAgICAgICAgICAgICAnRXhlY3V0aW9uIFRpbWUnIDogZXhlY3V0aW9uVGltZVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNsZWFyVGltZW91dChtb2R1bGUucGVyZm9ybWFuY2UudGltZXIpO1xuICAgICAgICAgICAgbW9kdWxlLnBlcmZvcm1hbmNlLnRpbWVyID0gc2V0VGltZW91dChtb2R1bGUucGVyZm9ybWFuY2UuZGlzcGxheSwgNTAwKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRpc3BsYXk6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyXG4gICAgICAgICAgICAgIHRpdGxlID0gc2V0dGluZ3MubmFtZSArICc6JyxcbiAgICAgICAgICAgICAgdG90YWxUaW1lID0gMFxuICAgICAgICAgICAgO1xuICAgICAgICAgICAgdGltZSA9IGZhbHNlO1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KG1vZHVsZS5wZXJmb3JtYW5jZS50aW1lcik7XG4gICAgICAgICAgICAkLmVhY2gocGVyZm9ybWFuY2UsIGZ1bmN0aW9uKGluZGV4LCBkYXRhKSB7XG4gICAgICAgICAgICAgIHRvdGFsVGltZSArPSBkYXRhWydFeGVjdXRpb24gVGltZSddO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aXRsZSArPSAnICcgKyB0b3RhbFRpbWUgKyAnbXMnO1xuICAgICAgICAgICAgaWYobW9kdWxlU2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgdGl0bGUgKz0gJyBcXCcnICsgbW9kdWxlU2VsZWN0b3IgKyAnXFwnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKCAoY29uc29sZS5ncm91cCAhPT0gdW5kZWZpbmVkIHx8IGNvbnNvbGUudGFibGUgIT09IHVuZGVmaW5lZCkgJiYgcGVyZm9ybWFuY2UubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmdyb3VwQ29sbGFwc2VkKHRpdGxlKTtcbiAgICAgICAgICAgICAgaWYoY29uc29sZS50YWJsZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUudGFibGUocGVyZm9ybWFuY2UpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICQuZWFjaChwZXJmb3JtYW5jZSwgZnVuY3Rpb24oaW5kZXgsIGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGFbJ05hbWUnXSArICc6ICcgKyBkYXRhWydFeGVjdXRpb24gVGltZSddKydtcycpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBlcmZvcm1hbmNlID0gW107XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBpbnZva2U6IGZ1bmN0aW9uKHF1ZXJ5LCBwYXNzZWRBcmd1bWVudHMsIGNvbnRleHQpIHtcbiAgICAgICAgICB2YXJcbiAgICAgICAgICAgIG9iamVjdCA9IGluc3RhbmNlLFxuICAgICAgICAgICAgbWF4RGVwdGgsXG4gICAgICAgICAgICBmb3VuZCxcbiAgICAgICAgICAgIHJlc3BvbnNlXG4gICAgICAgICAgO1xuICAgICAgICAgIHBhc3NlZEFyZ3VtZW50cyA9IHBhc3NlZEFyZ3VtZW50cyB8fCBxdWVyeUFyZ3VtZW50cztcbiAgICAgICAgICBjb250ZXh0ICAgICAgICAgPSBlbGVtZW50ICAgICAgICAgfHwgY29udGV4dDtcbiAgICAgICAgICBpZih0eXBlb2YgcXVlcnkgPT0gJ3N0cmluZycgJiYgb2JqZWN0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHF1ZXJ5ICAgID0gcXVlcnkuc3BsaXQoL1tcXC4gXS8pO1xuICAgICAgICAgICAgbWF4RGVwdGggPSBxdWVyeS5sZW5ndGggLSAxO1xuICAgICAgICAgICAgJC5lYWNoKHF1ZXJ5LCBmdW5jdGlvbihkZXB0aCwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgdmFyIGNhbWVsQ2FzZVZhbHVlID0gKGRlcHRoICE9IG1heERlcHRoKVxuICAgICAgICAgICAgICAgID8gdmFsdWUgKyBxdWVyeVtkZXB0aCArIDFdLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcXVlcnlbZGVwdGggKyAxXS5zbGljZSgxKVxuICAgICAgICAgICAgICAgIDogcXVlcnlcbiAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICBpZiggJC5pc1BsYWluT2JqZWN0KCBvYmplY3RbY2FtZWxDYXNlVmFsdWVdICkgJiYgKGRlcHRoICE9IG1heERlcHRoKSApIHtcbiAgICAgICAgICAgICAgICBvYmplY3QgPSBvYmplY3RbY2FtZWxDYXNlVmFsdWVdO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGVsc2UgaWYoIG9iamVjdFtjYW1lbENhc2VWYWx1ZV0gIT09IHVuZGVmaW5lZCApIHtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IG9iamVjdFtjYW1lbENhc2VWYWx1ZV07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGVsc2UgaWYoICQuaXNQbGFpbk9iamVjdCggb2JqZWN0W3ZhbHVlXSApICYmIChkZXB0aCAhPSBtYXhEZXB0aCkgKSB7XG4gICAgICAgICAgICAgICAgb2JqZWN0ID0gb2JqZWN0W3ZhbHVlXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBlbHNlIGlmKCBvYmplY3RbdmFsdWVdICE9PSB1bmRlZmluZWQgKSB7XG4gICAgICAgICAgICAgICAgZm91bmQgPSBvYmplY3RbdmFsdWVdO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoICQuaXNGdW5jdGlvbiggZm91bmQgKSApIHtcbiAgICAgICAgICAgIHJlc3BvbnNlID0gZm91bmQuYXBwbHkoY29udGV4dCwgcGFzc2VkQXJndW1lbnRzKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSBpZihmb3VuZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXNwb25zZSA9IGZvdW5kO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZigkLmlzQXJyYXkocmV0dXJuZWRWYWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybmVkVmFsdWUucHVzaChyZXNwb25zZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2UgaWYocmV0dXJuZWRWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm5lZFZhbHVlID0gW3JldHVybmVkVmFsdWUsIHJlc3BvbnNlXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSBpZihyZXNwb25zZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm5lZFZhbHVlID0gcmVzcG9uc2U7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBmb3VuZDtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgaWYobWV0aG9kSW52b2tlZCkge1xuICAgICAgICBpZihpbnN0YW5jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgbW9kdWxlLmluaXRpYWxpemUoKTtcbiAgICAgICAgfVxuICAgICAgICBtb2R1bGUuaW52b2tlKHF1ZXJ5KTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBpZihpbnN0YW5jZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgaW5zdGFuY2UuaW52b2tlKCdkZXN0cm95Jyk7XG4gICAgICAgIH1cbiAgICAgICAgbW9kdWxlLmluaXRpYWxpemUoKTtcbiAgICAgIH1cbiAgICB9KVxuICA7XG5cbiAgcmV0dXJuIChyZXR1cm5lZFZhbHVlICE9PSB1bmRlZmluZWQpXG4gICAgPyByZXR1cm5lZFZhbHVlXG4gICAgOiB0aGlzXG4gIDtcbn07XG5cbiQuZm4ubW9kYWwuc2V0dGluZ3MgPSB7XG5cbiAgbmFtZSAgICAgICAgICAgOiAnTW9kYWwnLFxuICBuYW1lc3BhY2UgICAgICA6ICdtb2RhbCcsXG5cbiAgc2lsZW50ICAgICAgICAgOiBmYWxzZSxcbiAgZGVidWcgICAgICAgICAgOiBmYWxzZSxcbiAgdmVyYm9zZSAgICAgICAgOiBmYWxzZSxcbiAgcGVyZm9ybWFuY2UgICAgOiB0cnVlLFxuXG4gIG9ic2VydmVDaGFuZ2VzIDogZmFsc2UsXG5cbiAgYWxsb3dNdWx0aXBsZSAgOiBmYWxzZSxcbiAgZGV0YWNoYWJsZSAgICAgOiB0cnVlLFxuICBjbG9zYWJsZSAgICAgICA6IHRydWUsXG4gIGF1dG9mb2N1cyAgICAgIDogdHJ1ZSxcblxuICBpbnZlcnRlZCAgICAgICA6IGZhbHNlLFxuICBibHVycmluZyAgICAgICA6IGZhbHNlLFxuXG4gIGRpbW1lclNldHRpbmdzIDoge1xuICAgIGNsb3NhYmxlIDogZmFsc2UsXG4gICAgdXNlQ1NTICAgOiB0cnVlXG4gIH0sXG5cbiAgLy8gd2hldGhlciB0byB1c2Uga2V5Ym9hcmQgc2hvcnRjdXRzXG4gIGtleWJvYXJkU2hvcnRjdXRzOiB0cnVlLFxuXG4gIGNvbnRleHQgICAgOiAnYm9keScsXG5cbiAgcXVldWUgICAgICA6IGZhbHNlLFxuICBkdXJhdGlvbiAgIDogNTAwLFxuICBvZmZzZXQgICAgIDogMCxcbiAgdHJhbnNpdGlvbiA6ICdzY2FsZScsXG5cbiAgLy8gcGFkZGluZyB3aXRoIGVkZ2Ugb2YgcGFnZVxuICBwYWRkaW5nICAgIDogNTAsXG5cbiAgLy8gY2FsbGVkIGJlZm9yZSBzaG93IGFuaW1hdGlvblxuICBvblNob3cgICAgIDogZnVuY3Rpb24oKXt9LFxuXG4gIC8vIGNhbGxlZCBhZnRlciBzaG93IGFuaW1hdGlvblxuICBvblZpc2libGUgIDogZnVuY3Rpb24oKXt9LFxuXG4gIC8vIGNhbGxlZCBiZWZvcmUgaGlkZSBhbmltYXRpb25cbiAgb25IaWRlICAgICA6IGZ1bmN0aW9uKCl7IHJldHVybiB0cnVlOyB9LFxuXG4gIC8vIGNhbGxlZCBhZnRlciBoaWRlIGFuaW1hdGlvblxuICBvbkhpZGRlbiAgIDogZnVuY3Rpb24oKXt9LFxuXG4gIC8vIGNhbGxlZCBhZnRlciBhcHByb3ZlIHNlbGVjdG9yIG1hdGNoXG4gIG9uQXBwcm92ZSAgOiBmdW5jdGlvbigpeyByZXR1cm4gdHJ1ZTsgfSxcblxuICAvLyBjYWxsZWQgYWZ0ZXIgZGVueSBzZWxlY3RvciBtYXRjaFxuICBvbkRlbnkgICAgIDogZnVuY3Rpb24oKXsgcmV0dXJuIHRydWU7IH0sXG5cbiAgc2VsZWN0b3IgICAgOiB7XG4gICAgY2xvc2UgICAgOiAnPiAuY2xvc2UnLFxuICAgIGFwcHJvdmUgIDogJy5hY3Rpb25zIC5wb3NpdGl2ZSwgLmFjdGlvbnMgLmFwcHJvdmUsIC5hY3Rpb25zIC5vaycsXG4gICAgZGVueSAgICAgOiAnLmFjdGlvbnMgLm5lZ2F0aXZlLCAuYWN0aW9ucyAuZGVueSwgLmFjdGlvbnMgLmNhbmNlbCcsXG4gICAgbW9kYWwgICAgOiAnLnVpLm1vZGFsJ1xuICB9LFxuICBlcnJvciA6IHtcbiAgICBkaW1tZXIgICAgOiAnVUkgRGltbWVyLCBhIHJlcXVpcmVkIGNvbXBvbmVudCBpcyBub3QgaW5jbHVkZWQgaW4gdGhpcyBwYWdlJyxcbiAgICBtZXRob2QgICAgOiAnVGhlIG1ldGhvZCB5b3UgY2FsbGVkIGlzIG5vdCBkZWZpbmVkLicsXG4gICAgbm90Rm91bmQgIDogJ1RoZSBlbGVtZW50IHlvdSBzcGVjaWZpZWQgY291bGQgbm90IGJlIGZvdW5kJ1xuICB9LFxuICBjbGFzc05hbWUgOiB7XG4gICAgYWN0aXZlICAgICA6ICdhY3RpdmUnLFxuICAgIGFuaW1hdGluZyAgOiAnYW5pbWF0aW5nJyxcbiAgICBibHVycmluZyAgIDogJ2JsdXJyaW5nJyxcbiAgICBzY3JvbGxpbmcgIDogJ3Njcm9sbGluZycsXG4gICAgdW5kZXRhY2hlZCA6ICd1bmRldGFjaGVkJ1xuICB9XG59O1xuXG5cbn0pKCBqUXVlcnksIHdpbmRvdywgZG9jdW1lbnQgKTtcbiJdfQ==
