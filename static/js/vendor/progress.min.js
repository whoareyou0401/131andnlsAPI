!function(e,t,n,r){"use strict";t="undefined"!=typeof t&&t.Math==Math?t:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),"undefined"!=typeof t&&t.Math==Math?t:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),e.fn.progress=function(t){var a,o=e(this),i=o.selector||"",s=(new Date).getTime(),l=[],c=arguments[0],u="string"==typeof c,d=[].slice.call(arguments,1);return o.each(function(){var o,g,p=e.isPlainObject(t)?e.extend(!0,{},e.fn.progress.settings,t):e.extend({},e.fn.progress.settings),v=p.className,f=p.metadata,m=p.namespace,b=p.selector,h=p.error,x="."+m,y="module-"+m,w=e(this),V=e(this).find(b.bar),C=e(this).find(b.progress),E=e(this).find(b.label),P=this,T=w.data(y),M=!1;g={initialize:function(){g.debug("Initializing progress bar",p),g.set.duration(),g.set.transitionEvent(),g.read.metadata(),g.read.settings(),g.instantiate()},instantiate:function(){g.verbose("Storing instance of progress",g),T=g,w.data(y,g)},destroy:function(){g.verbose("Destroying previous progress for",w),clearInterval(T.interval),g.remove.state(),w.removeData(y),T=r},reset:function(){g.remove.nextValue(),g.update.progress(0)},complete:function(){(g.percent===r||g.percent<100)&&(g.remove.progressPoll(),g.set.percent(100))},read:{metadata:function(){var e={percent:w.data(f.percent),total:w.data(f.total),value:w.data(f.value)};e.percent&&(g.debug("Current percent value set from metadata",e.percent),g.set.percent(e.percent)),e.total&&(g.debug("Total value set from metadata",e.total),g.set.total(e.total)),e.value&&(g.debug("Current value set from metadata",e.value),g.set.value(e.value),g.set.progress(e.value))},settings:function(){p.total!==!1&&(g.debug("Current total set in settings",p.total),g.set.total(p.total)),p.value!==!1&&(g.debug("Current value set in settings",p.value),g.set.value(p.value),g.set.progress(g.value)),p.percent!==!1&&(g.debug("Current percent set in settings",p.percent),g.set.percent(p.percent))}},bind:{transitionEnd:function(e){var t=g.get.transitionEnd();V.one(t+x,function(t){clearTimeout(g.failSafeTimer),e.call(this,t)}),g.failSafeTimer=setTimeout(function(){V.triggerHandler(t)},p.duration+p.failSafeDelay),g.verbose("Adding fail safe timer",g.timer)}},increment:function(e){var t,n,r;g.has.total()?(n=g.get.value(),e=e||1,r=n+e):(n=g.get.percent(),e=e||g.get.randomValue(),r=n+e,t=100,g.debug("Incrementing percentage by",n,r)),r=g.get.normalizedValue(r),g.set.progress(r)},decrement:function(e){var t,n,r=g.get.total();r?(t=g.get.value(),e=e||1,n=t-e,g.debug("Decrementing value by",e,t)):(t=g.get.percent(),e=e||g.get.randomValue(),n=t-e,g.debug("Decrementing percentage by",e,t)),n=g.get.normalizedValue(n),g.set.progress(n)},has:{progressPoll:function(){return g.progressPoll},total:function(){return g.get.total()!==!1}},get:{text:function(e){var t=g.value||0,n=g.total||0,r=M?g.get.displayPercent():g.percent||0,a=g.total>0?n-t:100-r;return e=e||"",e=e.replace("{value}",t).replace("{total}",n).replace("{left}",a).replace("{percent}",r),g.verbose("Adding variables to progress bar text",e),e},normalizedValue:function(e){if(e<0)return g.debug("Value cannot decrement below 0"),0;if(g.has.total()){if(e>g.total)return g.debug("Value cannot increment above total",g.total),g.total}else if(e>100)return g.debug("Value cannot increment above 100 percent"),100;return e},updateInterval:function(){return"auto"==p.updateInterval?p.duration:p.updateInterval},randomValue:function(){return g.debug("Generating random increment percentage"),Math.floor(Math.random()*p.random.max+p.random.min)},numericValue:function(e){return"string"==typeof e?""!==e.replace(/[^\d.]/g,"")&&+e.replace(/[^\d.]/g,""):e},transitionEnd:function(){var e,t=n.createElement("element"),a={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in a)if(t.style[e]!==r)return a[e]},displayPercent:function(){var e=V.width(),t=w.width(),n=parseInt(V.css("min-width"),10),r=e>n?e/t*100:g.percent;return p.precision>0?Math.round(r*(10*p.precision))/(10*p.precision):Math.round(r)},percent:function(){return g.percent||0},value:function(){return g.nextValue||g.value||0},total:function(){return g.total||!1}},create:{progressPoll:function(){g.progressPoll=setTimeout(function(){g.update.toNextValue(),g.remove.progressPoll()},g.get.updateInterval())}},is:{complete:function(){return g.is.success()||g.is.warning()||g.is.error()},success:function(){return w.hasClass(v.success)},warning:function(){return w.hasClass(v.warning)},error:function(){return w.hasClass(v.error)},active:function(){return w.hasClass(v.active)},visible:function(){return w.is(":visible")}},remove:{progressPoll:function(){g.verbose("Removing progress poll timer"),g.progressPoll&&(clearTimeout(g.progressPoll),delete g.progressPoll)},nextValue:function(){g.verbose("Removing progress value stored for next update"),delete g.nextValue},state:function(){g.verbose("Removing stored state"),delete g.total,delete g.percent,delete g.value},active:function(){g.verbose("Removing active state"),w.removeClass(v.active)},success:function(){g.verbose("Removing success state"),w.removeClass(v.success)},warning:function(){g.verbose("Removing warning state"),w.removeClass(v.warning)},error:function(){g.verbose("Removing error state"),w.removeClass(v.error)}},set:{barWidth:function(e){e>100?g.error(h.tooHigh,e):e<0?g.error(h.tooLow,e):(V.css("width",e+"%"),w.attr("data-percent",parseInt(e,10)))},duration:function(e){e=e||p.duration,e="number"==typeof e?e+"ms":e,g.verbose("Setting progress bar transition duration",e),V.css({"transition-duration":e})},percent:function(e){e="string"==typeof e?+e.replace("%",""):e,e=p.precision>0?Math.round(e*(10*p.precision))/(10*p.precision):Math.round(e),g.percent=e,g.has.total()||(g.value=p.precision>0?Math.round(e/100*g.total*(10*p.precision))/(10*p.precision):Math.round(e/100*g.total*10)/10,p.limitValues&&(g.value=g.value>100?100:g.value<0?0:g.value)),g.set.barWidth(e),g.set.labelInterval(),g.set.labels(),p.onChange.call(P,e,g.value,g.total)},labelInterval:function(){var t=function(){g.verbose("Bar finished animating, removing continuous label updates"),clearInterval(g.interval),M=!1,g.set.labels()};clearInterval(g.interval),g.bind.transitionEnd(t),M=!0,g.interval=setInterval(function(){var t=e.contains(n.documentElement,P);t||(clearInterval(g.interval),M=!1),g.set.labels()},p.framerate)},labels:function(){g.verbose("Setting both bar progress and outer label text"),g.set.barLabel(),g.set.state()},label:function(e){e=e||"",e&&(e=g.get.text(e),g.verbose("Setting label to text",e),E.text(e))},state:function(e){e=e!==r?e:g.percent,100===e?p.autoSuccess&&!(g.is.warning()||g.is.error()||g.is.success())?(g.set.success(),g.debug("Automatically triggering success at 100%")):(g.verbose("Reached 100% removing active state"),g.remove.active(),g.remove.progressPoll()):e>0?(g.verbose("Adjusting active progress bar label",e),g.set.active()):(g.remove.active(),g.set.label(p.text.active))},barLabel:function(e){e!==r?C.text(g.get.text(e)):"ratio"==p.label&&g.total?(g.verbose("Adding ratio to bar label"),C.text(g.get.text(p.text.ratio))):"percent"==p.label&&(g.verbose("Adding percentage to bar label"),C.text(g.get.text(p.text.percent)))},active:function(e){e=e||p.text.active,g.debug("Setting active state"),p.showActivity&&!g.is.active()&&w.addClass(v.active),g.remove.warning(),g.remove.error(),g.remove.success(),e=p.onLabelUpdate("active",e,g.value,g.total),e&&g.set.label(e),g.bind.transitionEnd(function(){p.onActive.call(P,g.value,g.total)})},success:function(e){e=e||p.text.success||p.text.active,g.debug("Setting success state"),w.addClass(v.success),g.remove.active(),g.remove.warning(),g.remove.error(),g.complete(),p.text.success?(e=p.onLabelUpdate("success",e,g.value,g.total),g.set.label(e)):(e=p.onLabelUpdate("active",e,g.value,g.total),g.set.label(e)),g.bind.transitionEnd(function(){p.onSuccess.call(P,g.total)})},warning:function(e){e=e||p.text.warning,g.debug("Setting warning state"),w.addClass(v.warning),g.remove.active(),g.remove.success(),g.remove.error(),g.complete(),e=p.onLabelUpdate("warning",e,g.value,g.total),e&&g.set.label(e),g.bind.transitionEnd(function(){p.onWarning.call(P,g.value,g.total)})},error:function(e){e=e||p.text.error,g.debug("Setting error state"),w.addClass(v.error),g.remove.active(),g.remove.success(),g.remove.warning(),g.complete(),e=p.onLabelUpdate("error",e,g.value,g.total),e&&g.set.label(e),g.bind.transitionEnd(function(){p.onError.call(P,g.value,g.total)})},transitionEvent:function(){o=g.get.transitionEnd()},total:function(e){g.total=e},value:function(e){g.value=e},progress:function(e){g.has.progressPoll()?(g.debug("Updated within interval, setting next update to use new value",e),g.set.nextValue(e)):(g.debug("First update in progress update interval, immediately updating",e),g.update.progress(e),g.create.progressPoll())},nextValue:function(e){g.nextValue=e}},update:{toNextValue:function(){var e=g.nextValue;e&&(g.debug("Update interval complete using last updated value",e),g.update.progress(e),g.remove.nextValue())},progress:function(e){var t;e=g.get.numericValue(e),e===!1&&g.error(h.nonNumeric,e),e=g.get.normalizedValue(e),g.has.total()?(g.set.value(e),t=e/g.total*100,g.debug("Calculating percent complete from total",t),g.set.percent(t)):(t=e,g.debug("Setting value to exact percentage value",t),g.set.percent(t))}},setting:function(t,n){if(g.debug("Changing setting",t,n),e.isPlainObject(t))e.extend(!0,p,t);else{if(n===r)return p[t];e.isPlainObject(p[t])?e.extend(!0,p[t],n):p[t]=n}},internal:function(t,n){if(e.isPlainObject(t))e.extend(!0,g,t);else{if(n===r)return g[t];g[t]=n}},debug:function(){!p.silent&&p.debug&&(p.performance?g.performance.log(arguments):(g.debug=Function.prototype.bind.call(console.info,console,p.name+":"),g.debug.apply(console,arguments)))},verbose:function(){!p.silent&&p.verbose&&p.debug&&(p.performance?g.performance.log(arguments):(g.verbose=Function.prototype.bind.call(console.info,console,p.name+":"),g.verbose.apply(console,arguments)))},error:function(){p.silent||(g.error=Function.prototype.bind.call(console.error,console,p.name+":"),g.error.apply(console,arguments))},performance:{log:function(e){var t,n,r;p.performance&&(t=(new Date).getTime(),r=s||t,n=t-r,s=t,l.push({Name:e[0],Arguments:[].slice.call(e,1)||"",Element:P,"Execution Time":n})),clearTimeout(g.performance.timer),g.performance.timer=setTimeout(g.performance.display,500)},display:function(){var t=p.name+":",n=0;s=!1,clearTimeout(g.performance.timer),e.each(l,function(e,t){n+=t["Execution Time"]}),t+=" "+n+"ms",i&&(t+=" '"+i+"'"),(console.group!==r||console.table!==r)&&l.length>0&&(console.groupCollapsed(t),console.table?console.table(l):e.each(l,function(e,t){console.log(t.Name+": "+t["Execution Time"]+"ms")}),console.groupEnd()),l=[]}},invoke:function(t,n,o){var i,s,l,c=T;return n=n||d,o=P||o,"string"==typeof t&&c!==r&&(t=t.split(/[\. ]/),i=t.length-1,e.each(t,function(n,a){var o=n!=i?a+t[n+1].charAt(0).toUpperCase()+t[n+1].slice(1):t;if(e.isPlainObject(c[o])&&n!=i)c=c[o];else{if(c[o]!==r)return s=c[o],!1;if(!e.isPlainObject(c[a])||n==i)return c[a]!==r?(s=c[a],!1):(g.error(h.method,t),!1);c=c[a]}})),e.isFunction(s)?l=s.apply(o,n):s!==r&&(l=s),e.isArray(a)?a.push(l):a!==r?a=[a,l]:l!==r&&(a=l),s}},u?(T===r&&g.initialize(),g.invoke(c)):(T!==r&&T.invoke("destroy"),g.initialize())}),a!==r?a:this},e.fn.progress.settings={name:"Progress",namespace:"progress",silent:!1,debug:!1,verbose:!1,performance:!0,random:{min:2,max:5},duration:300,updateInterval:"auto",autoSuccess:!0,showActivity:!0,limitValues:!0,label:"percent",precision:0,framerate:1e3/30,percent:!1,total:!1,value:!1,failSafeDelay:100,onLabelUpdate:function(e,t,n,r){return t},onChange:function(e,t,n){},onSuccess:function(e){},onActive:function(e,t){},onError:function(e,t){},onWarning:function(e,t){},error:{method:"The method you called is not defined.",nonNumeric:"Progress value is non numeric",tooHigh:"Value specified is above 100%",tooLow:"Value specified is below 0%"},regExp:{variable:/\{\$*[A-z0-9]+\}/g},metadata:{percent:"percent",total:"total",value:"value"},selector:{bar:"> .bar",label:"> .label",progress:".bar > .progress"},text:{active:!1,error:!1,success:!1,warning:!1,percent:"{percent}%",ratio:"{value} of {total}"},className:{active:"active",error:"error",success:"success",warning:"warning"}}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9wcm9ncmVzcy5taW4uanMiXSwibmFtZXMiOlsiZSIsInQiLCJuIiwiciIsIk1hdGgiLCJzZWxmIiwiRnVuY3Rpb24iLCJmbiIsInByb2dyZXNzIiwiYSIsIm8iLCJ0aGlzIiwiaSIsInNlbGVjdG9yIiwicyIsIkRhdGUiLCJnZXRUaW1lIiwibCIsImMiLCJhcmd1bWVudHMiLCJ1IiwiZCIsInNsaWNlIiwiY2FsbCIsImVhY2giLCJnIiwicCIsImlzUGxhaW5PYmplY3QiLCJleHRlbmQiLCJzZXR0aW5ncyIsInYiLCJjbGFzc05hbWUiLCJmIiwibWV0YWRhdGEiLCJtIiwibmFtZXNwYWNlIiwiYiIsImgiLCJlcnJvciIsIngiLCJ5IiwidyIsIlYiLCJmaW5kIiwiYmFyIiwiQyIsIkUiLCJsYWJlbCIsIlAiLCJUIiwiZGF0YSIsIk0iLCJpbml0aWFsaXplIiwiZGVidWciLCJzZXQiLCJkdXJhdGlvbiIsInRyYW5zaXRpb25FdmVudCIsInJlYWQiLCJpbnN0YW50aWF0ZSIsInZlcmJvc2UiLCJkZXN0cm95IiwiY2xlYXJJbnRlcnZhbCIsImludGVydmFsIiwicmVtb3ZlIiwic3RhdGUiLCJyZW1vdmVEYXRhIiwicmVzZXQiLCJuZXh0VmFsdWUiLCJ1cGRhdGUiLCJjb21wbGV0ZSIsInBlcmNlbnQiLCJwcm9ncmVzc1BvbGwiLCJ0b3RhbCIsInZhbHVlIiwiYmluZCIsInRyYW5zaXRpb25FbmQiLCJnZXQiLCJvbmUiLCJjbGVhclRpbWVvdXQiLCJmYWlsU2FmZVRpbWVyIiwic2V0VGltZW91dCIsInRyaWdnZXJIYW5kbGVyIiwiZmFpbFNhZmVEZWxheSIsInRpbWVyIiwiaW5jcmVtZW50IiwiaGFzIiwicmFuZG9tVmFsdWUiLCJub3JtYWxpemVkVmFsdWUiLCJkZWNyZW1lbnQiLCJ0ZXh0IiwiZGlzcGxheVBlcmNlbnQiLCJyZXBsYWNlIiwidXBkYXRlSW50ZXJ2YWwiLCJmbG9vciIsInJhbmRvbSIsIm1heCIsIm1pbiIsIm51bWVyaWNWYWx1ZSIsImNyZWF0ZUVsZW1lbnQiLCJ0cmFuc2l0aW9uIiwiT1RyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwiV2Via2l0VHJhbnNpdGlvbiIsInN0eWxlIiwid2lkdGgiLCJwYXJzZUludCIsImNzcyIsInByZWNpc2lvbiIsInJvdW5kIiwiY3JlYXRlIiwidG9OZXh0VmFsdWUiLCJpcyIsInN1Y2Nlc3MiLCJ3YXJuaW5nIiwiaGFzQ2xhc3MiLCJhY3RpdmUiLCJ2aXNpYmxlIiwicmVtb3ZlQ2xhc3MiLCJiYXJXaWR0aCIsInRvb0hpZ2giLCJ0b29Mb3ciLCJhdHRyIiwidHJhbnNpdGlvbi1kdXJhdGlvbiIsImxpbWl0VmFsdWVzIiwibGFiZWxJbnRlcnZhbCIsImxhYmVscyIsIm9uQ2hhbmdlIiwic2V0SW50ZXJ2YWwiLCJjb250YWlucyIsImRvY3VtZW50RWxlbWVudCIsImZyYW1lcmF0ZSIsImJhckxhYmVsIiwiYXV0b1N1Y2Nlc3MiLCJyYXRpbyIsInNob3dBY3Rpdml0eSIsImFkZENsYXNzIiwib25MYWJlbFVwZGF0ZSIsIm9uQWN0aXZlIiwib25TdWNjZXNzIiwib25XYXJuaW5nIiwib25FcnJvciIsIm5vbk51bWVyaWMiLCJzZXR0aW5nIiwiaW50ZXJuYWwiLCJzaWxlbnQiLCJwZXJmb3JtYW5jZSIsImxvZyIsInByb3RvdHlwZSIsImNvbnNvbGUiLCJpbmZvIiwibmFtZSIsImFwcGx5IiwicHVzaCIsIk5hbWUiLCJBcmd1bWVudHMiLCJFbGVtZW50IiwiRXhlY3V0aW9uIFRpbWUiLCJkaXNwbGF5IiwiZ3JvdXAiLCJ0YWJsZSIsImxlbmd0aCIsImdyb3VwQ29sbGFwc2VkIiwiZ3JvdXBFbmQiLCJpbnZva2UiLCJzcGxpdCIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwibWV0aG9kIiwiaXNGdW5jdGlvbiIsImlzQXJyYXkiLCJyZWdFeHAiLCJ2YXJpYWJsZSIsImpRdWVyeSIsIndpbmRvdyIsImRvY3VtZW50Il0sIm1hcHBpbmdzIjoiQ0FTQyxTQUFTQSxFQUFFQyxFQUFFQyxFQUFFQyxHQUFHLFlB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QUsySSxRQUFRLFNBQVM1SSxFQUFFQyxLQUFLMEksVUFBVSxTQUFTM0ksRUFBRUMsS0FBS3FDLE9BQU9pSSxPQUFPLHdDQUF3QzFCLFdBQVcsZ0NBQWdDdEIsUUFBUSxnQ0FBZ0NDLE9BQU8sK0JBQStCa0QsUUFBUUMsU0FBUyxxQkFBcUIxSSxVQUFVcUMsUUFBUSxVQUFVRSxNQUFNLFFBQVFDLE1BQU0sU0FBUzVELFVBQVUrQixJQUFJLFNBQVNHLE1BQU0sV0FBV3ZDLFNBQVMsb0JBQW9CaUYsTUFBTTBCLFFBQU8sRUFBRzdFLE9BQU0sRUFBRzBFLFNBQVEsRUFBR0MsU0FBUSxFQUFHM0MsUUFBUSxhQUFhK0QsTUFBTSxzQkFBc0J0RyxXQUFXb0YsT0FBTyxTQUFTN0UsTUFBTSxRQUFRMEUsUUFBUSxVQUFVQyxRQUFRLGFBQWEyRCxPQUFPQyxPQUFPQyIsImZpbGUiOiJ2ZW5kb3IvcHJvZ3Jlc3MubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiAjIFNlbWFudGljIFVJIDIuMi43IC0gUHJvZ3Jlc3NcbiAqIGh0dHA6Ly9naXRodWIuY29tL3NlbWFudGljLW9yZy9zZW1hbnRpYy11aS9cbiAqXG4gKlxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXG4gKlxuICovXG4hZnVuY3Rpb24oZSx0LG4scil7XCJ1c2Ugc3RyaWN0XCI7dD1cInVuZGVmaW5lZFwiIT10eXBlb2YgdCYmdC5NYXRoPT1NYXRoP3Q6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcInVuZGVmaW5lZFwiIT10eXBlb2YgdCYmdC5NYXRoPT1NYXRoP3Q6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtlLmZuLnByb2dyZXNzPWZ1bmN0aW9uKHQpe3ZhciBhLG89ZSh0aGlzKSxpPW8uc2VsZWN0b3J8fFwiXCIscz0obmV3IERhdGUpLmdldFRpbWUoKSxsPVtdLGM9YXJndW1lbnRzWzBdLHU9XCJzdHJpbmdcIj09dHlwZW9mIGMsZD1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gby5lYWNoKGZ1bmN0aW9uKCl7dmFyIG8sZyxwPWUuaXNQbGFpbk9iamVjdCh0KT9lLmV4dGVuZCghMCx7fSxlLmZuLnByb2dyZXNzLnNldHRpbmdzLHQpOmUuZXh0ZW5kKHt9LGUuZm4ucHJvZ3Jlc3Muc2V0dGluZ3MpLHY9cC5jbGFzc05hbWUsZj1wLm1ldGFkYXRhLG09cC5uYW1lc3BhY2UsYj1wLnNlbGVjdG9yLGg9cC5lcnJvcix4PVwiLlwiK20seT1cIm1vZHVsZS1cIittLHc9ZSh0aGlzKSxWPWUodGhpcykuZmluZChiLmJhciksQz1lKHRoaXMpLmZpbmQoYi5wcm9ncmVzcyksRT1lKHRoaXMpLmZpbmQoYi5sYWJlbCksUD10aGlzLFQ9dy5kYXRhKHkpLE09ITE7Zz17aW5pdGlhbGl6ZTpmdW5jdGlvbigpe2cuZGVidWcoXCJJbml0aWFsaXppbmcgcHJvZ3Jlc3MgYmFyXCIscCksZy5zZXQuZHVyYXRpb24oKSxnLnNldC50cmFuc2l0aW9uRXZlbnQoKSxnLnJlYWQubWV0YWRhdGEoKSxnLnJlYWQuc2V0dGluZ3MoKSxnLmluc3RhbnRpYXRlKCl9LGluc3RhbnRpYXRlOmZ1bmN0aW9uKCl7Zy52ZXJib3NlKFwiU3RvcmluZyBpbnN0YW5jZSBvZiBwcm9ncmVzc1wiLGcpLFQ9Zyx3LmRhdGEoeSxnKX0sZGVzdHJveTpmdW5jdGlvbigpe2cudmVyYm9zZShcIkRlc3Ryb3lpbmcgcHJldmlvdXMgcHJvZ3Jlc3MgZm9yXCIsdyksY2xlYXJJbnRlcnZhbChULmludGVydmFsKSxnLnJlbW92ZS5zdGF0ZSgpLHcucmVtb3ZlRGF0YSh5KSxUPXJ9LHJlc2V0OmZ1bmN0aW9uKCl7Zy5yZW1vdmUubmV4dFZhbHVlKCksZy51cGRhdGUucHJvZ3Jlc3MoMCl9LGNvbXBsZXRlOmZ1bmN0aW9uKCl7KGcucGVyY2VudD09PXJ8fGcucGVyY2VudDwxMDApJiYoZy5yZW1vdmUucHJvZ3Jlc3NQb2xsKCksZy5zZXQucGVyY2VudCgxMDApKX0scmVhZDp7bWV0YWRhdGE6ZnVuY3Rpb24oKXt2YXIgZT17cGVyY2VudDp3LmRhdGEoZi5wZXJjZW50KSx0b3RhbDp3LmRhdGEoZi50b3RhbCksdmFsdWU6dy5kYXRhKGYudmFsdWUpfTtlLnBlcmNlbnQmJihnLmRlYnVnKFwiQ3VycmVudCBwZXJjZW50IHZhbHVlIHNldCBmcm9tIG1ldGFkYXRhXCIsZS5wZXJjZW50KSxnLnNldC5wZXJjZW50KGUucGVyY2VudCkpLGUudG90YWwmJihnLmRlYnVnKFwiVG90YWwgdmFsdWUgc2V0IGZyb20gbWV0YWRhdGFcIixlLnRvdGFsKSxnLnNldC50b3RhbChlLnRvdGFsKSksZS52YWx1ZSYmKGcuZGVidWcoXCJDdXJyZW50IHZhbHVlIHNldCBmcm9tIG1ldGFkYXRhXCIsZS52YWx1ZSksZy5zZXQudmFsdWUoZS52YWx1ZSksZy5zZXQucHJvZ3Jlc3MoZS52YWx1ZSkpfSxzZXR0aW5nczpmdW5jdGlvbigpe3AudG90YWwhPT0hMSYmKGcuZGVidWcoXCJDdXJyZW50IHRvdGFsIHNldCBpbiBzZXR0aW5nc1wiLHAudG90YWwpLGcuc2V0LnRvdGFsKHAudG90YWwpKSxwLnZhbHVlIT09ITEmJihnLmRlYnVnKFwiQ3VycmVudCB2YWx1ZSBzZXQgaW4gc2V0dGluZ3NcIixwLnZhbHVlKSxnLnNldC52YWx1ZShwLnZhbHVlKSxnLnNldC5wcm9ncmVzcyhnLnZhbHVlKSkscC5wZXJjZW50IT09ITEmJihnLmRlYnVnKFwiQ3VycmVudCBwZXJjZW50IHNldCBpbiBzZXR0aW5nc1wiLHAucGVyY2VudCksZy5zZXQucGVyY2VudChwLnBlcmNlbnQpKX19LGJpbmQ6e3RyYW5zaXRpb25FbmQ6ZnVuY3Rpb24oZSl7dmFyIHQ9Zy5nZXQudHJhbnNpdGlvbkVuZCgpO1Yub25lKHQreCxmdW5jdGlvbih0KXtjbGVhclRpbWVvdXQoZy5mYWlsU2FmZVRpbWVyKSxlLmNhbGwodGhpcyx0KX0pLGcuZmFpbFNhZmVUaW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Vi50cmlnZ2VySGFuZGxlcih0KX0scC5kdXJhdGlvbitwLmZhaWxTYWZlRGVsYXkpLGcudmVyYm9zZShcIkFkZGluZyBmYWlsIHNhZmUgdGltZXJcIixnLnRpbWVyKX19LGluY3JlbWVudDpmdW5jdGlvbihlKXt2YXIgdCxuLHI7Zy5oYXMudG90YWwoKT8obj1nLmdldC52YWx1ZSgpLGU9ZXx8MSxyPW4rZSk6KG49Zy5nZXQucGVyY2VudCgpLGU9ZXx8Zy5nZXQucmFuZG9tVmFsdWUoKSxyPW4rZSx0PTEwMCxnLmRlYnVnKFwiSW5jcmVtZW50aW5nIHBlcmNlbnRhZ2UgYnlcIixuLHIpKSxyPWcuZ2V0Lm5vcm1hbGl6ZWRWYWx1ZShyKSxnLnNldC5wcm9ncmVzcyhyKX0sZGVjcmVtZW50OmZ1bmN0aW9uKGUpe3ZhciB0LG4scj1nLmdldC50b3RhbCgpO3I/KHQ9Zy5nZXQudmFsdWUoKSxlPWV8fDEsbj10LWUsZy5kZWJ1ZyhcIkRlY3JlbWVudGluZyB2YWx1ZSBieVwiLGUsdCkpOih0PWcuZ2V0LnBlcmNlbnQoKSxlPWV8fGcuZ2V0LnJhbmRvbVZhbHVlKCksbj10LWUsZy5kZWJ1ZyhcIkRlY3JlbWVudGluZyBwZXJjZW50YWdlIGJ5XCIsZSx0KSksbj1nLmdldC5ub3JtYWxpemVkVmFsdWUobiksZy5zZXQucHJvZ3Jlc3Mobil9LGhhczp7cHJvZ3Jlc3NQb2xsOmZ1bmN0aW9uKCl7cmV0dXJuIGcucHJvZ3Jlc3NQb2xsfSx0b3RhbDpmdW5jdGlvbigpe3JldHVybiBnLmdldC50b3RhbCgpIT09ITF9fSxnZXQ6e3RleHQ6ZnVuY3Rpb24oZSl7dmFyIHQ9Zy52YWx1ZXx8MCxuPWcudG90YWx8fDAscj1NP2cuZ2V0LmRpc3BsYXlQZXJjZW50KCk6Zy5wZXJjZW50fHwwLGE9Zy50b3RhbD4wP24tdDoxMDAtcjtyZXR1cm4gZT1lfHxcIlwiLGU9ZS5yZXBsYWNlKFwie3ZhbHVlfVwiLHQpLnJlcGxhY2UoXCJ7dG90YWx9XCIsbikucmVwbGFjZShcIntsZWZ0fVwiLGEpLnJlcGxhY2UoXCJ7cGVyY2VudH1cIixyKSxnLnZlcmJvc2UoXCJBZGRpbmcgdmFyaWFibGVzIHRvIHByb2dyZXNzIGJhciB0ZXh0XCIsZSksZX0sbm9ybWFsaXplZFZhbHVlOmZ1bmN0aW9uKGUpe2lmKGU8MClyZXR1cm4gZy5kZWJ1ZyhcIlZhbHVlIGNhbm5vdCBkZWNyZW1lbnQgYmVsb3cgMFwiKSwwO2lmKGcuaGFzLnRvdGFsKCkpe2lmKGU+Zy50b3RhbClyZXR1cm4gZy5kZWJ1ZyhcIlZhbHVlIGNhbm5vdCBpbmNyZW1lbnQgYWJvdmUgdG90YWxcIixnLnRvdGFsKSxnLnRvdGFsfWVsc2UgaWYoZT4xMDApcmV0dXJuIGcuZGVidWcoXCJWYWx1ZSBjYW5ub3QgaW5jcmVtZW50IGFib3ZlIDEwMCBwZXJjZW50XCIpLDEwMDtyZXR1cm4gZX0sdXBkYXRlSW50ZXJ2YWw6ZnVuY3Rpb24oKXtyZXR1cm5cImF1dG9cIj09cC51cGRhdGVJbnRlcnZhbD9wLmR1cmF0aW9uOnAudXBkYXRlSW50ZXJ2YWx9LHJhbmRvbVZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGcuZGVidWcoXCJHZW5lcmF0aW5nIHJhbmRvbSBpbmNyZW1lbnQgcGVyY2VudGFnZVwiKSxNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqcC5yYW5kb20ubWF4K3AucmFuZG9tLm1pbil9LG51bWVyaWNWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT9cIlwiIT09ZS5yZXBsYWNlKC9bXlxcZC5dL2csXCJcIikmJitlLnJlcGxhY2UoL1teXFxkLl0vZyxcIlwiKTplfSx0cmFuc2l0aW9uRW5kOmZ1bmN0aW9uKCl7dmFyIGUsdD1uLmNyZWF0ZUVsZW1lbnQoXCJlbGVtZW50XCIpLGE9e3RyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCIsT1RyYW5zaXRpb246XCJvVHJhbnNpdGlvbkVuZFwiLE1velRyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCIsV2Via2l0VHJhbnNpdGlvbjpcIndlYmtpdFRyYW5zaXRpb25FbmRcIn07Zm9yKGUgaW4gYSlpZih0LnN0eWxlW2VdIT09cilyZXR1cm4gYVtlXX0sZGlzcGxheVBlcmNlbnQ6ZnVuY3Rpb24oKXt2YXIgZT1WLndpZHRoKCksdD13LndpZHRoKCksbj1wYXJzZUludChWLmNzcyhcIm1pbi13aWR0aFwiKSwxMCkscj1lPm4/ZS90KjEwMDpnLnBlcmNlbnQ7cmV0dXJuIHAucHJlY2lzaW9uPjA/TWF0aC5yb3VuZChyKigxMCpwLnByZWNpc2lvbikpLygxMCpwLnByZWNpc2lvbik6TWF0aC5yb3VuZChyKX0scGVyY2VudDpmdW5jdGlvbigpe3JldHVybiBnLnBlcmNlbnR8fDB9LHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGcubmV4dFZhbHVlfHxnLnZhbHVlfHwwfSx0b3RhbDpmdW5jdGlvbigpe3JldHVybiBnLnRvdGFsfHwhMX19LGNyZWF0ZTp7cHJvZ3Jlc3NQb2xsOmZ1bmN0aW9uKCl7Zy5wcm9ncmVzc1BvbGw9c2V0VGltZW91dChmdW5jdGlvbigpe2cudXBkYXRlLnRvTmV4dFZhbHVlKCksZy5yZW1vdmUucHJvZ3Jlc3NQb2xsKCl9LGcuZ2V0LnVwZGF0ZUludGVydmFsKCkpfX0saXM6e2NvbXBsZXRlOmZ1bmN0aW9uKCl7cmV0dXJuIGcuaXMuc3VjY2VzcygpfHxnLmlzLndhcm5pbmcoKXx8Zy5pcy5lcnJvcigpfSxzdWNjZXNzOmZ1bmN0aW9uKCl7cmV0dXJuIHcuaGFzQ2xhc3Modi5zdWNjZXNzKX0sd2FybmluZzpmdW5jdGlvbigpe3JldHVybiB3Lmhhc0NsYXNzKHYud2FybmluZyl9LGVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuIHcuaGFzQ2xhc3Modi5lcnJvcil9LGFjdGl2ZTpmdW5jdGlvbigpe3JldHVybiB3Lmhhc0NsYXNzKHYuYWN0aXZlKX0sdmlzaWJsZTpmdW5jdGlvbigpe3JldHVybiB3LmlzKFwiOnZpc2libGVcIil9fSxyZW1vdmU6e3Byb2dyZXNzUG9sbDpmdW5jdGlvbigpe2cudmVyYm9zZShcIlJlbW92aW5nIHByb2dyZXNzIHBvbGwgdGltZXJcIiksZy5wcm9ncmVzc1BvbGwmJihjbGVhclRpbWVvdXQoZy5wcm9ncmVzc1BvbGwpLGRlbGV0ZSBnLnByb2dyZXNzUG9sbCl9LG5leHRWYWx1ZTpmdW5jdGlvbigpe2cudmVyYm9zZShcIlJlbW92aW5nIHByb2dyZXNzIHZhbHVlIHN0b3JlZCBmb3IgbmV4dCB1cGRhdGVcIiksZGVsZXRlIGcubmV4dFZhbHVlfSxzdGF0ZTpmdW5jdGlvbigpe2cudmVyYm9zZShcIlJlbW92aW5nIHN0b3JlZCBzdGF0ZVwiKSxkZWxldGUgZy50b3RhbCxkZWxldGUgZy5wZXJjZW50LGRlbGV0ZSBnLnZhbHVlfSxhY3RpdmU6ZnVuY3Rpb24oKXtnLnZlcmJvc2UoXCJSZW1vdmluZyBhY3RpdmUgc3RhdGVcIiksdy5yZW1vdmVDbGFzcyh2LmFjdGl2ZSl9LHN1Y2Nlc3M6ZnVuY3Rpb24oKXtnLnZlcmJvc2UoXCJSZW1vdmluZyBzdWNjZXNzIHN0YXRlXCIpLHcucmVtb3ZlQ2xhc3Modi5zdWNjZXNzKX0sd2FybmluZzpmdW5jdGlvbigpe2cudmVyYm9zZShcIlJlbW92aW5nIHdhcm5pbmcgc3RhdGVcIiksdy5yZW1vdmVDbGFzcyh2Lndhcm5pbmcpfSxlcnJvcjpmdW5jdGlvbigpe2cudmVyYm9zZShcIlJlbW92aW5nIGVycm9yIHN0YXRlXCIpLHcucmVtb3ZlQ2xhc3Modi5lcnJvcil9fSxzZXQ6e2JhcldpZHRoOmZ1bmN0aW9uKGUpe2U+MTAwP2cuZXJyb3IoaC50b29IaWdoLGUpOmU8MD9nLmVycm9yKGgudG9vTG93LGUpOihWLmNzcyhcIndpZHRoXCIsZStcIiVcIiksdy5hdHRyKFwiZGF0YS1wZXJjZW50XCIscGFyc2VJbnQoZSwxMCkpKX0sZHVyYXRpb246ZnVuY3Rpb24oZSl7ZT1lfHxwLmR1cmF0aW9uLGU9XCJudW1iZXJcIj09dHlwZW9mIGU/ZStcIm1zXCI6ZSxnLnZlcmJvc2UoXCJTZXR0aW5nIHByb2dyZXNzIGJhciB0cmFuc2l0aW9uIGR1cmF0aW9uXCIsZSksVi5jc3Moe1widHJhbnNpdGlvbi1kdXJhdGlvblwiOmV9KX0scGVyY2VudDpmdW5jdGlvbihlKXtlPVwic3RyaW5nXCI9PXR5cGVvZiBlPytlLnJlcGxhY2UoXCIlXCIsXCJcIik6ZSxlPXAucHJlY2lzaW9uPjA/TWF0aC5yb3VuZChlKigxMCpwLnByZWNpc2lvbikpLygxMCpwLnByZWNpc2lvbik6TWF0aC5yb3VuZChlKSxnLnBlcmNlbnQ9ZSxnLmhhcy50b3RhbCgpfHwoZy52YWx1ZT1wLnByZWNpc2lvbj4wP01hdGgucm91bmQoZS8xMDAqZy50b3RhbCooMTAqcC5wcmVjaXNpb24pKS8oMTAqcC5wcmVjaXNpb24pOk1hdGgucm91bmQoZS8xMDAqZy50b3RhbCoxMCkvMTAscC5saW1pdFZhbHVlcyYmKGcudmFsdWU9Zy52YWx1ZT4xMDA/MTAwOmcudmFsdWU8MD8wOmcudmFsdWUpKSxnLnNldC5iYXJXaWR0aChlKSxnLnNldC5sYWJlbEludGVydmFsKCksZy5zZXQubGFiZWxzKCkscC5vbkNoYW5nZS5jYWxsKFAsZSxnLnZhbHVlLGcudG90YWwpfSxsYWJlbEludGVydmFsOmZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oKXtnLnZlcmJvc2UoXCJCYXIgZmluaXNoZWQgYW5pbWF0aW5nLCByZW1vdmluZyBjb250aW51b3VzIGxhYmVsIHVwZGF0ZXNcIiksY2xlYXJJbnRlcnZhbChnLmludGVydmFsKSxNPSExLGcuc2V0LmxhYmVscygpfTtjbGVhckludGVydmFsKGcuaW50ZXJ2YWwpLGcuYmluZC50cmFuc2l0aW9uRW5kKHQpLE09ITAsZy5pbnRlcnZhbD1zZXRJbnRlcnZhbChmdW5jdGlvbigpe3ZhciB0PWUuY29udGFpbnMobi5kb2N1bWVudEVsZW1lbnQsUCk7dHx8KGNsZWFySW50ZXJ2YWwoZy5pbnRlcnZhbCksTT0hMSksZy5zZXQubGFiZWxzKCl9LHAuZnJhbWVyYXRlKX0sbGFiZWxzOmZ1bmN0aW9uKCl7Zy52ZXJib3NlKFwiU2V0dGluZyBib3RoIGJhciBwcm9ncmVzcyBhbmQgb3V0ZXIgbGFiZWwgdGV4dFwiKSxnLnNldC5iYXJMYWJlbCgpLGcuc2V0LnN0YXRlKCl9LGxhYmVsOmZ1bmN0aW9uKGUpe2U9ZXx8XCJcIixlJiYoZT1nLmdldC50ZXh0KGUpLGcudmVyYm9zZShcIlNldHRpbmcgbGFiZWwgdG8gdGV4dFwiLGUpLEUudGV4dChlKSl9LHN0YXRlOmZ1bmN0aW9uKGUpe2U9ZSE9PXI/ZTpnLnBlcmNlbnQsMTAwPT09ZT9wLmF1dG9TdWNjZXNzJiYhKGcuaXMud2FybmluZygpfHxnLmlzLmVycm9yKCl8fGcuaXMuc3VjY2VzcygpKT8oZy5zZXQuc3VjY2VzcygpLGcuZGVidWcoXCJBdXRvbWF0aWNhbGx5IHRyaWdnZXJpbmcgc3VjY2VzcyBhdCAxMDAlXCIpKTooZy52ZXJib3NlKFwiUmVhY2hlZCAxMDAlIHJlbW92aW5nIGFjdGl2ZSBzdGF0ZVwiKSxnLnJlbW92ZS5hY3RpdmUoKSxnLnJlbW92ZS5wcm9ncmVzc1BvbGwoKSk6ZT4wPyhnLnZlcmJvc2UoXCJBZGp1c3RpbmcgYWN0aXZlIHByb2dyZXNzIGJhciBsYWJlbFwiLGUpLGcuc2V0LmFjdGl2ZSgpKTooZy5yZW1vdmUuYWN0aXZlKCksZy5zZXQubGFiZWwocC50ZXh0LmFjdGl2ZSkpfSxiYXJMYWJlbDpmdW5jdGlvbihlKXtlIT09cj9DLnRleHQoZy5nZXQudGV4dChlKSk6XCJyYXRpb1wiPT1wLmxhYmVsJiZnLnRvdGFsPyhnLnZlcmJvc2UoXCJBZGRpbmcgcmF0aW8gdG8gYmFyIGxhYmVsXCIpLEMudGV4dChnLmdldC50ZXh0KHAudGV4dC5yYXRpbykpKTpcInBlcmNlbnRcIj09cC5sYWJlbCYmKGcudmVyYm9zZShcIkFkZGluZyBwZXJjZW50YWdlIHRvIGJhciBsYWJlbFwiKSxDLnRleHQoZy5nZXQudGV4dChwLnRleHQucGVyY2VudCkpKX0sYWN0aXZlOmZ1bmN0aW9uKGUpe2U9ZXx8cC50ZXh0LmFjdGl2ZSxnLmRlYnVnKFwiU2V0dGluZyBhY3RpdmUgc3RhdGVcIikscC5zaG93QWN0aXZpdHkmJiFnLmlzLmFjdGl2ZSgpJiZ3LmFkZENsYXNzKHYuYWN0aXZlKSxnLnJlbW92ZS53YXJuaW5nKCksZy5yZW1vdmUuZXJyb3IoKSxnLnJlbW92ZS5zdWNjZXNzKCksZT1wLm9uTGFiZWxVcGRhdGUoXCJhY3RpdmVcIixlLGcudmFsdWUsZy50b3RhbCksZSYmZy5zZXQubGFiZWwoZSksZy5iaW5kLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24oKXtwLm9uQWN0aXZlLmNhbGwoUCxnLnZhbHVlLGcudG90YWwpfSl9LHN1Y2Nlc3M6ZnVuY3Rpb24oZSl7ZT1lfHxwLnRleHQuc3VjY2Vzc3x8cC50ZXh0LmFjdGl2ZSxnLmRlYnVnKFwiU2V0dGluZyBzdWNjZXNzIHN0YXRlXCIpLHcuYWRkQ2xhc3Modi5zdWNjZXNzKSxnLnJlbW92ZS5hY3RpdmUoKSxnLnJlbW92ZS53YXJuaW5nKCksZy5yZW1vdmUuZXJyb3IoKSxnLmNvbXBsZXRlKCkscC50ZXh0LnN1Y2Nlc3M/KGU9cC5vbkxhYmVsVXBkYXRlKFwic3VjY2Vzc1wiLGUsZy52YWx1ZSxnLnRvdGFsKSxnLnNldC5sYWJlbChlKSk6KGU9cC5vbkxhYmVsVXBkYXRlKFwiYWN0aXZlXCIsZSxnLnZhbHVlLGcudG90YWwpLGcuc2V0LmxhYmVsKGUpKSxnLmJpbmQudHJhbnNpdGlvbkVuZChmdW5jdGlvbigpe3Aub25TdWNjZXNzLmNhbGwoUCxnLnRvdGFsKX0pfSx3YXJuaW5nOmZ1bmN0aW9uKGUpe2U9ZXx8cC50ZXh0Lndhcm5pbmcsZy5kZWJ1ZyhcIlNldHRpbmcgd2FybmluZyBzdGF0ZVwiKSx3LmFkZENsYXNzKHYud2FybmluZyksZy5yZW1vdmUuYWN0aXZlKCksZy5yZW1vdmUuc3VjY2VzcygpLGcucmVtb3ZlLmVycm9yKCksZy5jb21wbGV0ZSgpLGU9cC5vbkxhYmVsVXBkYXRlKFwid2FybmluZ1wiLGUsZy52YWx1ZSxnLnRvdGFsKSxlJiZnLnNldC5sYWJlbChlKSxnLmJpbmQudHJhbnNpdGlvbkVuZChmdW5jdGlvbigpe3Aub25XYXJuaW5nLmNhbGwoUCxnLnZhbHVlLGcudG90YWwpfSl9LGVycm9yOmZ1bmN0aW9uKGUpe2U9ZXx8cC50ZXh0LmVycm9yLGcuZGVidWcoXCJTZXR0aW5nIGVycm9yIHN0YXRlXCIpLHcuYWRkQ2xhc3Modi5lcnJvciksZy5yZW1vdmUuYWN0aXZlKCksZy5yZW1vdmUuc3VjY2VzcygpLGcucmVtb3ZlLndhcm5pbmcoKSxnLmNvbXBsZXRlKCksZT1wLm9uTGFiZWxVcGRhdGUoXCJlcnJvclwiLGUsZy52YWx1ZSxnLnRvdGFsKSxlJiZnLnNldC5sYWJlbChlKSxnLmJpbmQudHJhbnNpdGlvbkVuZChmdW5jdGlvbigpe3Aub25FcnJvci5jYWxsKFAsZy52YWx1ZSxnLnRvdGFsKX0pfSx0cmFuc2l0aW9uRXZlbnQ6ZnVuY3Rpb24oKXtvPWcuZ2V0LnRyYW5zaXRpb25FbmQoKX0sdG90YWw6ZnVuY3Rpb24oZSl7Zy50b3RhbD1lfSx2YWx1ZTpmdW5jdGlvbihlKXtnLnZhbHVlPWV9LHByb2dyZXNzOmZ1bmN0aW9uKGUpe2cuaGFzLnByb2dyZXNzUG9sbCgpPyhnLmRlYnVnKFwiVXBkYXRlZCB3aXRoaW4gaW50ZXJ2YWwsIHNldHRpbmcgbmV4dCB1cGRhdGUgdG8gdXNlIG5ldyB2YWx1ZVwiLGUpLGcuc2V0Lm5leHRWYWx1ZShlKSk6KGcuZGVidWcoXCJGaXJzdCB1cGRhdGUgaW4gcHJvZ3Jlc3MgdXBkYXRlIGludGVydmFsLCBpbW1lZGlhdGVseSB1cGRhdGluZ1wiLGUpLGcudXBkYXRlLnByb2dyZXNzKGUpLGcuY3JlYXRlLnByb2dyZXNzUG9sbCgpKX0sbmV4dFZhbHVlOmZ1bmN0aW9uKGUpe2cubmV4dFZhbHVlPWV9fSx1cGRhdGU6e3RvTmV4dFZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9Zy5uZXh0VmFsdWU7ZSYmKGcuZGVidWcoXCJVcGRhdGUgaW50ZXJ2YWwgY29tcGxldGUgdXNpbmcgbGFzdCB1cGRhdGVkIHZhbHVlXCIsZSksZy51cGRhdGUucHJvZ3Jlc3MoZSksZy5yZW1vdmUubmV4dFZhbHVlKCkpfSxwcm9ncmVzczpmdW5jdGlvbihlKXt2YXIgdDtlPWcuZ2V0Lm51bWVyaWNWYWx1ZShlKSxlPT09ITEmJmcuZXJyb3IoaC5ub25OdW1lcmljLGUpLGU9Zy5nZXQubm9ybWFsaXplZFZhbHVlKGUpLGcuaGFzLnRvdGFsKCk/KGcuc2V0LnZhbHVlKGUpLHQ9ZS9nLnRvdGFsKjEwMCxnLmRlYnVnKFwiQ2FsY3VsYXRpbmcgcGVyY2VudCBjb21wbGV0ZSBmcm9tIHRvdGFsXCIsdCksZy5zZXQucGVyY2VudCh0KSk6KHQ9ZSxnLmRlYnVnKFwiU2V0dGluZyB2YWx1ZSB0byBleGFjdCBwZXJjZW50YWdlIHZhbHVlXCIsdCksZy5zZXQucGVyY2VudCh0KSl9fSxzZXR0aW5nOmZ1bmN0aW9uKHQsbil7aWYoZy5kZWJ1ZyhcIkNoYW5naW5nIHNldHRpbmdcIix0LG4pLGUuaXNQbGFpbk9iamVjdCh0KSllLmV4dGVuZCghMCxwLHQpO2Vsc2V7aWYobj09PXIpcmV0dXJuIHBbdF07ZS5pc1BsYWluT2JqZWN0KHBbdF0pP2UuZXh0ZW5kKCEwLHBbdF0sbik6cFt0XT1ufX0saW50ZXJuYWw6ZnVuY3Rpb24odCxuKXtpZihlLmlzUGxhaW5PYmplY3QodCkpZS5leHRlbmQoITAsZyx0KTtlbHNle2lmKG49PT1yKXJldHVybiBnW3RdO2dbdF09bn19LGRlYnVnOmZ1bmN0aW9uKCl7IXAuc2lsZW50JiZwLmRlYnVnJiYocC5wZXJmb3JtYW5jZT9nLnBlcmZvcm1hbmNlLmxvZyhhcmd1bWVudHMpOihnLmRlYnVnPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmNhbGwoY29uc29sZS5pbmZvLGNvbnNvbGUscC5uYW1lK1wiOlwiKSxnLmRlYnVnLmFwcGx5KGNvbnNvbGUsYXJndW1lbnRzKSkpfSx2ZXJib3NlOmZ1bmN0aW9uKCl7IXAuc2lsZW50JiZwLnZlcmJvc2UmJnAuZGVidWcmJihwLnBlcmZvcm1hbmNlP2cucGVyZm9ybWFuY2UubG9nKGFyZ3VtZW50cyk6KGcudmVyYm9zZT1GdW5jdGlvbi5wcm90b3R5cGUuYmluZC5jYWxsKGNvbnNvbGUuaW5mbyxjb25zb2xlLHAubmFtZStcIjpcIiksZy52ZXJib3NlLmFwcGx5KGNvbnNvbGUsYXJndW1lbnRzKSkpfSxlcnJvcjpmdW5jdGlvbigpe3Auc2lsZW50fHwoZy5lcnJvcj1GdW5jdGlvbi5wcm90b3R5cGUuYmluZC5jYWxsKGNvbnNvbGUuZXJyb3IsY29uc29sZSxwLm5hbWUrXCI6XCIpLGcuZXJyb3IuYXBwbHkoY29uc29sZSxhcmd1bWVudHMpKX0scGVyZm9ybWFuY2U6e2xvZzpmdW5jdGlvbihlKXt2YXIgdCxuLHI7cC5wZXJmb3JtYW5jZSYmKHQ9KG5ldyBEYXRlKS5nZXRUaW1lKCkscj1zfHx0LG49dC1yLHM9dCxsLnB1c2goe05hbWU6ZVswXSxBcmd1bWVudHM6W10uc2xpY2UuY2FsbChlLDEpfHxcIlwiLEVsZW1lbnQ6UCxcIkV4ZWN1dGlvbiBUaW1lXCI6bn0pKSxjbGVhclRpbWVvdXQoZy5wZXJmb3JtYW5jZS50aW1lciksZy5wZXJmb3JtYW5jZS50aW1lcj1zZXRUaW1lb3V0KGcucGVyZm9ybWFuY2UuZGlzcGxheSw1MDApfSxkaXNwbGF5OmZ1bmN0aW9uKCl7dmFyIHQ9cC5uYW1lK1wiOlwiLG49MDtzPSExLGNsZWFyVGltZW91dChnLnBlcmZvcm1hbmNlLnRpbWVyKSxlLmVhY2gobCxmdW5jdGlvbihlLHQpe24rPXRbXCJFeGVjdXRpb24gVGltZVwiXX0pLHQrPVwiIFwiK24rXCJtc1wiLGkmJih0Kz1cIiAnXCIraStcIidcIiksKGNvbnNvbGUuZ3JvdXAhPT1yfHxjb25zb2xlLnRhYmxlIT09cikmJmwubGVuZ3RoPjAmJihjb25zb2xlLmdyb3VwQ29sbGFwc2VkKHQpLGNvbnNvbGUudGFibGU/Y29uc29sZS50YWJsZShsKTplLmVhY2gobCxmdW5jdGlvbihlLHQpe2NvbnNvbGUubG9nKHQuTmFtZStcIjogXCIrdFtcIkV4ZWN1dGlvbiBUaW1lXCJdK1wibXNcIil9KSxjb25zb2xlLmdyb3VwRW5kKCkpLGw9W119fSxpbnZva2U6ZnVuY3Rpb24odCxuLG8pe3ZhciBpLHMsbCxjPVQ7cmV0dXJuIG49bnx8ZCxvPVB8fG8sXCJzdHJpbmdcIj09dHlwZW9mIHQmJmMhPT1yJiYodD10LnNwbGl0KC9bXFwuIF0vKSxpPXQubGVuZ3RoLTEsZS5lYWNoKHQsZnVuY3Rpb24obixhKXt2YXIgbz1uIT1pP2ErdFtuKzFdLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3RbbisxXS5zbGljZSgxKTp0O2lmKGUuaXNQbGFpbk9iamVjdChjW29dKSYmbiE9aSljPWNbb107ZWxzZXtpZihjW29dIT09cilyZXR1cm4gcz1jW29dLCExO2lmKCFlLmlzUGxhaW5PYmplY3QoY1thXSl8fG49PWkpcmV0dXJuIGNbYV0hPT1yPyhzPWNbYV0sITEpOihnLmVycm9yKGgubWV0aG9kLHQpLCExKTtjPWNbYV19fSkpLGUuaXNGdW5jdGlvbihzKT9sPXMuYXBwbHkobyxuKTpzIT09ciYmKGw9cyksZS5pc0FycmF5KGEpP2EucHVzaChsKTphIT09cj9hPVthLGxdOmwhPT1yJiYoYT1sKSxzfX0sdT8oVD09PXImJmcuaW5pdGlhbGl6ZSgpLGcuaW52b2tlKGMpKTooVCE9PXImJlQuaW52b2tlKFwiZGVzdHJveVwiKSxnLmluaXRpYWxpemUoKSl9KSxhIT09cj9hOnRoaXN9LGUuZm4ucHJvZ3Jlc3Muc2V0dGluZ3M9e25hbWU6XCJQcm9ncmVzc1wiLG5hbWVzcGFjZTpcInByb2dyZXNzXCIsc2lsZW50OiExLGRlYnVnOiExLHZlcmJvc2U6ITEscGVyZm9ybWFuY2U6ITAscmFuZG9tOnttaW46MixtYXg6NX0sZHVyYXRpb246MzAwLHVwZGF0ZUludGVydmFsOlwiYXV0b1wiLGF1dG9TdWNjZXNzOiEwLHNob3dBY3Rpdml0eTohMCxsaW1pdFZhbHVlczohMCxsYWJlbDpcInBlcmNlbnRcIixwcmVjaXNpb246MCxmcmFtZXJhdGU6MWUzLzMwLHBlcmNlbnQ6ITEsdG90YWw6ITEsdmFsdWU6ITEsZmFpbFNhZmVEZWxheToxMDAsb25MYWJlbFVwZGF0ZTpmdW5jdGlvbihlLHQsbixyKXtyZXR1cm4gdH0sb25DaGFuZ2U6ZnVuY3Rpb24oZSx0LG4pe30sb25TdWNjZXNzOmZ1bmN0aW9uKGUpe30sb25BY3RpdmU6ZnVuY3Rpb24oZSx0KXt9LG9uRXJyb3I6ZnVuY3Rpb24oZSx0KXt9LG9uV2FybmluZzpmdW5jdGlvbihlLHQpe30sZXJyb3I6e21ldGhvZDpcIlRoZSBtZXRob2QgeW91IGNhbGxlZCBpcyBub3QgZGVmaW5lZC5cIixub25OdW1lcmljOlwiUHJvZ3Jlc3MgdmFsdWUgaXMgbm9uIG51bWVyaWNcIix0b29IaWdoOlwiVmFsdWUgc3BlY2lmaWVkIGlzIGFib3ZlIDEwMCVcIix0b29Mb3c6XCJWYWx1ZSBzcGVjaWZpZWQgaXMgYmVsb3cgMCVcIn0scmVnRXhwOnt2YXJpYWJsZTovXFx7XFwkKltBLXowLTldK1xcfS9nfSxtZXRhZGF0YTp7cGVyY2VudDpcInBlcmNlbnRcIix0b3RhbDpcInRvdGFsXCIsdmFsdWU6XCJ2YWx1ZVwifSxzZWxlY3Rvcjp7YmFyOlwiPiAuYmFyXCIsbGFiZWw6XCI+IC5sYWJlbFwiLHByb2dyZXNzOlwiLmJhciA+IC5wcm9ncmVzc1wifSx0ZXh0OnthY3RpdmU6ITEsZXJyb3I6ITEsc3VjY2VzczohMSx3YXJuaW5nOiExLHBlcmNlbnQ6XCJ7cGVyY2VudH0lXCIscmF0aW86XCJ7dmFsdWV9IG9mIHt0b3RhbH1cIn0sY2xhc3NOYW1lOnthY3RpdmU6XCJhY3RpdmVcIixlcnJvcjpcImVycm9yXCIsc3VjY2VzczpcInN1Y2Nlc3NcIix3YXJuaW5nOlwid2FybmluZ1wifX19KGpRdWVyeSx3aW5kb3csZG9jdW1lbnQpOyJdfQ==
