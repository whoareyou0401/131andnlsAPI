$(function(){setupCSRF();new Vue({el:"#app",data:{users:[],selects:[],max_columns:0,max_rows:0,rows:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],columns:[1,2,3,4,5,6,7,8]},beforeCreate:function(){var a=this;$.ajax({url:"/api/v1.1/pay/staff",type:"GET",datatype:"JSONP",success:function(s){console.log(s),a.users=s.data}})},watch:{max_rows:function(){console.log(this.max_rows)},max_columns:function(){console.log(this.max_columns)}},methods:{changeRow:function(a){this.max_rows=a.srcElement.value},changeClumn:function(a){this.max_columns=a.srcElement.value},inputSearch:function(){var a=this,s=$("#search").val();$.ajax({url:"/api/v1.1/pay/staff-search",type:"GET",data:{word:s},datatype:"JSON",success:function(s){a.users=s.data}})},inputIntergration:function(a){var s=parseInt($("#"+a).val());this.users[a].integration=s}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheS9lZGl0X2l0ZW1fZnJlZXplcl9tYXAuanMiXSwibmFtZXMiOlsiJCIsInNldHVwQ1NSRiIsIlZ1ZSIsImVsIiwiZGF0YSIsInVzZXJzIiwic2VsZWN0cyIsIm1heF9jb2x1bW5zIiwibWF4X3Jvd3MiLCJyb3dzIiwiY29sdW1ucyIsImJlZm9yZUNyZWF0ZSIsIl9zZWxmIiwidGhpcyIsImFqYXgiLCJ1cmwiLCJ0eXBlIiwiZGF0YXR5cGUiLCJzdWNjZXNzIiwiY29uc29sZSIsImxvZyIsIndhdGNoIiwibWV0aG9kcyIsImNoYW5nZVJvdyIsImV2ZW50Iiwic3JjRWxlbWVudCIsInZhbHVlIiwiY2hhbmdlQ2x1bW4iLCJpbnB1dFNlYXJjaCIsIndvcmQiLCJ2YWwiLCJpbnB1dEludGVyZ3JhdGlvbiIsImluZGV4IiwiaW50ZWdyYXRpb24iLCJwYXJzZUludCJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUUsV0FFR0MsV0FDVSxJQUFJQyxNQUNYQyxHQUFJLE9BQ0pDLE1BRUlDLFNBQ0FDLFdBQ0FDLFlBQVksRUFDWkMsU0FBVSxFQUNWQyxNQUFNLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSSxHQUFJLEdBQUksR0FBSSxJQUNyREMsU0FBUyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLElBRWxDQyxhQUFjLFdBQ1YsR0FBSUMsR0FBUUMsSUFDWmIsR0FBRWMsTUFDRUMsSUFBSyxzQkFDTEMsS0FBTSxNQUNOQyxTQUFVLFFBQ1ZDLFFBQVMsU0FBU2QsR0FDZGUsUUFBUUMsSUFBSWhCLEdBQ1pRLEVBQU1QLE1BQVFELEVBQUtBLFNBSS9CaUIsT0FDSWIsU0FBUyxXQUNMVyxRQUFRQyxJQUFJUCxLQUFLTCxXQUVyQkQsWUFBWSxXQUNSWSxRQUFRQyxJQUFJUCxLQUFLTixlQUd6QmUsU0FDSUMsVUFBVyxTQUFTQyxHQUNoQlgsS0FBS0wsU0FBV2dCLEVBQU1DLFdBQVdDLE9BcUJyQ0MsWUFBYSxTQUFTSCxHQUNsQlgsS0FBS04sWUFBY2lCLEVBQU1DLFdBQVdDLE9BcUJ4Q0UsWUFBYSxXQUNULEdBQUloQixHQUFRQyxLQUNSZ0IsRUFBTzdCLEVBQUUsV0FBVzhCLEtBQ3hCOUIsR0FBRWMsTUFDRUMsSUFBSyw2QkFDTEMsS0FBTSxNQUNOWixNQUNJeUIsS0FBTUEsR0FFVlosU0FBUyxPQUNUQyxRQUFTLFNBQVNkLEdBQ2RRLEVBQU1QLE1BQVFELEVBQUtBLFNBSS9CMkIsa0JBQWtCLFNBQVNDLEdBQ3ZCLEdBQUlDLEdBQWNDLFNBQVNsQyxFQUFFLElBQUlnQyxHQUFPRixNQUN4Q2pCLE1BQUtSLE1BQU0yQixHQUFPQyxZQUFjQSIsImZpbGUiOiJwYXkvZWRpdF9pdGVtX2ZyZWV6ZXJfbWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChmdW5jdGlvbigpIHtcblxuICAgICBzZXR1cENTUkYoKTtcbiAgICAgdmFyIGFwcCA9IG5ldyBWdWUoe1xuICAgICAgICBlbDogJyNhcHAnLFxuICAgICAgICBkYXRhOiB7XG5cbiAgICAgICAgICAgIHVzZXJzOiBbXSxcbiAgICAgICAgICAgIHNlbGVjdHM6W10sXG4gICAgICAgICAgICBtYXhfY29sdW1uczowLFxuICAgICAgICAgICAgbWF4X3Jvd3M6IDAsXG4gICAgICAgICAgICByb3dzOlsxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1XSxcbiAgICAgICAgICAgIGNvbHVtbnM6WzEsIDIsIDMsIDQsIDUsIDYsIDcsIDhdXG4gICAgICAgIH0sXG4gICAgICAgIGJlZm9yZUNyZWF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICB1cmw6IFwiL2FwaS92MS4xL3BheS9zdGFmZlwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXG4gICAgICAgICAgICAgICAgZGF0YXR5cGU6IFwiSlNPTlBcIixcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICBfc2VsZi51c2VycyA9IGRhdGEuZGF0YTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgd2F0Y2g6e1xuICAgICAgICAgICAgbWF4X3Jvd3M6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm1heF9yb3dzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtYXhfY29sdW1uczpmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMubWF4X2NvbHVtbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBtZXRob2RzOiB7XG4gICAgICAgICAgICBjaGFuZ2VSb3c6IGZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgICAgICAgICAgICB0aGlzLm1heF9yb3dzID0gZXZlbnQuc3JjRWxlbWVudC52YWx1ZTtcbiAgICAgICAgICAgICAgICAvLyB2YXIgX3NlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgIC8vIHZhciBqc29uU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoX3NlbGYudXNlcnMpO1xuICAgICAgICAgICAgICAgIC8vICQuYWpheCh7XG4gICAgICAgICAgICAgICAgLy8gICAgIHVybDogXCIvYXBpL3YxLjEvcGF5L3N0YWZmXCIsXG4gICAgICAgICAgICAgICAgLy8gICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgIC8vICAgICBkYXRhOntcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIGRhdGE6IGpzb25TdHJpbmdcbiAgICAgICAgICAgICAgICAvLyAgICAgfSxcbiAgICAgICAgICAgICAgICAvLyAgICAgZGF0YXR5cGU6XCJKU09OXCIsXG4gICAgICAgICAgICAgICAgLy8gICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIGlmIChkYXRhLmNvZGUgPT0gMCl7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgYWxlcnQoJ+aIkOWKnycpO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIF9zZWxmLnVzZXJzID0gZGF0YS5kYXRhO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBhbGVydCgn5aSx6LSlJyk7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyAgICAgfVxuICAgICAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoYW5nZUNsdW1uOiBmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICAgICAgdGhpcy5tYXhfY29sdW1ucyA9IGV2ZW50LnNyY0VsZW1lbnQudmFsdWU7XG4gICAgICAgICAgICAgICAgLy8gdmFyIF9zZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICAvLyB2YXIganNvblN0cmluZyA9IEpTT04uc3RyaW5naWZ5KF9zZWxmLnVzZXJzKTtcbiAgICAgICAgICAgICAgICAvLyAkLmFqYXgoe1xuICAgICAgICAgICAgICAgIC8vICAgICB1cmw6IFwiL2FwaS92MS4xL3BheS9zdGFmZlwiLFxuICAgICAgICAgICAgICAgIC8vICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICAvLyAgICAgZGF0YTp7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBkYXRhOiBqc29uU3RyaW5nXG4gICAgICAgICAgICAgICAgLy8gICAgIH0sXG4gICAgICAgICAgICAgICAgLy8gICAgIGRhdGF0eXBlOlwiSlNPTlwiLFxuICAgICAgICAgICAgICAgIC8vICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBpZiAoZGF0YS5jb2RlID09IDApe1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIGFsZXJ0KCfmiJDlip8nKTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBfc2VsZi51c2VycyA9IGRhdGEuZGF0YTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgYWxlcnQoJ+Wksei0pScpO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAgICAgICAvLyB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbnB1dFNlYXJjaDogZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHZhciB3b3JkID0gJChcIiNzZWFyY2hcIikudmFsKCk7XG4gICAgICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvdjEuMS9wYXkvc3RhZmYtc2VhcmNoXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6e1xuICAgICAgICAgICAgICAgICAgICAgICAgd29yZDogd29yZFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBkYXRhdHlwZTpcIkpTT05cIixcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3NlbGYudXNlcnMgPSBkYXRhLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbnB1dEludGVyZ3JhdGlvbjpmdW5jdGlvbihpbmRleCl7XG4gICAgICAgICAgICAgICAgdmFyIGludGVncmF0aW9uID0gcGFyc2VJbnQoJCgnIycraW5kZXgpLnZhbCgpKTtcbiAgICAgICAgICAgICAgICB0aGlzLnVzZXJzW2luZGV4XS5pbnRlZ3JhdGlvbiA9IGludGVncmF0aW9uO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICB9KTtcblxuXG59KTtcbiJdfQ==
