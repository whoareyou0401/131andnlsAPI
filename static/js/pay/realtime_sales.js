$(function(){setupCSRF();new Vue({el:"#app",data:{users:[],selects:[],max_columns:0,max_rows:0,rows:"00000.0",columns:[1,2,3,4,5,6,7,8]},beforeCreate:function(){},watch:{max_rows:function(){console.log(this.max_rows)},max_columns:function(){console.log(this.max_columns)}},methods:{changeRow:function(a){this.max_rows=a.srcElement.value},changeClumn:function(a){this.max_columns=a.srcElement.value},inputSearch:function(){var a=this,n=$("#search").val();$.ajax({url:"/api/v1.1/pay/staff-search",type:"GET",data:{word:n},datatype:"JSON",success:function(n){a.users=n.data}})},inputIntergration:function(a){var n=parseInt($("#"+a).val());this.users[a].integration=n}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheS9yZWFsdGltZV9zYWxlcy5qcyJdLCJuYW1lcyI6WyIkIiwic2V0dXBDU1JGIiwiVnVlIiwiZWwiLCJkYXRhIiwidXNlcnMiLCJzZWxlY3RzIiwibWF4X2NvbHVtbnMiLCJtYXhfcm93cyIsInJvd3MiLCJjb2x1bW5zIiwiYmVmb3JlQ3JlYXRlIiwid2F0Y2giLCJjb25zb2xlIiwibG9nIiwidGhpcyIsIm1ldGhvZHMiLCJjaGFuZ2VSb3ciLCJldmVudCIsInNyY0VsZW1lbnQiLCJ2YWx1ZSIsImNoYW5nZUNsdW1uIiwiaW5wdXRTZWFyY2giLCJfc2VsZiIsIndvcmQiLCJ2YWwiLCJhamF4IiwidXJsIiwidHlwZSIsImRhdGF0eXBlIiwic3VjY2VzcyIsImlucHV0SW50ZXJncmF0aW9uIiwiaW5kZXgiLCJpbnRlZ3JhdGlvbiIsInBhcnNlSW50Il0sIm1hcHBpbmdzIjoiQUFBQUEsRUFBRSxXQUVHQyxXQUNVLElBQUlDLE1BQ1hDLEdBQUksT0FDSkMsTUFFSUMsU0FDQUMsV0FDQUMsWUFBWSxFQUNaQyxTQUFVLEVBQ1ZDLEtBQUssVUFFTEMsU0FBUyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLElBRWxDQyxhQUFjLGFBWWRDLE9BQ0lKLFNBQVMsV0FDTEssUUFBUUMsSUFBSUMsS0FBS1AsV0FFckJELFlBQVksV0FDUk0sUUFBUUMsSUFBSUMsS0FBS1IsZUFHekJTLFNBQ0lDLFVBQVcsU0FBU0MsR0FDaEJILEtBQUtQLFNBQVdVLEVBQU1DLFdBQVdDLE9BcUJyQ0MsWUFBYSxTQUFTSCxHQUNsQkgsS0FBS1IsWUFBY1csRUFBTUMsV0FBV0MsT0FxQnhDRSxZQUFhLFdBQ1QsR0FBSUMsR0FBUVIsS0FDUlMsRUFBT3hCLEVBQUUsV0FBV3lCLEtBQ3hCekIsR0FBRTBCLE1BQ0VDLElBQUssNkJBQ0xDLEtBQU0sTUFDTnhCLE1BQ0lvQixLQUFNQSxHQUVWSyxTQUFTLE9BQ1RDLFFBQVMsU0FBUzFCLEdBQ2RtQixFQUFNbEIsTUFBUUQsRUFBS0EsU0FJL0IyQixrQkFBa0IsU0FBU0MsR0FDdkIsR0FBSUMsR0FBY0MsU0FBU2xDLEVBQUUsSUFBSWdDLEdBQU9QLE1BQ3hDVixNQUFLVixNQUFNMkIsR0FBT0MsWUFBY0EiLCJmaWxlIjoicGF5L3JlYWx0aW1lX3NhbGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChmdW5jdGlvbigpIHtcblxuICAgICBzZXR1cENTUkYoKTtcbiAgICAgdmFyIGFwcCA9IG5ldyBWdWUoe1xuICAgICAgICBlbDogJyNhcHAnLFxuICAgICAgICBkYXRhOiB7XG5cbiAgICAgICAgICAgIHVzZXJzOiBbXSxcbiAgICAgICAgICAgIHNlbGVjdHM6W10sXG4gICAgICAgICAgICBtYXhfY29sdW1uczowLFxuICAgICAgICAgICAgbWF4X3Jvd3M6IDAsXG4gICAgICAgICAgICByb3dzOicwMDAwMC4wJyxcbiAgICAgICAgICAgIC8vIHJvd3M6WycwJywgJzAnLCAnMCcsICcwJywgJzAnLCAnLicsICcwJ10sXG4gICAgICAgICAgICBjb2x1bW5zOlsxLCAyLCAzLCA0LCA1LCA2LCA3LCA4XVxuICAgICAgICB9LFxuICAgICAgICBiZWZvcmVDcmVhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcztcbiAgICAgICAgICAgIC8vICQuYWpheCh7XG4gICAgICAgICAgICAvLyAgICAgdXJsOiBcIi9hcGkvdjEuMS9wYXkvc3RhZmZcIixcbiAgICAgICAgICAgIC8vICAgICB0eXBlOiBcIkdFVFwiLFxuICAgICAgICAgICAgLy8gICAgIGRhdGF0eXBlOiBcIkpTT05QXCIsXG4gICAgICAgICAgICAvLyAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgICAgIC8vICAgICAgICAgX3NlbGYudXNlcnMgPSBkYXRhLmRhdGE7XG4gICAgICAgICAgICAvLyAgICAgfVxuICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHdhdGNoOntcbiAgICAgICAgICAgIG1heF9yb3dzOmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5tYXhfcm93cyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWF4X2NvbHVtbnM6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm1heF9jb2x1bW5zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgbWV0aG9kczoge1xuICAgICAgICAgICAgY2hhbmdlUm93OiBmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICAgICAgdGhpcy5tYXhfcm93cyA9IGV2ZW50LnNyY0VsZW1lbnQudmFsdWU7XG4gICAgICAgICAgICAgICAgLy8gdmFyIF9zZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICAvLyB2YXIganNvblN0cmluZyA9IEpTT04uc3RyaW5naWZ5KF9zZWxmLnVzZXJzKTtcbiAgICAgICAgICAgICAgICAvLyAkLmFqYXgoe1xuICAgICAgICAgICAgICAgIC8vICAgICB1cmw6IFwiL2FwaS92MS4xL3BheS9zdGFmZlwiLFxuICAgICAgICAgICAgICAgIC8vICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICAvLyAgICAgZGF0YTp7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBkYXRhOiBqc29uU3RyaW5nXG4gICAgICAgICAgICAgICAgLy8gICAgIH0sXG4gICAgICAgICAgICAgICAgLy8gICAgIGRhdGF0eXBlOlwiSlNPTlwiLFxuICAgICAgICAgICAgICAgIC8vICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBpZiAoZGF0YS5jb2RlID09IDApe1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIGFsZXJ0KCfmiJDlip8nKTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBfc2VsZi51c2VycyA9IGRhdGEuZGF0YTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgYWxlcnQoJ+Wksei0pScpO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAgICAgICAvLyB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGFuZ2VDbHVtbjogZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgICAgICAgICAgIHRoaXMubWF4X2NvbHVtbnMgPSBldmVudC5zcmNFbGVtZW50LnZhbHVlO1xuICAgICAgICAgICAgICAgIC8vIHZhciBfc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgLy8gdmFyIGpzb25TdHJpbmcgPSBKU09OLnN0cmluZ2lmeShfc2VsZi51c2Vycyk7XG4gICAgICAgICAgICAgICAgLy8gJC5hamF4KHtcbiAgICAgICAgICAgICAgICAvLyAgICAgdXJsOiBcIi9hcGkvdjEuMS9wYXkvc3RhZmZcIixcbiAgICAgICAgICAgICAgICAvLyAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgLy8gICAgIGRhdGE6e1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgZGF0YToganNvblN0cmluZ1xuICAgICAgICAgICAgICAgIC8vICAgICB9LFxuICAgICAgICAgICAgICAgIC8vICAgICBkYXRhdHlwZTpcIkpTT05cIixcbiAgICAgICAgICAgICAgICAvLyAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgaWYgKGRhdGEuY29kZSA9PSAwKXtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBhbGVydCgn5oiQ5YqfJyk7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgX3NlbGYudXNlcnMgPSBkYXRhLmRhdGE7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIGFsZXJ0KCflpLHotKUnKTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5wdXRTZWFyY2g6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICB2YXIgd29yZCA9ICQoXCIjc2VhcmNoXCIpLnZhbCgpO1xuICAgICAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL3YxLjEvcGF5L3N0YWZmLXNlYXJjaFwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIkdFVFwiLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOntcbiAgICAgICAgICAgICAgICAgICAgICAgIHdvcmQ6IHdvcmRcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZGF0YXR5cGU6XCJKU09OXCIsXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9zZWxmLnVzZXJzID0gZGF0YS5kYXRhO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5wdXRJbnRlcmdyYXRpb246ZnVuY3Rpb24oaW5kZXgpe1xuICAgICAgICAgICAgICAgIHZhciBpbnRlZ3JhdGlvbiA9IHBhcnNlSW50KCQoJyMnK2luZGV4KS52YWwoKSk7XG4gICAgICAgICAgICAgICAgdGhpcy51c2Vyc1tpbmRleF0uaW50ZWdyYXRpb24gPSBpbnRlZ3JhdGlvbjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgfSk7XG5cblxufSk7XG4iXX0=
