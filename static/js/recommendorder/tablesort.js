!function(t){t.tablesort=function(e,s){var i=this;this.$table=e,this.settings=t.extend({},t.tablesort.defaults,s),this.$table.find("thead th").bind("click.tablesort",function(){t(this).hasClass("disabled")||i.sort(t(this))}),this.index=null,this.$th=null,this.direction=[]},t.tablesort.prototype={sort:function(e,s){var i=new Date,a=this,n=this.$table,r=n.find("tbody tr"),o=e.index(),l=[],d=t("<div/>"),c=function(t,e,s){var i;return t.data().sortBy?(i=t.data().sortBy,"function"==typeof i?i(t,e,s):i):e.data("sort")?e.data("sort"):e.text()},h=function(t,e){var s,i,a,n=/(^-?[0-9]+(\.?[0-9]*)[df]?e?[0-9]?$|^0x[0-9a-f]+$|[0-9]+)/gi,r=/(^[ ]*|[ ]*$)/g,o=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,l=/^0x[0-9a-f]+$/i,d=/^0/,c=function(t){return(""+t).toLowerCase().replace(",","")},h=c(t).replace(r,"")||"",u=c(e).replace(r,"")||"",f=h.replace(n,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),b=u.replace(n,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),g=Math.max(f.length,b.length),p=parseInt(h.match(l),10)||1!=f.length&&h.match(o)&&Date.parse(h),$=parseInt(u.match(l),10)||p&&u.match(o)&&Date.parse(u)||null;if($){if(p<$)return-1;if(p>$)return 1}for(a=0;a<g;a++){if(s=!(f[a]||"").match(d)&&parseFloat(f[a])||f[a]||0,i=!(b[a]||"").match(d)&&parseFloat(b[a])||b[a]||0,isNaN(s)!==isNaN(i))return isNaN(s)?1:-1;if(typeof s!=typeof i&&(s+="",i+=""),s<i)return-1;if(s>i)return 1}return 0};0!==r.length&&(a.$table.find("thead th").removeClass(a.settings.asc+" "+a.settings.desc),this.$th=e,this.index!=o?this.direction[o]="desc":"asc"!==s&&"desc"!==s?this.direction[o]="desc"===this.direction[o]?"asc":"desc":this.direction[o]=s,this.index=o,s="asc"==this.direction[o]?1:-1,a.$table.trigger("tablesort:start",[a]),a.log("Sorting by "+this.index+" "+this.direction[o]),r.sort(function(i,n){var r=t(i),o=t(n),d=r.index(),u=o.index();return l[d]?i=l[d]:(i=c(e,a.cellToSort(i),a),l[d]=i),l[u]?n=l[u]:(n=c(e,a.cellToSort(n),a),l[u]=n),h(i,n)*s}),r.each(function(t,e){d.append(e)}),n.append(d.html()),e.addClass(a.settings[a.direction[o]]),a.log("Sort finished in "+((new Date).getTime()-i.getTime())+"ms"),a.$table.trigger("tablesort:complete",[a]))},cellToSort:function(e){return t(t(e).find("td").get(this.index))},log:function(e){(t.tablesort.DEBUG||this.settings.debug)&&console&&console.log&&console.log("[tablesort] "+e)},destroy:function(){return this.$table.find("thead th").unbind("click.tablesort"),this.$table.data("tablesort",null),null}},t.tablesort.DEBUG=!1,t.tablesort.defaults={debug:t.tablesort.DEBUG,asc:"sorted ascending",desc:"sorted descending"},t.fn.tablesort=function(e){var s,i;return this.each(function(){s=t(this),i=s.data("tablesort"),i&&i.destroy(),s.data("tablesort",new t.tablesort(s,e))})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
