!function(e){"use strict";var o=window.location.href,s=Number(o.match(/(dealer\/)\d+\//)[0].split("/")[1]);e.itemIdToIndex={},e.customerIdToIndex={},e.appVue=new Vue({el:"#app",data:{assocItemLoading:!1,assocCustomerLoading:!1,itemGroup:[],itemGroupDict:{},itemSearchTerm:"",associatedItems:[],assocItemSearchTerm:"",customerGroup:[],customerGroupDict:{},customerSearchTerm:"",associatedCustomers:[],associatedCustomerSearchTerm:"",groupAssociation:[],customers:[],customerIndexDict:{},items:[],curCustomerGroup:null,curItemGroup:null,curAssociation:null,categories:[]},computed:{fullLoading:function(){return 0===this.items.length||0===this.customers.length||this.assocItemLoading||this.assocCustomerLoading},computedItems:function(){var e=[],o=this;return 0===o.itemSearchTerm.length?o.items:(this.items.forEach(function(s){s.item_name.indexOf(o.itemSearchTerm)!==-1&&e.push(s)}),e)},computedAssocItems:function(){var e=[],o=this;return 0===o.assocItemSearchTerm.length?o.associatedItems:(this.associatedItems.forEach(function(s){s.item.item_name.indexOf(o.assocItemSearchTerm)!==-1&&e.push(s)}),e)},computedCustomers:function(){var e=[],o=this;return 0===o.customerSearchTerm.length?o.customers:(this.customers.forEach(function(s){(s.customer_name&&s.customer_name.indexOf(o.customerSearchTerm)!==-1||s.customer_id&&s.customer_id.indexOf(o.customerSearchTerm)!==-1)&&e.push(s)}),e)},computedAssocCustomers:function(){var e=[],o=this;return 0===o.associatedCustomerSearchTerm.length?o.associatedCustomers:(this.associatedCustomers.forEach(function(s){(s.customer.customer_name&&s.customer.customer_name.indexOf(o.associatedCustomerSearchTerm)!==-1||s.customer.customer_id&&s.customer.customer_id.indexOf(o.associatedCustomerSearchTerm)!==-1)&&e.push(s)}),e)}},watch:{curItemGroup:{handler:function(e,o){return null===o||null===e||"undefined"==typeof e.id||e.id!=o.id?void console.log("New item"):(console.log("Item modified"),void this.updateItemGroup(e))},deep:!0},curCustomerGroup:{handler:function(e,o){return null===o||null===e||"undefined"==typeof e.id||e.id!==o.id?void console.log("New Customer Group Item"):(console.log("Customer modified"),void this.updateCustomerGroup(e))},deep:!0},curAssociation:{handler:function(e,o){console.log(e),console.log(o),null!==e&&null!==o&&"undefined"!=typeof e.id&&e.id===o.id&&(console.log("Current Association changed"),this.updateAssociation(e))},deep:!0}},methods:{onSearchItemClicked:function(){console.log("search item"),this.itemSearchTerm=$("#item-search-input").val()},onSearchAssocItemClicked:function(){console.log("search assoc item"),this.assocItemSearchTerm=$("#assoc-item-search-input").val()},onSearchCustomerClicked:function(){console.log("search customer"),this.customerSearchTerm=$("#customer-search-input").val()},onSearchAssocCustomerClicked:function(){console.log("search assoc customer"),this.associatedCustomerSearchTerm=$("#assoc-customer-search-input").val()},setAllItemsSelected:function(e){this.items.forEach(function(o){o.selected=e})},setAllAssocItemsSelected:function(e){this.associatedItems.forEach(function(o){o.selected=e})},setAllCustomersSelected:function(e){this.customers.forEach(function(o){o.selected=e})},setAllAssocCustomersSelected:function(e){this.associatedCustomers.forEach(function(o){o.selected=e})},deleteSelAssoc:function(e,o){console.log("Removing association");var t=this;$.ajax({type:"DELETE",url:"/recommendorder/api/v1/dealer/"+s+"/customer_item_group_association/"+t.curAssociation.id,success:function(e){console.log(e),t.curItemGroup=null,t.curAssociation=null,t.curCustomerGroup=null,t.loadGroupAssociationData()}})},showModifyAssocNameModal:function(){$("#new-assoc-name-input").val(this.curAssociation.name),$("#modify-assoc-name").modal("show")},onModifyAssocName:function(){console.log("modifying assoc name"),this.curAssociation.name=$("#new-assoc-name-input").val(),$("#modify-assoc-name").modal("hide")},showModifyCustomerGroupName:function(){$("#new-customer-group-name-input").val(this.curCustomerGroup.group_name),$("#modify-customer-group-name").modal("show")},onModifyCustomerGroupName:function(){console.log("modify user group name"),this.curCustomerGroup.group_name=$("#new-customer-group-name-input").val(),$("#modify-customer-group-name").modal("hide")},showModifyItemGroupName:function(){console.log("modify item group name"),$("#new-item-group-name-input").val(this.curItemGroup.group_name),$("#modify-item-group-name").modal("show")},onModifyItemGroupName:function(){console.log("modify item group name"),this.curItemGroup.group_name=$("#new-item-group-name-input").val(),$("#modify-item-group-name").modal("hide")},updateAssociation:function(e){console.log("updating association"),console.log(e);var o=this;$.ajax({type:"PATCH",url:"/recommendorder/api/v1/dealer/"+s+"/customer_item_group_association/"+o.curAssociation.id+"/",data:e,success:function(e){console.log(e),o.groupAssociation.forEach(function(o){o.id===e.data.id&&(o.customer_group=e.data.customer_group,o.dealer=e.data.dealer,o.item_group=e.data.item_group,o.name=e.data.name)})}})},updateItemGroup:function(e){$.ajax({type:"PATCH",url:"/recommendorder/api/v1/dealer/"+s+"/item_group/"+e.id+"/",data:e,success:function(e){console.log(e)}})},updateCustomerGroup:function(e){$.ajax({type:"PATCH",url:"/recommendorder/api/v1/dealer/"+s+"/customer_group/"+e.id+"/",data:e,success:function(e){console.log(e)}})},searchItem:function(e){console.log(e);var o=this;$.ajax({dataType:"json",url:"/recommendorder/api/v1/dealer/"+s+"/item/search",data:{query:e},success:function(e){o.setItems(e.data)}})},loadCustomers:function(e){var o={per_page:0};null!==e&&(o.customer_name__contains=e),console.log("Loading customers");var t=this;$.ajax({dataType:"json",url:"/recommendorder/api/v1/dealer/"+s+"/customer",data:o,success:function(e){console.log(e),t.setCustomers(e.data)}})},loadCategories:function(){console.log("loading categories");var e=this;$.ajax({dataType:"json",url:"/recommendorder/api/v1/category",data:{per_page:0},success:function(o){e.categories=o.data}})},loadItems:function(){console.log("Loading items");var e=this;e.items=[],$.ajax({dataType:"json",url:"/recommendorder/api/v1/item",data:{per_page:0},success:function(o){e.setItems(o.data)}})},setItems:function(o){var s=this;o.forEach(function(o,s){o.selected=!1,o.associated=!1,e.itemIdToIndex[o.id]=s}),s.items=o},setCustomers:function(o){var s=this;o.forEach(function(o,s){o.selected=!1,o.associated=!1,e.customerIdToIndex[o.id]=s}),s.customers=o},addItemToGroup:function(){var o=this,t="";o.items.forEach(function(e){e.selected&&!e.associated&&(0===t.length?t+=e.id:t=t+","+e.id)}),$.ajax({type:"POST",url:"/recommendorder/api/v1/dealer/"+s+"/group_item_map/batch-add",data:{item_ids:t,group_id:o.curItemGroup.id},success:function(s){console.log("Returned"),s.data.forEach(function(s){o.associatedItems.push(s),o.items[e.itemIdToIndex[s.item.id]].associated=!0})}})},addCustomerToGroup:function(){var o=this,t="";o.customers.forEach(function(e){e.selected&&!e.associated&&(0===t.length?t+=e.id:t=t+","+e.id)}),console.log(t),$.ajax({type:"POST",url:"/recommendorder/api/v1/dealer/"+s+"/group_customer_map/batch-add",data:{customer_ids:t,group_id:o.curCustomerGroup.id},success:function(s){console.log(s),s.data.forEach(function(s){o.associatedCustomers.push(s),o.customers[e.customerIdToIndex[s.customer.id]].associated=!0})}})},removeItemFromGroup:function(){var o=this,t=[],a=[],r="";o.associatedItems.forEach(function(e){e.selected?(0===r.length?r+=e.id:r=r+","+e.id,a.push(e)):t.push(e)}),console.log(r),$.ajax({type:"DELETE",url:"/recommendorder/api/v1/dealer/"+s+"/group_item_map",data:{ids:r},success:function(s){console.log(s),a.forEach(function(s){var t=o.items[e.itemIdToIndex[s.item.id]];t.associated=!1,t.selected=!1})}}),o.associatedItems=t},removeCustomerFromGroup:function(){var o=this,t=[],a=[],r="";o.associatedCustomers.forEach(function(e){e.selected?(0===r.length?r+=e.id:r=r+","+e.id,a.push(e)):t.push(e)}),console.log(r),$.ajax({type:"DELETE",url:"/recommendorder/api/v1/dealer/"+s+"/group_customer_map",data:{ids:r},success:function(s){console.log(s),a.forEach(function(s){if(s.customer.id in e.customerIdToIndex){var t=o.customers[e.customerIdToIndex[s.customer.id]];t.associated=!1,t.selected=!1}})}}),o.associatedCustomers=t},loadGroupAssociationData:function(){console.log("loading group association data");var e=this;e.groupAssociation=[],$.ajax({dataType:"json",url:"/recommendorder/api/v1/dealer/"+s+"/customer_item_group_association",data:{per_page:0},success:function(o){e.groupAssociation=o.data}})},setItemAssociated:function(o,s){var t=this;o.forEach(function(o){t.items[e.itemIdToIndex[o.item.id]].associated=s})},loadAssociatedItems:function(){var e=this;e.assocItemLoading=!0,e.setItemAssociated(e.associatedItems,!1),e.associatedItems=[],$.ajax({dataType:"json",url:"/recommendorder/api/v1/dealer/"+s+"/group_item_map",data:{per_page:0,group:e.curItemGroup.id},success:function(o){o.data.forEach(function(e){e.selected=!1}),e.associatedItems=o.data,e.assocItemLoading=!1,e.setItemAssociated(e.associatedItems,!0)}})},setCustomerAssociated:function(o,s){var t=this;o.forEach(function(o){o.customer.id in e.customerIdToIndex&&(t.customers[e.customerIdToIndex[o.customer.id]].associated=s)})},loadAssociatedCustomers:function(){var e=this;e.assocCustomerLoading=!0,e.setCustomerAssociated(e.associatedCustomers,!1),e.associatedCustomers=[],$.ajax({dataType:"json",url:"/recommendorder/api/v1/dealer/"+s+"/group_customer_map",data:{group:e.curCustomerGroup.id,per_page:0},success:function(o){o.data.forEach(function(e){e.selected=!1}),e.associatedCustomers=o.data,e.setCustomerAssociated(e.associatedCustomers,!0),e.assocCustomerLoading=!1}})},setCurAssociation:function(e){var o={customer_group:e.customer_group.id,dealer:e.dealer.id,id:e.id,item_group:e.item_group.id,name:e.name};this.curAssociation=o},onAssocSelected:function(e){console.log("Association selected"),console.log(e),this.setCurAssociation(e),this.curCustomerGroup=e.customer_group,this.curItemGroup=e.item_group,this.loadAssociatedItems(),this.loadAssociatedCustomers()}},mounted:function(){console.log("Mounted, loading data"),this.loadGroupAssociationData(),this.loadItems(),this.loadCustomers(null)}}),$(document).ready(function(){$(".ui.checkbox").checkbox(),$("select.dropdown").dropdown();var o=null,t=null,a=null;$("#create-assoc").click(function(){o=null,t=null,a=null,$("#customer-group-name").val(""),$("#customer-group-rule").val("0"),$("#customer-form").removeClass("loading"),$("#customer-group-btn").removeClass("disabled"),$("#item-group-name").val(""),$("#item-group-rule").val("0"),$("#item-form").removeClass("loading"),$("#item-group-btn").removeClass("disabled"),$("#create-assoc-modal").modal("show")}),$("#customer-group-btn").click(function(e){var t=this;if(console.log("submit customer group"),null!==o)return void alert("Customer Group Added");var a=$("#customer-group-name").val(),r=$("#customer-group-rule").val();console.log(a),console.log(r),$("customer-group-form").addClass("loading"),$.ajax({type:"POST",url:"/recommendorder/api/v1/dealer/"+s+"/customer_group",data:{group_name:a,rule_type:r},success:function(e){console.log(e),o=e.data,$("customer-group-form").removeClass("loading"),$(t).addClass("disabled")}})}),$("#item-group-btn").click(function(e){var o=this;if(console.log("submit item group"),null!==t)return void alert("Item Group Added");var a=$("#item-group-name").val(),r=$("#item-group-rule").val();$("#item-group-from").addClass("loading"),$.ajax({type:"POST",url:"/recommendorder/api/v1/dealer/"+s+"/item_group",data:{group_name:a,rule_type:r},success:function(e){console.log(e),t=e.data,$("#item-group-form").removeClass("loading"),$(o).addClass("disabled")}})}),$("#submit-assoc").click(function(r){var c=this;if(null!==a)return void alert("New association already created");if(null===o||null===t)return void alert("Customer Group and Item Group must be created first");var i=$("#assoc-name").val();$("#assoc-form").addClass("loading"),$.ajax({type:"POST",url:"/recommendorder/api/v1/dealer/"+s+"/customer_item_group_association",data:{name:i,customer_group:o.id,item_group:t.id},success:function(o){console.log(o),a=o.data,$("#assoc-form").removeClass("loading"),$(c).addClass("disabled"),e.appVue.loadGroupAssociationData()}})}),setupCSRF()})}(window.cmApp=window.cmApp||{});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
