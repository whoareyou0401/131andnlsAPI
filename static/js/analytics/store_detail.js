function fillData(t){var e,a,i,l,o,d,s=window.store_id;switch(t){case"storedetail-base":e=$(".basic-indexes-module .date .date-choiced").attr("value"),$.ajax({url:"/analytics/chain-store",data:{action:t,term_range:e,store_id:s},type:"GET",success:function(t){1==t.success?($(".hierarchy span:eq(0)").text(t.data.name),$(".total-items").children("li:eq(0)").find("p:eq(1)").text(t.data.target_sales),$(".total-items").children("li:eq(1)").find("p:eq(1)").text(t.data.completeness),$(".total-items").children("li:eq(2)").find("p:eq(1)").text(t.data.difference),$(".total-items").children("li:eq(3)").find("p:eq(1)").text(t.data.turnover),$(".basic-indexes-module .options-tab").children("li:eq(0)").find("span:eq(1)").text(t.data.sales),$(".basic-indexes-module .options-tab").children("li:eq(1)").find("span:eq(1)").text(t.data.gross_profit),$(".basic-indexes-module .options-tab").children("li:eq(2)").find("span:eq(1)").text(t.data.num_trades),$(".basic-indexes-module .options-tab").children("li:eq(3)").find("span:eq(1)").text(t.data.unit_trade),$(".basic-indexes-module .total-items .basic-list div:eq(0) p span:eq(0)").text(t.data.term),$(".basic-indexes-module .total-items .basic-list div:eq(1) p span:eq(0)").text(t.data.term),$(".basic-indexes-module .total-items .basic-list div:eq(2) p span:eq(0)").text(t.data.term),$(".basic-indexes-module .total-items .basic-list div:eq(0) p span:eq(1)").text(t.data.term_on_term_target_sales),$(".basic-indexes-module .total-items .basic-list div:eq(1) p span:eq(1)").text(t.data.term_on_term_completeness),$(".basic-indexes-module .total-items .basic-list div:eq(2) p span:eq(1)").text(t.data.term_on_term_difference)):location.href="/logout"}});break;case"storedetail-chart":e=$(".basic-indexes-module .date .date-choiced").attr("value"),i=$(".basic-indexes-module .graph-color").attr("value"),$.ajax({url:"/analytics/chain-store",data:{action:t,term_range:e,arg:i,store_id:s},type:"GET",success:function(t){if(1==t.success){var e={tooltip:{show:!0,trigger:"axis",padding:10,textStyle:{fontFamily:"PingFangSC-Regular"}},legend:{right:"10%",data:[{name:t.data.name,textStyle:{color:"#ff5422"}},{name:t.data.term_on_term_name,textStyle:{color:"#9160ff"}}]},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"category",boundaryGap:!1,data:t.data.x_indices,axisLabel:{show:!0,textStyle:{fontFamily:"PingFangSC-Regular",color:"#2a2a2a",fontSize:12}},axisLine:{lineStyle:{color:"#ccc"}}},yAxis:{type:"value",axisLine:{show:!1},axisLabel:{show:!0,textStyle:{fontFamily:"PingFangSC-Regular",fontSize:12}}},series:[{name:t.data.name,type:"line",stack:"总量",lineStyle:{normal:{color:"#ff5422",shadowColor:"#ff5422",shadowBlur:60,shadowOffsetY:20}},data:t.data.data},{name:t.data.term_on_term_name,type:"line",stack:"总量1",lineStyle:{normal:{color:"#9160ff",shadowColor:"#9160ff",shadowBlur:60,shadowOffsetY:20}},data:t.data.term_on_term_data}],color:["#ff5422","#9160ff"]};fillChart("main",e),$(".curve-total p:eq(0)").text(t.data.term_on_term_tip),$(".curve-total p:eq(1) span:eq(0)").text(t.data.avg_tip),$(".curve-total p:eq(1) span:eq(1)").text(t.data.avg)}}});break;case"storedetail-item":e=$(".table-module .date .date-choiced").attr("value"),l=$(".table-module .options-tab .graph-color").attr("value"),o=$(".table-module .options-tab .graph-color").attr("order"),$.ajax({url:"/analytics/chain-store",data:{action:t,term_range:e,sort:l,order:o,store_id:s},type:"GET",dataType:"json",success:function(t){if(1==t.success){var e="<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>";$("table tbody tr").remove();for(var a=0;a<t.data.length;a++){$("table tbody").append(e),ii=a+1,$("table tr:eq("+ii+")").attr("value",t.data[a].foreign_id),$("table tr:eq("+ii+") td:eq(0)").text(ii);for(var i in t.data[a])index=$("table thead th[value='"+i+"']").index(),index!==-1&&$("table tr:eq("+ii+") td:eq("+index+")").text(t.data[a][i])}$("input:checkbox:not(:checked)").each(function(){hideTableCol($("table"),$(this).attr("value"))}),$("input:checkbox:checked").each(function(){showTableCol($("table"),$(this).attr("value"))})}}});break;case"storedetail-category":e=$(".circle-graph-module .date .date-choiced").attr("value"),a=$(".circle-graph-module .options-tab .graph-color").attr("value"),d=$(".circle-graph-module .options-tab .graph-color span").text(),$.ajax({url:"/analytics/chain-store",data:{action:t,term_range:e,arg:a,store_id:s},type:"GET",success:function(t){if(1==t.success){var e={tooltip:{show:!0,padding:10,trigger:"item",formatter:"{a} <br/>{b}: {c} ({d}%)"},legend:{orient:"vertical",x:"left",height:"250",left:"20",top:"15",data:t.data.categories,textStyle:{fontFamily:"PingFangSC-Regular"}},series:[{name:d,type:"pie",radius:["50%","70%"],avoidLabelOverlap:!1,center:["65%","50%"],label:{normal:{show:!1,position:"center",textStyle:{fontFamily:"PingFangSC-Regular"}},emphasis:{show:!0,textStyle:{fontSize:"20",fontWeight:"bold"}}},labelLine:{normal:{show:!1}},data:t.data.data}],color:t.data.palette};fillChart("circle_chart",e)}}});break;case"storedetail-increases":e=$(".bar-chart-module .date .date-choiced").attr("value"),a=$(".bar-chart-module .options-tab .graph-color").attr("value"),d=$(".bar-chart-module .options-tab .graph-color span").text(),$.ajax({url:"/analytics/chain-store",data:{action:t,term_range:e,arg:a,store_id:s},type:"GET",success:function(t){1==t.success&&(option={tooltip:{show:!0,padding:10,trigger:"axis",axisPointer:{type:"shadow"},textStyle:{fontFamily:"PingFangSC-Regular"},formatter:"{a} <br/>{b}: {c}%"},grid:{show:!0,left:70,top:20,right:70,bottom:40},calculable:!0,xAxis:[{type:"value",axisLabel:{show:!0,textStyle:{fontFamily:"PingFangSC-Regular",color:"#2a2a2a",fontSize:12}},axisLine:{lineStyle:{color:"#ccc"}}}],yAxis:[{type:"category",axisTick:{show:!1},data:t.data.categories,axisLabel:{show:!0,textStyle:{fontFamily:"PingFangSC-Regular",color:"#2a2a2a",fontSize:12}},axisLine:{lineStyle:{color:"#ccc"}}}],series:[{name:d,type:"bar",itemStyle:{normal:{label:{show:!0,position:"inside"},color:function(t){var e;return e=t.data.value>=0?"#FF491F":"#53d199"}}},data:t.data.data}]},fillChart("bar_chart",option))}})}}$(document).ready(function(){$("a[value='storedetail']").addClass("sidebar-color"),fillData("storedetail-base"),fillData("storedetail-chart"),fillData("storedetail-item"),fillData("storedetail-category"),fillData("storedetail-increases"),$(".date li").click(function(){if("8"==$(this).attr("value")&&("gross_profit"==$(this).parents(".bar-chart-module").find(".graph-color").attr("value")||"cross_ratio"==$(this).parents(".bar-chart-module").find(".graph-color").attr("value")))return!1;$(this).siblings(".date-choiced").removeClass(),$(this).addClass("date-choiced"),ga("send",{hitType:"event",eventCategory:"storedetail",eventAction:"date",eventLabel:$(this).text()});var t=$(this).scrollLeft();$("table th").eq(0).css("left",t),$("table th").eq(1).css("left",t).addClass("box-shadow"),$("table td:nth-child(1)").css("left",t),$("table td:nth-child(2)").css("left",t).addClass("box-shadow"),0===Number($(this).scrollLeft())&&($("table th").eq(1).removeClass("box-shadow"),$("table td:nth-child(2)").removeClass("box-shadow"))}),$(".options-tab li").click(function(){return("gross_profit"!=$(this).attr("value")&&"cross_ratio"!=$(this).attr("value")||"8"!=$(this).parents(".bar-chart-module").find(".date .date-choiced").attr("value"))&&($(this).siblings(".graph-color").removeClass(),void $(this).addClass("graph-color"))}),$(".basic-indexes-module .date li,.basic-indexes-module .options-tab li").click(function(){fillData("storedetail-base"),fillData("storedetail-chart")}),$(".table-module .date li,.table-module .options-tab li").click(function(){fillData("storedetail-item"),ga("send",{hitType:"event",eventCategory:"storedetail",eventAction:"item"})}),$(".add-image-special:eq(0)").click(function(){"hidden"==$(".explain-box-special").attr("hidden")?$(".explain-box-special").removeAttr("hidden"):$(".explain-box-special").attr("hidden","hidden")}),$(".add-image-special:eq(1)").click(function(){"hidden"==$(".add-items-special").attr("hidden")?$(".add-items-special").removeAttr("hidden"):$(".add-items-special").attr("hidden","hidden")}),$(".float-right input:eq(0), .float-right input:eq(1)").click(function(){$(".add-items-special").attr("hidden","hidden")}),$(".float-right input:eq(2)").click(function(){$(".add-items-special").attr("hidden","hidden"),$("input:checkbox:not(:checked)").each(function(){hideTableCol($("table"),$(this).attr("value"))}),$("input:checkbox:checked").each(function(){showTableCol($("table"),$(this).attr("value"))}),setTbaleWidth()}),$(".circle-graph-module .date li,.circle-graph-module .options-tab li").click(function(){fillData("storedetail-category"),ga("send",{hitType:"event",eventCategory:"storedetail",eventAction:"category"})}),$(".bar-chart-module .date li,.bar-chart-module .options-tab li").click(function(){fillData("storedetail-increases"),ga("send",{hitType:"event",eventCategory:"storedetail",eventAction:"increases"})}),$(".table-module .download").click(function(){$("table").tableExport({headings:!0,fileName:"items",formats:["csv"],position:"bottom",ignoreCSS:"[style*='display: none']"}),ga("send",{hitType:"event",eventCategory:"storedetail",eventAction:"download"})}),tableScrollFun()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
