!function(e){"use strict";function t(){$("#map_wrapper").height($("article").height())}function o(){t(),$(window).resize(function(){t()}),$(".menu .item").tab(),$(".dropdown").dropdown(),$(".ui.radio.checkbox").checkbox(),$(".ui.checkbox").checkbox()}function n(e){return console.log("unboxing"),console.log(e),{id:parseInt(e.id),name:e.store.name,keeper_name:e.store.contact_name,keeper_phone:e.store.contact_phone,counter_num:e.counter_num,comment:e.comment}}function a(){e.mapVm=new Vue({el:"#map-pg1",data:{mapStatus:u,clickPosMarker:null},mounted:function(){var t=this;e.mapInfo.map=new AMap.Map("map_wrapper",{zoom:15,center:[116.404,39.915]}),AMap.service(["AMap.Geocoder","AMap.PlaceSearch"],function(){e.mapInfo.geoc=new AMap.Geocoder,e.mapInfo.placeSearch=new AMap.PlaceSearch({pageSize:10,pageIndex:1,city:""})}),t.$watch(function(){var e=t.mapStatus.curPoint.lat,o=t.mapStatus.curPoint.lng;return(e+o)*(e+o+1)/2+e},function(){t.centerToCurPoint(),t.refreshAddr()}),e.mapInfo.map.on("click",function(e){t.mapStatus.curPoint.lat=e.lnglat.getLat(),t.mapStatus.curPoint.lng=e.lnglat.getLng()}),e.mapInfo.map.plugin("AMap.Geolocation",function(){e.mapInfo.geolocation=new AMap.Geolocation({enableHighAccuracy:!0,timeout:1e4,maximumAge:0,convert:!0,showButton:!0,buttonPosition:"LB",buttonOffset:new AMap.Pixel(10,20),showMarker:!0,showCircle:!0,panToLocation:!0,zoomToAccuracy:!0}),e.mapInfo.map.addControl(e.mapInfo.geolocation),AMap.event.addListener(e.mapInfo.geolocation,"complete",function(e){t.mapStatus.curPoint.lat=e.position.getLat(),t.mapStatus.curPoint.lng=e.position.getLng()}),t.reLocation()})},methods:{refreshAddr:function(){var t=this,o=new AMap.LngLat(t.mapStatus.curPoint.lng,t.mapStatus.curPoint.lat);e.mapInfo.geoc.getAddress(o,function(e,o){console.log(o),"complete"===e&&"OK"===o.info?(t.mapStatus.curPoint.address=o.regeocode.formattedAddress,t.mapStatus.curPoint.adcode=o.regeocode.addressComponent.adcode,t.mapStatus.curPoint.citycode=o.regeocode.addressComponent.citycode):console.log("Fail to get address")})},reLocation:function(){var t=this;e.mapInfo.geolocation.getCurrentPosition(function(e,o){"error"===e?console.log("Error getting current location"):(t.mapStatus.curPoint.lat=o.position.getLat(),t.mapStatus.curPoint.lng=o.position.getLng())})},centerToCurPoint:function(){console.debug("Curpoint updated to "+this.mapStatus.curPoint.lat+","+this.mapStatus.curPoint.lng);var t=new AMap.LngLat(this.mapStatus.curPoint.lng,this.mapStatus.curPoint.lat);e.mapInfo.map.panTo(t),null!==e.mapInfo.curPosMarker?e.mapInfo.curPosMarker.setPosition(t):e.mapInfo.curPosMarker=new AMap.Marker({map:e.mapInfo.map,position:t,icon:new AMap.Icon({image:"http://webapi.amap.com/theme/v1.3/markers/b/mark_b.png",imageSize:new AMap.Size(12,18)}),label:{content:"当前位置",offset:new AMap.Pixel(10,(-10))}})},goToAdd:function(){$("#add-dev-btn").click()},refreshAndShowNearestAdded:function(){var e=this;$.getJSON({url:"/api/v1.1/obt/store/nearest",data:{__lat:e.mapStatus.curPoint.lat,__lng:e.mapStatus.curPoint.lng}},function(t){e.mapStatus.addedShop=t.data,e.showAdded()})},refreshAndShowAllAdded:function(){var e=this;$.getJSON({url:"/api/v1.1/obt/store",data:{per_page:0}},function(t){e.mapStatus.addedShop=t.data,e.showAdded()})},showAdded:function(){var t=this;t.clearAddedOverlay(),null!==t.mapStatus.addedShop&&t.mapStatus.addedShop.forEach(function(t){var o=new AMap.Marker({map:e.mapInfo.map,position:new AMap.LngLat(t.store.lng,t.store.lat),icon:new AMap.Icon({image:"http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png",imageSize:new AMap.Size(10,15)}),label:{cotent:t.store.name,offset:new AMap.Pixel(20,(-10))}});e.mapInfo.addedMarkers.push(o)})},refreshAndShowNearBy:function(){var t=this,o=new AMap.LngLat(t.mapStatus.curPoint.lng,t.mapStatus.curPoint.lat);e.mapInfo.placeSearch.setCity(t.mapStatus.curPoint.citycode),e.mapInfo.placeSearch.searchNearBy("超市",o,2e3,function(o,n){console.log(o),"complete"===o&&"OK"===n.info&&(console.log(n),e.mapInfo.nearByStores=n.poiList.pois,t.showNearBy())})},showNearBy:function(){var t=this;t.clearNearByOverlay(),e.mapInfo.nearByStores.forEach(function(t){var o=new AMap.LngLat(t.location.lng,t.location.lat),n=new AMap.Marker({map:e.mapInfo.map,position:o,icon:new AMap.Icon({image:"http://webapi.amap.com/theme/v1.3/markers/b/mark_b.png",imageSize:new AMap.Size(10,15)}),label:{content:t.name,offset:new AMap.Pixel(20,(-10))}});e.mapInfo.nearByShopMarkers.push(n)})},clearOverlay:function(){this.clearAddedOverlay(),this.clearNearByOverlay()},clearAddedOverlay:function(){self=this,e.mapInfo.addedMarkers.forEach(function(e){e.setMap(null)}),e.mapInfo.addedMarkers=[]},clearNearByOverlay:function(){self=this,e.mapInfo.nearByShopMarkers.forEach(function(e){e.setMap(null)}),e.mapInfo.nearByShopMarkers=[]}}})}function i(e){e.addClass("active"),e.siblings().removeClass("active")}function r(e){for(var t in e)e.hasOwnProperty(t)&&(e[t]=null)}function c(){e.shopAddTabVm=new Vue({el:"#add-shop-tab",data:{shop:h,shopLst:[],curLocation:u.curPoint,imgUploadProgress:0,imgLocalPath:null,imgRemotePath:null},methods:{searchNearbyShops:function(){var t=this;t.shop.ref.name<=1||(e.mapInfo.placeSearch.setCity(t.curLocation.citycode),e.mapInfo.placeSearch.searchNearBy(t.shop.ref.name,new AMap.LngLat(t.curLocation.lng,t.curLocation.lat),2e3,function(e,o){"complete"==e&&"OK"==o.info&&(console.log(o),t.shopLst=o.poiList.pois)}))},searchItemSelected:function(e){console.debug("clicked");var t=this.shopLst[$(e.target).attr("idx")];this.shop.ref.name=t.name,this.curLocation.lat=t.location.lat,this.curLocation.lng=t.location.lng,this.shop.ref.phone=t.telephone,$("#shop-name-input").popup("hide")},boxStoreData:function(){var e=this,t={comment:e.shop.ref.comment,counter_num:e.shop.ref.counter_num,store_obj:{name:e.shop.ref.name,adcode:e.curLocation.adcode,address:e.curLocation.address,lat:e.curLocation.lat,lng:e.curLocation.lng,contact_name:e.shop.ref.keeper_name,contact_phone:e.shop.ref.keeper_phone}};return null!==e.shop.id&&(t.id=e.shop.ref.id),t},add:function(){var e=this,t=e.boxStoreData();$.ajax({url:"/api/v1.1/obt/store",method:"post",dataType:"text",contentType:"application/json; charset=utf-8",data:JSON.stringify(t)}).done(function(t){return t=$.parseJSON(t),console.log(t),0!==t.code?void alert("添加失败"+t.message+"\n"+t.errors):(e.shop.ref=n(t.data),void alert("添加成功"))}).fail(function(){alert("添加失败")})},save:function(){var e=this;return null===e.shop.ref.id?void alert("请先保存商店"):void $.ajax({url:"/api/v1.1/obt/store/"+e.shop.ref.id+"/",method:"patch",dataType:"text",contentType:"application/json; charset=utf-8",data:JSON.stringify(e.boxStoreData())}).done(function(t){return t=$.parseJSON(t),console.log(t),0!==t.code?void alert("保存失败"+t.message+"\n"+t.errors):(e.shop.ref=n(t.data),void alert("保存成功"))}).fail(function(){alert("保存失败")})},clearData:function(){r(this.shop.ref)}},mounted:function(){$("#shop-name-input").popup({position:"bottom left",on:"click"})},watch:{"shop.ref.name":function(){this.searchNearbyShops()}}}),e.shopSelectTabVm=new Vue({el:"#select-shop-tab",data:{shop:h,shopLst:[]},mounted:function(){console.debug("Ready!!!");$("#shop-name-search").popup({position:"bottom left",on:"click"})},watch:{"shop.ref.name":function(e,t){var o=this;return null===e||"undefined"==typeof e||0===e.length?void o.refreshShopLst():void(null===e||e.length<=1||$.getJSON({url:"/api/v1.1/obt/store",data:{store__name__contains:this.shop.ref.name,per_page:5,o:"created"}},function(e){o.shopLst=e.data}))}},methods:{searchItemSelected:function(e){this.shop.ref=n(this.shopLst[$(e.target).attr("idx")]),$("#shop-name-search").popup("hide")},refreshShopLst:function(){var e=this;$.getJSON({url:"/api/v1.1/obt/store/nearest",data:{__lat:u.curPoint.lat,__lng:u.curPoint.lng}}).done(function(t){e.shopLst=t.data.slice(0,5)}).fail(function(e){console.debug("Fail")})}}}),e.shopSelectorVm=new Vue({el:"#shop-selector-menu",data:{curMode:0},methods:{switchToAdd:function(e){i($("#shop-add-item")),console.debug("Switching to add shop"),r(h.ref),this.curMode=0,$.tab("change tab","add-shop")},switchToSelect:function(e){i($("#shop-select-item")),console.debug("Switching to select shop"),r(h.ref),this.curMode=1,$.tab("change tab","select-shop")}},mounted:function(){this.switchToAdd()}})}function s(){e.deviceVm=new Vue({el:"#device-selector",data:{device:m,deviceLst:[],shop:h,is_printer:!1},methods:{loadDevices:function(){var e=this;null!==this.shop.ref.id&&$.getJSON({url:"/api/v1.1/obt/device",data:{store:e.shop.ref.id}}).done(function(t){console.debug(t),e.deviceLst=t.data}).fail(function(){alert("Fail to load devices")})},add:function(){var e=this;return null===h.ref.id?void alert("请先选择或者保存店铺信息"):(e.device.ref.store=h.ref.id,void $.ajax({url:"/api/v1.1/obt/device",method:"post",contentType:"application/json; charset=utf-8",data:e.device.ref}).done(function(t){return 0!==t.code?void alert("添加失败"+t.message+"\n"+t.errors):(e.deviceLst.push(JSON.parse(JSON.stringify(t.data))),e.device.ref=t.data,e.is_printer=1===t.data.version_num,void e.addNext())}).fail(function(e){console.log(e),alert("失败")}))},save:function(){var e=this;return null===h.ref.id?void alert("请先选择或者保存店铺信息"):(null===e.device.ref.id&&alert("保存后才能修改"),e.device.ref.shop=h.ref.id,void $.ajax({url:"/api/v1.1/obt/device/"+e.device.ref.id+"/",method:"patch",contentType:"application/json; charset=utf-8",data:e.device.ref}).done(function(t){return 0!==t.code?void alert("失败"+t.message+"\n"+t.errors):(e.device.ref=t.data,e.is_printer=1===t.data.version_num,void alert("成功"))}).fail(function(){alert("失败")}))},addNext:function(){return null===this.device.id?void alert("请先保存当前设备"):(this.device.ref={id:null,comment:null,device_id:null,store:null,version_num:2},void(this.is_printer=!1))}},watch:{"shop.ref.id":function(e,t){console.debug("Show changed"),null!==e&&this.loadDevices()},is_printer:function(){this.is_printer?this.device.version_num=1:this.device.version_num=2}}})}function d(){var t=new Vue({el:"#ori-pg4",data:{searchTerm:"",shopLst:[],page_meta:{},page:1,numAdded:0,numFailed:0,numToAdd:0,numNotAdd:0},methods:{addDevice:function(e,t){console.log("Adding"+e+","+t);var o=this,n={store:e,device_id:t,version_num:2};++o.numToAdd,$.ajax({url:"/api/v1.1/obt/device",method:"post",contentType:"application/json; charset=utf-8",data:n}).done(function(e){return 0!==e.code?(alert("添加失败: "+t+e.message+"\n"+e.errors),void++o.numFailed):void++o.numAdded}).fail(function(e){alert("添加失败: "+t),++o.numFailed})},submit:function(){console.log("Submit!");var e=this;e.numAdded=0,e.numFailed=0,e.numToAdd=0,e.numNotAdd=0;for(var t=0;t<e.shopLst.length;++t){var o=e.shopLst[t];if(o.dirty&&o.newDevices.length>0){console.log(o);for(var n=o.newDevices.split(","),a=0;a<n.length;++a)e.addDevice(o.id,n[a])}}},loadData:function(){var e=this,t={per_page:10,o:["-created"],page:e.page};e.searchTerm.length>0&&(t.store__name__contains=e.searchTerm),$.ajax({url:"/api/v1.1/obt/store",data:t,method:"get",dataType:"json"}).done(function(t){console.log(t),e.handleData(t)})},handleData:function(e){this.page_meta=e.pagination_meta;for(var t=0;t<e.data.length;++t){var o=e.data[t];o.dirty=!1,o.newDevices="";for(var n=[],a=0;a<o.device_set.length;++a)n.push(o.device_set[a].device_id);delete o.device_set,o.deviceidLst=n}console.log(e.data),this.shopLst=e.data},handleAdded:function(){this.numToAdd===this.numAdded+this.numFailed&&(console.log("Done!"),this.loadData())}},mounted:function(){this.loadData()},watch:{searchTerm:function(e,t){var o=this;o.searchTerm.length>2&&o.loadData()},numAdded:function(){this.handleAdded()}}});e.mgmtVm=t}function l(){"deviceid"in p&&(m.ref.device_id=p.deviceid,$("#add-dev-btn").click(),e.shopSelectorVm.switchToSelect())}var p=function(){for(var e={},t=window.location.search.substring(1),o=t.split("&"),n=0;n<o.length;n++){var a=o[n].split("=");if("undefined"==typeof e[a[0]])e[a[0]]=decodeURIComponent(a[1]);else if("string"==typeof e[a[0]]){var i=[e[a[0]],decodeURIComponent(a[1])];e[a[0]]=i}else e[a[0]].push(decodeURIComponent(a[1]))}return e}();console.log(p);var u={curPoint:{lat:116.404,lng:39.915,address:null,adcode:null,citycode:null},addedShop:[],nearByShop:[]};e.mapInfo={},e.mapInfo.map=null,e.mapInfo.geolocation=null,e.mapInfo.geoc=null,e.mapInfo.curPosMarker=null,e.mapInfo.addedMarkers=[],e.mapInfo.placeSearch=null,e.mapInfo.nearByShopMarkers=[],e.mapInfo.nearByStores=[];var h={ref:{id:null,name:null,keeper_name:null,keeper_phone:null,counter_num:null,comment:null}},m={ref:{id:null,comment:null,device_id:null,store:null,version_num:2}};$(document).ready(function(){setupCSRF(),a(),c(),s(),d(),e.shop=h,e.device=m,o(),l()})}(window.cmApp=window.cmApp||{});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9idC9pbmRleC5qcyJdLCJuYW1lcyI6WyJjbUFwcCIsInNldE1hcEhlaWdodCIsIiQiLCJoZWlnaHQiLCJpbml0TGF5b3V0Iiwid2luZG93IiwicmVzaXplIiwidGFiIiwiZHJvcGRvd24iLCJjaGVja2JveCIsInVuYm94U3RvcmVEYXRhIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJpZCIsInBhcnNlSW50IiwibmFtZSIsInN0b3JlIiwia2VlcGVyX25hbWUiLCJjb250YWN0X25hbWUiLCJrZWVwZXJfcGhvbmUiLCJjb250YWN0X3Bob25lIiwiY291bnRlcl9udW0iLCJjb21tZW50IiwiaW5pdE1hcCIsIm1hcFZtIiwiVnVlIiwiZWwiLCJtYXBTdGF0dXMiLCJnZW9Mb2NhdGlvbiIsImNsaWNrUG9zTWFya2VyIiwibW91bnRlZCIsInNlbGYiLCJ0aGlzIiwibWFwSW5mbyIsIm1hcCIsIkFNYXAiLCJNYXAiLCJ6b29tIiwiY2VudGVyIiwic2VydmljZSIsImdlb2MiLCJHZW9jb2RlciIsInBsYWNlU2VhcmNoIiwiUGxhY2VTZWFyY2giLCJwYWdlU2l6ZSIsInBhZ2VJbmRleCIsImNpdHkiLCIkd2F0Y2giLCJhIiwiY3VyUG9pbnQiLCJsYXQiLCJiIiwibG5nIiwiY2VudGVyVG9DdXJQb2ludCIsInJlZnJlc2hBZGRyIiwib24iLCJlIiwibG5nbGF0IiwiZ2V0TGF0IiwiZ2V0TG5nIiwicGx1Z2luIiwiZ2VvbG9jYXRpb24iLCJHZW9sb2NhdGlvbiIsImVuYWJsZUhpZ2hBY2N1cmFjeSIsInRpbWVvdXQiLCJtYXhpbXVtQWdlIiwiY29udmVydCIsInNob3dCdXR0b24iLCJidXR0b25Qb3NpdGlvbiIsImJ1dHRvbk9mZnNldCIsIlBpeGVsIiwic2hvd01hcmtlciIsInNob3dDaXJjbGUiLCJwYW5Ub0xvY2F0aW9uIiwiem9vbVRvQWNjdXJhY3kiLCJhZGRDb250cm9sIiwiZXZlbnQiLCJhZGRMaXN0ZW5lciIsInBvc2l0aW9uIiwicmVMb2NhdGlvbiIsIm1ldGhvZHMiLCJwb2ludCIsIkxuZ0xhdCIsImdldEFkZHJlc3MiLCJzdGF0dXMiLCJycyIsImluZm8iLCJhZGRyZXNzIiwicmVnZW9jb2RlIiwiZm9ybWF0dGVkQWRkcmVzcyIsImFkY29kZSIsImFkZHJlc3NDb21wb25lbnQiLCJjaXR5Y29kZSIsImdldEN1cnJlbnRQb3NpdGlvbiIsInIiLCJkZWJ1ZyIsInBhblRvIiwiY3VyUG9zTWFya2VyIiwic2V0UG9zaXRpb24iLCJNYXJrZXIiLCJpY29uIiwiSWNvbiIsImltYWdlIiwiaW1hZ2VTaXplIiwiU2l6ZSIsImxhYmVsIiwiY29udGVudCIsIm9mZnNldCIsImdvVG9BZGQiLCJjbGljayIsInJlZnJlc2hBbmRTaG93TmVhcmVzdEFkZGVkIiwiZ2V0SlNPTiIsInVybCIsIl9fbGF0IiwiX19sbmciLCJhZGRlZFNob3AiLCJzaG93QWRkZWQiLCJyZWZyZXNoQW5kU2hvd0FsbEFkZGVkIiwicGVyX3BhZ2UiLCJjbGVhckFkZGVkT3ZlcmxheSIsImZvckVhY2giLCJlbnRyeSIsIm1hcmtlciIsImNvdGVudCIsImFkZGVkTWFya2VycyIsInB1c2giLCJyZWZyZXNoQW5kU2hvd05lYXJCeSIsImNwb2ludCIsInNldENpdHkiLCJzZWFyY2hOZWFyQnkiLCJyZXN1bHQiLCJuZWFyQnlTdG9yZXMiLCJwb2lMaXN0IiwicG9pcyIsInNob3dOZWFyQnkiLCJjbGVhck5lYXJCeU92ZXJsYXkiLCJsb2NhdGlvbiIsIm5lYXJCeVNob3BNYXJrZXJzIiwiY2xlYXJPdmVybGF5Iiwic2V0TWFwIiwic2V0QWN0aXZlSXRlbSIsInRhcmdldCIsImFkZENsYXNzIiwic2libGluZ3MiLCJyZW1vdmVDbGFzcyIsImNsZWFyRGF0YSIsImsiLCJoYXNPd25Qcm9wZXJ0eSIsImluaXRTaG9wU2VsZWN0b3IiLCJzaG9wQWRkVGFiVm0iLCJzaG9wIiwic2hvcExzdCIsImN1ckxvY2F0aW9uIiwiaW1nVXBsb2FkUHJvZ3Jlc3MiLCJpbWdMb2NhbFBhdGgiLCJpbWdSZW1vdGVQYXRoIiwic2VhcmNoTmVhcmJ5U2hvcHMiLCJyZWYiLCJzZWFyY2hJdGVtU2VsZWN0ZWQiLCJzZWFyY2hSIiwiYXR0ciIsInBob25lIiwidGVsZXBob25lIiwicG9wdXAiLCJib3hTdG9yZURhdGEiLCJzdG9yZV9vYmoiLCJhZGQiLCJwYXJhbXMiLCJhamF4IiwibWV0aG9kIiwiZGF0YVR5cGUiLCJjb250ZW50VHlwZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJkb25lIiwicGFyc2VKU09OIiwiY29kZSIsImFsZXJ0IiwibWVzc2FnZSIsImVycm9ycyIsImZhaWwiLCJzYXZlIiwid2F0Y2giLCJzaG9wLnJlZi5uYW1lIiwic2hvcFNlbGVjdFRhYlZtIiwibmV3VmFsIiwib2xkVmFsIiwibGVuZ3RoIiwicmVmcmVzaFNob3BMc3QiLCJzdG9yZV9fbmFtZV9fY29udGFpbnMiLCJvIiwic2xpY2UiLCJzaG9wU2VsZWN0b3JWbSIsImN1ck1vZGUiLCJzd2l0Y2hUb0FkZCIsInN3aXRjaFRvU2VsZWN0IiwiaW5pdERldmljZVBhbmVsIiwiZGV2aWNlVm0iLCJkZXZpY2UiLCJkZXZpY2VMc3QiLCJpc19wcmludGVyIiwibG9hZERldmljZXMiLCJwYXJzZSIsInZlcnNpb25fbnVtIiwiYWRkTmV4dCIsImRldmljZV9pZCIsInNob3AucmVmLmlkIiwiaW5pdE1nbXREYXRhIiwibWdtdFZtIiwic2VhcmNoVGVybSIsInBhZ2VfbWV0YSIsInBhZ2UiLCJudW1BZGRlZCIsIm51bUZhaWxlZCIsIm51bVRvQWRkIiwibnVtTm90QWRkIiwiYWRkRGV2aWNlIiwic2hvcElkIiwiZGV2aWNlSWQiLCJkZXZpY2VEYXRhIiwic3VibWl0IiwiaSIsInMiLCJkaXJ0eSIsIm5ld0RldmljZXMiLCJucyIsInNwbGl0IiwiaiIsImxvYWREYXRhIiwicmVxdWVzdCIsImhhbmRsZURhdGEiLCJwYWdpbmF0aW9uX21ldGEiLCJkIiwiZGV2aWNlaWRMc3QiLCJkZXZpY2Vfc2V0IiwiaGFuZGxlQWRkZWQiLCJoYW5kbGVRdWVyeVN0cmluZyIsIlF1ZXJ5U3RyaW5nIiwiZGV2aWNlaWQiLCJxdWVyeV9zdHJpbmciLCJxdWVyeSIsInNlYXJjaCIsInN1YnN0cmluZyIsInZhcnMiLCJwYWlyIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiYXJyIiwibmVhckJ5U2hvcCIsImRvY3VtZW50IiwicmVhZHkiLCJzZXR1cENTUkYiXSwibWFwcGluZ3MiOiJDQUFBLFNBQVVBLEdBQ04sWUFDQSxTQUFTQyxLQUNMQyxFQUFFLGdCQUFnQkMsT0FBT0QsRUFBRSxXQUFXQyxVQUUxQyxRQUFTQyxLQUNMSCxJQUNBQyxFQUFFRyxRQUFRQyxPQUFPLFdBQ2JMLE1BRUpDLEVBQUUsZUFBZUssTUFDakJMLEVBQUUsYUFBYU0sV0FDZk4sRUFBRSxzQkFBc0JPLFdBQ3hCUCxFQUFFLGdCQUFnQk8sV0FrRHRCLFFBQVNDLEdBQWVDLEdBR3BCLE1BRkFDLFNBQVFDLElBQUksWUFDWkQsUUFBUUMsSUFBSUYsSUFFUkcsR0FBSUMsU0FBU0osRUFBS0csSUFDbEJFLEtBQU1MLEVBQUtNLE1BQU1ELEtBQ2pCRSxZQUFhUCxFQUFLTSxNQUFNRSxhQUN4QkMsYUFBY1QsRUFBS00sTUFBTUksY0FDekJDLFlBQWFYLEVBQUtXLFlBQ2xCQyxRQUFTWixFQUFLWSxTQUl0QixRQUFTQyxLQUNMeEIsRUFBTXlCLE1BQVEsR0FBSUMsTUFDZEMsR0FBSSxXQUNKaEIsTUFDSWlCLFVBQVdDLEVBQ1hDLGVBQWdCLE1BRXBCQyxRQUFTLFdBQ0wsR0FBSUMsR0FBT0MsSUFDWGpDLEdBQU1rQyxRQUFRQyxJQUFNLEdBQUlDLE1BQUtDLElBQUksZUFDN0JDLEtBQU0sR0FDTkMsUUFBUyxRQUFTLFVBRWxDSCxLQUFLSSxTQUFTLGdCQUFpQixvQkFBb0IsV0FDbER4QyxFQUFNa0MsUUFBUU8sS0FBTSxHQUFJTCxNQUFLTSxTQUNkMUMsRUFBTWtDLFFBQVFTLFlBQWMsR0FBSVAsTUFBS1EsYUFDakNDLFNBQVUsR0FDVkMsVUFBVSxFQUNWQyxLQUFNLE9BSWRmLEVBQUtnQixPQUNELFdBQ0ksR0FBSUMsR0FBSWpCLEVB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SyxJQUFJdkgsS0FBS3dILG1CQUFtQkQsRUFBSyxLQUd2RCxNQUFPTCxLQUVUcE8sU0FBUUMsSUFBSWlPLEVBR1osSUFBSWpOLElBQ0FxQixVQUNJQyxJQUFLLFFBQ0xFLElBQUssT0FDTG1DLFFBQVMsS0FDVEcsT0FBUSxLQUNSRSxTQUFVLE1BRWR1QixhQUNBb0ksY0FHSnhQLEdBQU1rQyxXQUVObEMsRUFBTWtDLFFBQVFDLElBQU0sS0FDcEJuQyxFQUFNa0MsUUFBUTRCLFlBQWMsS0FDNUI5RCxFQUFNa0MsUUFBUU8sS0FBTyxLQUNyQnpDLEVBQU1rQyxRQUFRZ0UsYUFBZSxLQUM3QmxHLEVBQU1rQyxRQUFRMkYsZ0JBQ2Q3SCxFQUFNa0MsUUFBUVMsWUFBYyxLQUM1QjNDLEVBQU1rQyxRQUFRd0cscUJBQ2QxSSxFQUFNa0MsUUFBUWtHLGVBMlBkLElBQUltQixJQUNBTyxLQUNJaEosR0FBSSxLQUNKRSxLQUFNLEtBQ05FLFlBQWEsS0FDYkUsYUFBYyxLQUNkRSxZQUFZLEtBQ1pDLFFBQVMsT0F5TmJnTCxHQUNBekMsS0FDSWhKLEdBQUksS0FDSlMsUUFBUyxLQUNUdUwsVUFBVyxLQUNYN0wsTUFBTyxLQUNQMkwsWUFBYSxHQXNQckIxTSxHQUFFdVAsVUFBVUMsTUFBTSxXQUNkQyxZQUNBbk8sSUFDQTZILElBQ0FnRCxJQUNBVyxJQUNBaE4sRUFBTXVKLEtBQU9BLEVBQ2J2SixFQUFNdU0sT0FBU0EsRUFDZm5NLElBQ0F5TyxPQUVMeE8sT0FBT0wsTUFBUUssT0FBT0wiLCJmaWxlIjoib2J0L2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKGNtQXBwKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgZnVuY3Rpb24gc2V0TWFwSGVpZ2h0KCkge1xuICAgICAgICAkKFwiI21hcF93cmFwcGVyXCIpLmhlaWdodCgkKFwiYXJ0aWNsZVwiKS5oZWlnaHQoKSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGluaXRMYXlvdXQoKSB7XG4gICAgICAgIHNldE1hcEhlaWdodCgpO1xuICAgICAgICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgc2V0TWFwSGVpZ2h0KCk7XG4gICAgICAgIH0pO1xuICAgICAgICAkKCcubWVudSAuaXRlbScpLnRhYigpO1xuICAgICAgICAkKCcuZHJvcGRvd24nKS5kcm9wZG93bigpO1xuICAgICAgICAkKCcudWkucmFkaW8uY2hlY2tib3gnKS5jaGVja2JveCgpO1xuICAgICAgICAkKCcudWkuY2hlY2tib3gnKS5jaGVja2JveCgpO1xuICAgIH1cblxuICAgIHZhciBRdWVyeVN0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIFRoaXMgZnVuY3Rpb24gaXMgYW5vbnltb3VzLCBpcyBleGVjdXRlZCBpbW1lZGlhdGVseSBhbmQgXG4gICAgICAvLyB0aGUgcmV0dXJuIHZhbHVlIGlzIGFzc2lnbmVkIHRvIFF1ZXJ5U3RyaW5nIVxuICAgICAgdmFyIHF1ZXJ5X3N0cmluZyA9IHt9O1xuICAgICAgdmFyIHF1ZXJ5ID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHJpbmcoMSk7XG4gICAgICB2YXIgdmFycyA9IHF1ZXJ5LnNwbGl0KFwiJlwiKTtcbiAgICAgIGZvciAodmFyIGk9MDtpPHZhcnMubGVuZ3RoO2krKykge1xuICAgICAgICB2YXIgcGFpciA9IHZhcnNbaV0uc3BsaXQoXCI9XCIpO1xuICAgICAgICAgICAgLy8gSWYgZmlyc3QgZW50cnkgd2l0aCB0aGlzIG5hbWVcbiAgICAgICAgaWYgKHR5cGVvZiBxdWVyeV9zdHJpbmdbcGFpclswXV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBxdWVyeV9zdHJpbmdbcGFpclswXV0gPSBkZWNvZGVVUklDb21wb25lbnQocGFpclsxXSk7XG4gICAgICAgICAgICAvLyBJZiBzZWNvbmQgZW50cnkgd2l0aCB0aGlzIG5hbWVcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcXVlcnlfc3RyaW5nW3BhaXJbMF1dID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgdmFyIGFyciA9IFsgcXVlcnlfc3RyaW5nW3BhaXJbMF1dLGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzFdKSBdO1xuICAgICAgICAgIHF1ZXJ5X3N0cmluZ1twYWlyWzBdXSA9IGFycjtcbiAgICAgICAgICAgIC8vIElmIHRoaXJkIG9yIGxhdGVyIGVudHJ5IHdpdGggdGhpcyBuYW1lXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcXVlcnlfc3RyaW5nW3BhaXJbMF1dLnB1c2goZGVjb2RlVVJJQ29tcG9uZW50KHBhaXJbMV0pKTtcbiAgICAgICAgfVxuICAgICAgfSBcbiAgICAgIHJldHVybiBxdWVyeV9zdHJpbmc7XG4gICAgfSgpO1xuICAgIGNvbnNvbGUubG9nKFF1ZXJ5U3RyaW5nKTtcblxuXG4gICAgdmFyIGdlb0xvY2F0aW9uID0ge1xuICAgICAgICBjdXJQb2ludDoge1xuICAgICAgICAgICAgbGF0OiAxMTYuNDA0LFxuICAgICAgICAgICAgbG5nOiAzOS45MTUsXG4gICAgICAgICAgICBhZGRyZXNzOiBudWxsLFxuICAgICAgICAgICAgYWRjb2RlOiBudWxsLFxuICAgICAgICAgICAgY2l0eWNvZGU6IG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgYWRkZWRTaG9wOiBbXSxcbiAgICAgICAgbmVhckJ5U2hvcDogW11cbiAgICB9O1xuXG4gICAgY21BcHAubWFwSW5mbyA9IHt9O1xuXG4gICAgY21BcHAubWFwSW5mby5tYXAgPSBudWxsO1xuICAgIGNtQXBwLm1hcEluZm8uZ2VvbG9jYXRpb24gPSBudWxsO1xuICAgIGNtQXBwLm1hcEluZm8uZ2VvYyA9IG51bGw7XG4gICAgY21BcHAubWFwSW5mby5jdXJQb3NNYXJrZXIgPSBudWxsO1xuICAgIGNtQXBwLm1hcEluZm8uYWRkZWRNYXJrZXJzID0gW107XG4gICAgY21BcHAubWFwSW5mby5wbGFjZVNlYXJjaCA9IG51bGw7XG4gICAgY21BcHAubWFwSW5mby5uZWFyQnlTaG9wTWFya2VycyA9IFtdO1xuICAgIGNtQXBwLm1hcEluZm8ubmVhckJ5U3RvcmVzID0gW107XG4gICAgZnVuY3Rpb24gdW5ib3hTdG9yZURhdGEoZGF0YSkge1xuICAgICAgICBjb25zb2xlLmxvZygndW5ib3hpbmcnKTtcbiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogcGFyc2VJbnQoZGF0YS5pZCksXG4gICAgICAgICAgICBuYW1lOiBkYXRhLnN0b3JlLm5hbWUsXG4gICAgICAgICAgICBrZWVwZXJfbmFtZTogZGF0YS5zdG9yZS5jb250YWN0X25hbWUsXG4gICAgICAgICAgICBrZWVwZXJfcGhvbmU6IGRhdGEuc3RvcmUuY29udGFjdF9waG9uZSxcbiAgICAgICAgICAgIGNvdW50ZXJfbnVtOiBkYXRhLmNvdW50ZXJfbnVtLFxuICAgICAgICAgICAgY29tbWVudDogZGF0YS5jb21tZW50LFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluaXRNYXAoKSB7XG4gICAgICAgIGNtQXBwLm1hcFZtID0gbmV3IFZ1ZSh7XG4gICAgICAgICAgICBlbDogJyNtYXAtcGcxJyxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBtYXBTdGF0dXM6IGdlb0xvY2F0aW9uLFxuICAgICAgICAgICAgICAgIGNsaWNrUG9zTWFya2VyOiBudWxsLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLm1hcCA9IG5ldyBBTWFwLk1hcChcIm1hcF93cmFwcGVyXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgem9vbTogMTUsXG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcjogWzExNi40MDQsIDM5LjkxNV1cbiAgICAgICAgICAgICAgICB9KTtcblx0XHRcdFx0QU1hcC5zZXJ2aWNlKFsnQU1hcC5HZW9jb2RlcicsICdBTWFwLlBsYWNlU2VhcmNoJ10sZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0Y21BcHAubWFwSW5mby5nZW9jPSBuZXcgQU1hcC5HZW9jb2RlcigpO1xuICAgICAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLnBsYWNlU2VhcmNoID0gbmV3IEFNYXAuUGxhY2VTZWFyY2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IDEwLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFnZUluZGV4OjEsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaXR5OiBcIlwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXHRcdFx0XHR9KTtcblxuICAgICAgICAgICAgICAgIHNlbGYuJHdhdGNoKFxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhID0gc2VsZi5tYXBTdGF0dXMuY3VyUG9pbnQubGF0O1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGIgPSBzZWxmLm1hcFN0YXR1cy5jdXJQb2ludC5sbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGEgKyBiKSAqIChhICsgYiArIDEpIC8gMiArIGE7XG4gICAgICAgICAgICAgICAgICAgIH0sIFxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY2VudGVyVG9DdXJQb2ludCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoQWRkcigpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNtQXBwLm1hcEluZm8ubWFwLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5tYXBTdGF0dXMuY3VyUG9pbnQubGF0ID0gZS5sbmdsYXQuZ2V0TGF0KCk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYubWFwU3RhdHVzLmN1clBvaW50LmxuZyA9IGUubG5nbGF0LmdldExuZygpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgY21BcHAubWFwSW5mby5tYXAucGx1Z2luKCdBTWFwLkdlb2xvY2F0aW9uJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIGNtQXBwLm1hcEluZm8uZ2VvbG9jYXRpb249IG5ldyBBTWFwLkdlb2xvY2F0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZSwvL+aYr+WQpuS9v+eUqOmrmOeyvuW6puWumuS9je+8jOm7mOiupDp0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lb3V0OiAxMDAwMCwgICAgICAgICAgLy/otoXov4cxMOenkuWQjuWBnOatouWumuS9je+8jOm7mOiupO+8muaXoOept+Wkp1xuICAgICAgICAgICAgICAgICAgICAgICAgbWF4aW11bUFnZTogMCwgICAgICAgICAgIC8v5a6a5L2N57uT5p6c57yT5a2YMOavq+enku+8jOm7mOiupO+8mjBcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnQ6IHRydWUsICAgICAgICAgICAvL+iHquWKqOWBj+enu+WdkOagh++8jOWBj+enu+WQjueahOWdkOagh+S4uumrmOW+t+WdkOagh++8jOm7mOiupO+8mnRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dCdXR0b246IHRydWUsICAgICAgICAvL+aYvuekuuWumuS9jeaMiemSru+8jOm7mOiupO+8mnRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1dHRvblBvc2l0aW9uOiAnTEInLCAgICAvL+WumuS9jeaMiemSruWBnOmdoFxuICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uT2Zmc2V0OiBuZXcgQU1hcC5QaXhlbCgxMCwgMjApLC8v5a6a5L2N5oyJ6ZKu5LiO6K6+572u55qE5YGc6Z2g5L2N572u55qE5YGP56e76YeP77yM6buY6K6k77yaUGl4ZWwoMTAsIDIwKVxuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd01hcmtlcjogdHJ1ZSwgICAgICAgIC8v5a6a5L2N5oiQ5Yqf5ZCO5Zyo5a6a5L2N5Yiw55qE5L2N572u5pi+56S654K55qCH6K6w77yM6buY6K6k77yadHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0NpcmNsZTogdHJ1ZSwgICAgICAgIC8v5a6a5L2N5oiQ5Yqf5ZCO55So5ZyG5ZyI6KGo56S65a6a5L2N57K+5bqm6IyD5Zu077yM6buY6K6k77yadHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgcGFuVG9Mb2NhdGlvbjogdHJ1ZSwgICAgIC8v5a6a5L2N5oiQ5Yqf5ZCO5bCG5a6a5L2N5Yiw55qE5L2N572u5L2c5Li65Zyw5Zu+5Lit5b+D54K577yM6buY6K6k77yadHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgem9vbVRvQWNjdXJhY3k6dHJ1ZSAgICAgIC8v5a6a5L2N5oiQ5Yqf5ZCO6LCD5pW05Zyw5Zu+6KeG6YeO6IyD5Zu05L2/5a6a5L2N5L2N572u5Y+K57K+5bqm6IyD5Zu06KeG6YeO5YaF5Y+v6KeB77yM6buY6K6k77yaZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNtQXBwLm1hcEluZm8ubWFwLmFkZENvbnRyb2woY21BcHAubWFwSW5mby5nZW9sb2NhdGlvbik7XG5cbiAgICAgICAgICAgICAgICAgICAgQU1hcC5ldmVudC5hZGRMaXN0ZW5lcihjbUFwcC5tYXBJbmZvLmdlb2xvY2F0aW9uLCAnY29tcGxldGUnLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm1hcFN0YXR1cy5jdXJQb2ludC5sYXQgPSBlLnBvc2l0aW9uLmdldExhdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5tYXBTdGF0dXMuY3VyUG9pbnQubG5nID0gZS5wb3NpdGlvbi5nZXRMbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgc2VsZi5yZUxvY2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWV0aG9kczoge1xuICAgICAgICAgICAgICAgIHJlZnJlc2hBZGRyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcG9pbnQgPSBuZXcgQU1hcC5MbmdMYXQoXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm1hcFN0YXR1cy5jdXJQb2ludC5sbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm1hcFN0YXR1cy5jdXJQb2ludC5sYXQpO1xuICAgICAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLmdlb2MuZ2V0QWRkcmVzcyhwb2ludCwgZnVuY3Rpb24oc3RhdHVzLCBycykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gJ2NvbXBsZXRlJyAmJiBycy5pbmZvID09PSAnT0snKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5tYXBTdGF0dXMuY3VyUG9pbnQuYWRkcmVzcyA9IHJzLnJlZ2VvY29kZS5mb3JtYXR0ZWRBZGRyZXNzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubWFwU3RhdHVzLmN1clBvaW50LmFkY29kZSA9IHJzLnJlZ2VvY29kZS5hZGRyZXNzQ29tcG9uZW50LmFkY29kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm1hcFN0YXR1cy5jdXJQb2ludC5jaXR5Y29kZSA9IHJzLnJlZ2VvY29kZS5hZGRyZXNzQ29tcG9uZW50LmNpdHljb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRmFpbCB0byBnZXQgYWRkcmVzcycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHJlTG9jYXRpb246IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIGNtQXBwLm1hcEluZm8uZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGZ1bmN0aW9uKHN0YXR1cywgcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gJ2Vycm9yJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFcnJvciBnZXR0aW5nIGN1cnJlbnQgbG9jYXRpb24nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5tYXBTdGF0dXMuY3VyUG9pbnQubGF0ID0gci5wb3NpdGlvbi5nZXRMYXQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm1hcFN0YXR1cy5jdXJQb2ludC5sbmcgPSByLnBvc2l0aW9uLmdldExuZygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNlbnRlclRvQ3VyUG9pbnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKCdDdXJwb2ludCB1cGRhdGVkIHRvICcgKyB0aGlzLm1hcFN0YXR1cy5jdXJQb2ludC5sYXQgKyAnLCcgKyB0aGlzLm1hcFN0YXR1cy5jdXJQb2ludC5sbmcpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcG9pbnQgPSBuZXcgQU1hcC5MbmdMYXQodGhpcy5tYXBTdGF0dXMuY3VyUG9pbnQubG5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXBTdGF0dXMuY3VyUG9pbnQubGF0KTtcbiAgICAgICAgICAgICAgICAgICAgY21BcHAubWFwSW5mby5tYXAucGFuVG8ocG9pbnQpO1xuICAgICAgICAgICAgICAgICAgICBpZihjbUFwcC5tYXBJbmZvLmN1clBvc01hcmtlciAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY21BcHAubWFwSW5mby5jdXJQb3NNYXJrZXIuc2V0UG9zaXRpb24ocG9pbnQpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY21BcHAubWFwSW5mby5jdXJQb3NNYXJrZXIgPSBuZXcgQU1hcC5NYXJrZXIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcDogY21BcHAubWFwSW5mby5tYXAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHBvaW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb246IG5ldyBBTWFwLkljb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZTogXCJodHRwOi8vd2ViYXBpLmFtYXAuY29tL3RoZW1lL3YxLjMvbWFya2Vycy9iL21hcmtfYi5wbmdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VTaXplOiBuZXcgQU1hcC5TaXplKDEyLCAxOClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIuW9k+WJjeS9jee9rlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IG5ldyBBTWFwLlBpeGVsKDEwLCAtMTApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdvVG9BZGQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAkKCcjYWRkLWRldi1idG4nKS5jbGljaygpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcmVmcmVzaEFuZFNob3dOZWFyZXN0QWRkZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgICQuZ2V0SlNPTih7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL3YxLjEvb2J0L3N0b3JlL25lYXJlc3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiX19sYXRcIjogc2VsZi5tYXBTdGF0dXMuY3VyUG9pbnQubGF0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiX19sbmdcIjogc2VsZi5tYXBTdGF0dXMuY3VyUG9pbnQubG5nXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5tYXBTdGF0dXMuYWRkZWRTaG9wID0gZGF0YS5kYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zaG93QWRkZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICByZWZyZXNoQW5kU2hvd0FsbEFkZGVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAkLmdldEpTT04oe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS92MS4xL29idC9zdG9yZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Blcl9wYWdlJzogMFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubWFwU3RhdHVzLmFkZGVkU2hvcCA9IGRhdGEuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2hvd0FkZGVkKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc2hvd0FkZGVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNsZWFyQWRkZWRPdmVybGF5KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWxmLm1hcFN0YXR1cy5hZGRlZFNob3AgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZWxmLm1hcFN0YXR1cy5hZGRlZFNob3AuZm9yRWFjaChmdW5jdGlvbihlbnRyeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hcmtlciA9IG5ldyBBTWFwLk1hcmtlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFwOiBjbUFwcC5tYXBJbmZvLm1hcCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogbmV3IEFNYXAuTG5nTGF0KGVudHJ5LnN0b3JlLmxuZywgZW50cnkuc3RvcmUubGF0KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiBuZXcgQU1hcC5JY29uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2U6IFwiaHR0cDovL3dlYmFwaS5hbWFwLmNvbS90aGVtZS92MS4zL21hcmtlcnMvbi9tYXJrX3IucG5nXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlU2l6ZTogbmV3IEFNYXAuU2l6ZSgxMCwgMTUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY290ZW50OiBlbnRyeS5zdG9yZS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IG5ldyBBTWFwLlBpeGVsKDIwLCAtMTApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLmFkZGVkTWFya2Vycy5wdXNoKG1hcmtlcik7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcmVmcmVzaEFuZFNob3dOZWFyQnk6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjcG9pbnQgPSBuZXcgQU1hcC5MbmdMYXQoXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm1hcFN0YXR1cy5jdXJQb2ludC5sbmcsIFxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5tYXBTdGF0dXMuY3VyUG9pbnQubGF0KTtcbiAgICAgICAgICAgICAgICAgICAgY21BcHAubWFwSW5mby5wbGFjZVNlYXJjaC5zZXRDaXR5KHNlbGYubWFwU3RhdHVzLmN1clBvaW50LmNpdHljb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgY21BcHAubWFwSW5mby5wbGFjZVNlYXJjaC5zZWFyY2hOZWFyQnkoXG4gICAgICAgICAgICAgICAgICAgICAgICBcIui2heW4glwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3BvaW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgMjAwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKHN0YXR1cywgcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coc3RhdHVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09PSAnY29tcGxldGUnICYmIHJlc3VsdC5pbmZvID09PSAnT0snKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtQXBwLm1hcEluZm8ubmVhckJ5U3RvcmVzID0gcmVzdWx0LnBvaUxpc3QucG9pcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zaG93TmVhckJ5KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzaG93TmVhckJ5OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNsZWFyTmVhckJ5T3ZlcmxheSgpO1xuICAgICAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLm5lYXJCeVN0b3Jlcy5mb3JFYWNoKGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcG9pbnQgPSBuZXcgQU1hcC5MbmdMYXQoZW50cnkubG9jYXRpb24ubG5nLCBlbnRyeS5sb2NhdGlvbi5sYXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hcmtlciA9IG5ldyBBTWFwLk1hcmtlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFwOiBjbUFwcC5tYXBJbmZvLm1hcCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcG9pbnQsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb246IG5ldyBBTWFwLkljb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZTogXCJodHRwOi8vd2ViYXBpLmFtYXAuY29tL3RoZW1lL3YxLjMvbWFya2Vycy9iL21hcmtfYi5wbmdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VTaXplOiBuZXcgQU1hcC5TaXplKDEwLCAxNSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBlbnRyeS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IG5ldyBBTWFwLlBpeGVsKDIwLCAtMTApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLm5lYXJCeVNob3BNYXJrZXJzLnB1c2gobWFya2VyKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGVhck92ZXJsYXk6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFyQWRkZWRPdmVybGF5KCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJOZWFyQnlPdmVybGF5KCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGVhckFkZGVkT3ZlcmxheTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLmFkZGVkTWFya2Vycy5mb3JFYWNoKGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbnRyeS5zZXRNYXAobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLmFkZGVkTWFya2VycyA9IFtdO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2xlYXJOZWFyQnlPdmVybGF5OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIGNtQXBwLm1hcEluZm8ubmVhckJ5U2hvcE1hcmtlcnMuZm9yRWFjaChmdW5jdGlvbihlbnRyeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW50cnkuc2V0TWFwKG51bGwpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgY21BcHAubWFwSW5mby5uZWFyQnlTaG9wTWFya2VycyA9IFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0QWN0aXZlSXRlbSh0YXJnZXQpIHtcbiAgICAgICAgdGFyZ2V0LmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgdGFyZ2V0LnNpYmxpbmdzKCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFyRGF0YShkYXRhKSB7XG4gICAgICAgIGZvciAodmFyIGsgaW4gZGF0YSkge1xuICAgICAgICAgICAgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgICAgICAgICBkYXRhW2tdID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgdmFyIHNob3AgPSB7XG4gICAgICAgIHJlZjoge1xuICAgICAgICAgICAgaWQ6IG51bGwsXG4gICAgICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICAgICAga2VlcGVyX25hbWU6IG51bGwsXG4gICAgICAgICAgICBrZWVwZXJfcGhvbmU6IG51bGwsXG4gICAgICAgICAgICBjb3VudGVyX251bTpudWxsLFxuICAgICAgICAgICAgY29tbWVudDogbnVsbFxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGluaXRTaG9wU2VsZWN0b3IoKSB7XG4gICAgICAgIGNtQXBwLnNob3BBZGRUYWJWbSA9IG5ldyBWdWUoe1xuICAgICAgICAgICAgZWw6ICcjYWRkLXNob3AtdGFiJyxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBzaG9wOiBzaG9wLFxuICAgICAgICAgICAgICAgIHNob3BMc3Q6IFtdLFxuICAgICAgICAgICAgICAgIGN1ckxvY2F0aW9uOiBnZW9Mb2NhdGlvbi5jdXJQb2ludCxcbiAgICAgICAgICAgICAgICBpbWdVcGxvYWRQcm9ncmVzczogMCxcbiAgICAgICAgICAgICAgICBpbWdMb2NhbFBhdGg6IG51bGwsXG4gICAgICAgICAgICAgICAgaW1nUmVtb3RlUGF0aDogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1ldGhvZHM6IHtcbiAgICAgICAgICAgICAgICBzZWFyY2hOZWFyYnlTaG9wczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGYuc2hvcC5yZWYubmFtZSA8PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBjbUFwcC5tYXBJbmZvLnBsYWNlU2VhcmNoLnNldENpdHkoc2VsZi5jdXJMb2NhdGlvbi5jaXR5Y29kZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgY21BcHAubWFwSW5mby5wbGFjZVNlYXJjaC5zZWFyY2hOZWFyQnkoXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNob3AucmVmLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgQU1hcC5MbmdMYXQoc2VsZi5jdXJMb2NhdGlvbi5sbmcsIHNlbGYuY3VyTG9jYXRpb24ubGF0KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIDIwMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbihzdGF0dXMsIHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT0gJ2NvbXBsZXRlJyAmJiByZXN1bHQuaW5mbyA9PSAnT0snKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2hvcExzdCA9IHJlc3VsdC5wb2lMaXN0LnBvaXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzZWFyY2hJdGVtU2VsZWN0ZWQ6IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoJ2NsaWNrZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlYXJjaFIgPSB0aGlzLnNob3BMc3RbJChldmVudC50YXJnZXQpLmF0dHIoXCJpZHhcIildO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3AucmVmLm5hbWUgPSBzZWFyY2hSLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3VyTG9jYXRpb24ubGF0ID0gc2VhcmNoUi5sb2NhdGlvbi5sYXQ7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3VyTG9jYXRpb24ubG5nID0gc2VhcmNoUi5sb2NhdGlvbi5sbmc7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvcC5yZWYucGhvbmUgPSBzZWFyY2hSLnRlbGVwaG9uZTtcbiAgICAgICAgICAgICAgICAgICAgJCgnI3Nob3AtbmFtZS1pbnB1dCcpLnBvcHVwKFwiaGlkZVwiKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJveFN0b3JlRGF0YTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSAge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudDogc2VsZi5zaG9wLnJlZi5jb21tZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlcl9udW06IHNlbGYuc2hvcC5yZWYuY291bnRlcl9udW0sXG4gICAgICAgICAgICAgICAgICAgICAgICBzdG9yZV9vYmo6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBzZWxmLnNob3AucmVmLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRjb2RlOiBzZWxmLmN1ckxvY2F0aW9uLmFkY29kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzOiBzZWxmLmN1ckxvY2F0aW9uLmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGF0OiBzZWxmLmN1ckxvY2F0aW9uLmxhdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsbmc6IHNlbGYuY3VyTG9jYXRpb24ubG5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhY3RfbmFtZTogc2VsZi5zaG9wLnJlZi5rZWVwZXJfbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250YWN0X3Bob25lOiBzZWxmLnNob3AucmVmLmtlZXBlcl9waG9uZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGYuc2hvcC5pZCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5pZCA9IHNlbGYuc2hvcC5yZWYuaWQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBhZGQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSBzZWxmLmJveFN0b3JlRGF0YSgpO1xuICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS92MS4xL29idC9zdG9yZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAndGV4dCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkocGFyYW1zKVxuICAgICAgICAgICAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSAkLnBhcnNlSlNPTihkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuY29kZSAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwi5re75Yqg5aSx6LSlXCIgKyBkYXRhLm1lc3NhZ2UgKyAnXFxuJyArIGRhdGEuZXJyb3JzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNob3AucmVmID0gdW5ib3hTdG9yZURhdGEoZGF0YS5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCfmt7vliqDmiJDlip8nKTtcbiAgICAgICAgICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwi5re75Yqg5aSx6LSlXCIpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHNhdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIGlmKHNlbGYuc2hvcC5yZWYuaWQgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCfor7flhYjkv53lrZjllYblupcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS92MS4xL29idC9zdG9yZS8nICsgc2VsZi5zaG9wLnJlZi5pZCArICcvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3BhdGNoJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAndGV4dCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoc2VsZi5ib3hTdG9yZURhdGEoKSlcbiAgICAgICAgICAgICAgICAgICAgfSkuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gJC5wYXJzZUpTT04oZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmNvZGUgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydChcIuS/neWtmOWksei0pVwiICsgZGF0YS5tZXNzYWdlICsgJ1xcbicgKyBkYXRhLmVycm9ycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zaG9wLnJlZiA9IHVuYm94U3RvcmVEYXRhKGRhdGEuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgn5L+d5a2Y5oiQ5YqfJyk7XG4gICAgICAgICAgICAgICAgICAgIH0pLmZhaWwoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydChcIuS/neWtmOWksei0pVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGVhckRhdGE6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhckRhdGEodGhpcy5zaG9wLnJlZik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICAkKCcjc2hvcC1uYW1lLWlucHV0JykucG9wdXAoe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbSBsZWZ0JyxcbiAgICAgICAgICAgICAgICAgICAgb246ICdjbGljaydcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB3YXRjaDoge1xuICAgICAgICAgICAgICAgICdzaG9wLnJlZi5uYW1lJzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VhcmNoTmVhcmJ5U2hvcHMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNtQXBwLnNob3BTZWxlY3RUYWJWbSA9IG5ldyBWdWUoe1xuICAgICAgICAgICAgZWw6ICcjc2VsZWN0LXNob3AtdGFiJyxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBzaG9wOiBzaG9wLFxuICAgICAgICAgICAgICAgIHNob3BMc3Q6IFtdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbW91bnRlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhcIlJlYWR5ISEhXCIpO1xuICAgICAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICAkKCcjc2hvcC1uYW1lLXNlYXJjaCcpLnBvcHVwKHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20gbGVmdCcsXG4gICAgICAgICAgICAgICAgICAgIG9uOiAnY2xpY2snXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgd2F0Y2g6IHtcbiAgICAgICAgICAgICAgICAnc2hvcC5yZWYubmFtZSc6IGZ1bmN0aW9uKG5ld1ZhbCwgb2xkVmFsKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1ZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgbmV3VmFsID09IFwidW5kZWZpbmVkXCIgfHwgbmV3VmFsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoU2hvcExzdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1ZhbCA9PT0gbnVsbCB8fCBuZXdWYWwubGVuZ3RoIDw9IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICQuZ2V0SlNPTih7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL3YxLjEvb2J0L3N0b3JlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9yZV9fbmFtZV9fY29udGFpbnM6IHRoaXMuc2hvcC5yZWYubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJfcGFnZTogNSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvOiBcImNyZWF0ZWRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNob3BMc3QgPSBkYXRhLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXRob2RzOiB7XG4gICAgICAgICAgICAgICAgc2VhcmNoSXRlbVNlbGVjdGVkOiBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3AucmVmID0gdW5ib3hTdG9yZURhdGEodGhpcy5zaG9wTHN0WyQoZXZlbnQudGFyZ2V0KS5hdHRyKFwiaWR4XCIpXSk7XG4gICAgICAgICAgICAgICAgICAgICQoJyNzaG9wLW5hbWUtc2VhcmNoJykucG9wdXAoJ2hpZGUnKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHJlZnJlc2hTaG9wTHN0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAgICAgJC5nZXRKU09OKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL3YxLjEvb2J0L3N0b3JlL25lYXJlc3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ19fbGF0JzogZ2VvTG9jYXRpb24uY3VyUG9pbnQubGF0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnX19sbmcnOiBnZW9Mb2NhdGlvbi5jdXJQb2ludC5sbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2hvcExzdCA9IGRhdGEuZGF0YS5zbGljZSgwLDUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKFwiRmFpbFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgY21BcHAuc2hvcFNlbGVjdG9yVm0gPSBuZXcgVnVlKHtcbiAgICAgICAgICAgIGVsOiAnI3Nob3Atc2VsZWN0b3ItbWVudScsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgY3VyTW9kZTogMCAvLyAwIC0tIGFkZCwgMSAtLXNlbGVjdFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1ldGhvZHM6IHtcbiAgICAgICAgICAgICAgICBzd2l0Y2hUb0FkZDogZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0QWN0aXZlSXRlbSgkKCcjc2hvcC1hZGQtaXRlbScpKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhcIlN3aXRjaGluZyB0byBhZGQgc2hvcFwiKTtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJEYXRhKHNob3AucmVmKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJNb2RlID0gMDtcbiAgICAgICAgICAgICAgICAgICAgJC50YWIoJ2NoYW5nZSB0YWInLCAnYWRkLXNob3AnKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHN3aXRjaFRvU2VsZWN0OiBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgICAgICAgICBzZXRBY3RpdmVJdGVtKCQoJyNzaG9wLXNlbGVjdC1pdGVtJykpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKFwiU3dpdGNoaW5nIHRvIHNlbGVjdCBzaG9wXCIpO1xuICAgICAgICAgICAgICAgICAgICBjbGVhckRhdGEoc2hvcC5yZWYpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmN1ck1vZGUgPSAxO1xuICAgICAgICAgICAgICAgICAgICAkLnRhYignY2hhbmdlIHRhYicsICdzZWxlY3Qtc2hvcCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtb3VudGVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN3aXRjaFRvQWRkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgfVxuXG4gICAgdmFyIGRldmljZSA9IHtcbiAgICAgICAgcmVmOiB7XG4gICAgICAgICAgICBpZDogbnVsbCxcbiAgICAgICAgICAgIGNvbW1lbnQ6IG51bGwsXG4gICAgICAgICAgICBkZXZpY2VfaWQ6IG51bGwsXG4gICAgICAgICAgICBzdG9yZTogbnVsbCxcbiAgICAgICAgICAgIHZlcnNpb25fbnVtOiAyIFxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGluaXREZXZpY2VQYW5lbCgpIHtcbiAgICAgICAgY21BcHAuZGV2aWNlVm0gPSBuZXcgVnVlKHtcbiAgICAgICAgICAgIGVsOiAnI2RldmljZS1zZWxlY3RvcicsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgZGV2aWNlOiBkZXZpY2UsXG4gICAgICAgICAgICAgICAgZGV2aWNlTHN0OiBbXSxcbiAgICAgICAgICAgICAgICBzaG9wOiBzaG9wLFxuICAgICAgICAgICAgICAgIGlzX3ByaW50ZXI6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWV0aG9kczoge1xuICAgICAgICAgICAgICAgIGxvYWREZXZpY2VzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zaG9wLnJlZi5pZCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICQuZ2V0SlNPTih7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL3YxLjEvb2J0L2RldmljZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdG9yZVwiOiBzZWxmLnNob3AucmVmLmlkXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pLmRvbmUoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZGV2aWNlTHN0ID0gZGF0YS5kYXRhO1xuICAgICAgICAgICAgICAgICAgICB9KS5mYWlsKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgnRmFpbCB0byBsb2FkIGRldmljZXMnKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBhZGQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIGlmKHNob3AucmVmLmlkID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgn6K+35YWI6YCJ5oup5oiW6ICF5L+d5a2Y5bqX6ZO65L+h5oGvJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2VsZi5kZXZpY2UucmVmLnN0b3JlID0gc2hvcC5yZWYuaWQ7XG4gICAgICAgICAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL3YxLjEvb2J0L2RldmljZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZWxmLmRldmljZS5yZWZcbiAgICAgICAgICAgICAgICAgICAgfSkuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5jb2RlICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCLmt7vliqDlpLHotKVcIiArIGRhdGEubWVzc2FnZSArICdcXG4nICsgZGF0YS5lcnJvcnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG1ha2UgYSBkZWVwIGNvcHlcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZGV2aWNlTHN0LnB1c2goSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkYXRhLmRhdGEpKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmRldmljZS5yZWYgPSBkYXRhLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmlzX3ByaW50ZXIgPSBkYXRhLmRhdGEudmVyc2lvbl9udW0gPT09IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmFkZE5leHQoKTtcbiAgICAgICAgICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCflpLHotKUnKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzYXZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBpZihzaG9wLnJlZi5pZCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+ivt+WFiOmAieaLqeaIluiAheS/neWtmOW6l+mTuuS/oeaBrycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmKHNlbGYuZGV2aWNlLnJlZi5pZCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+S/neWtmOWQjuaJjeiDveS/ruaUuScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZGV2aWNlLnJlZi5zaG9wID0gc2hvcC5yZWYuaWQ7XG4gICAgICAgICAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL3YxLjEvb2J0L2RldmljZS8nICsgc2VsZi5kZXZpY2UucmVmLmlkICsgJy8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAncGF0Y2gnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHNlbGYuZGV2aWNlLnJlZlxuICAgICAgICAgICAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmNvZGUgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydChcIuWksei0pVwiICsgZGF0YS5tZXNzYWdlICsgJ1xcbicgKyBkYXRhLmVycm9ycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5kZXZpY2UucmVmID0gZGF0YS5kYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5pc19wcmludGVyID0gZGF0YS5kYXRhLnZlcnNpb25fbnVtID09PSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+aIkOWKnycpO1xuICAgICAgICAgICAgICAgICAgICB9KS5mYWlsKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+Wksei0pScpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFkZE5leHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5kZXZpY2UuaWQgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCfor7flhYjkv53lrZjlvZPliY3orr7lpIcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRldmljZS5yZWYgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXZpY2VfaWQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdG9yZTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZlcnNpb25fbnVtOiAyIFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzX3ByaW50ZXIgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHdhdGNoOiB7XG4gICAgICAgICAgICAgICAgJ3Nob3AucmVmLmlkJzogZnVuY3Rpb24obmV3VmFsLCBvbGRWYWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhcIlNob3cgY2hhbmdlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1ZhbCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkRGV2aWNlcygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBpc19wcmludGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5pc19wcmludGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRldmljZS52ZXJzaW9uX251bSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRldmljZS52ZXJzaW9uX251bSA9IDI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluaXRNZ210RGF0YSgpIHtcbiAgICAgICAgdmFyIG1nbXRWbSA9IG5ldyBWdWUoe1xuICAgICAgICAgICAgZWw6ICcjb3JpLXBnNCcsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgc2VhcmNoVGVybTogJycsXG4gICAgICAgICAgICAgICAgc2hvcExzdDogW10sXG4gICAgICAgICAgICAgICAgcGFnZV9tZXRhOiB7fSxcbiAgICAgICAgICAgICAgICBwYWdlOiAxLFxuICAgICAgICAgICAgICAgIG51bUFkZGVkOiAwLFxuICAgICAgICAgICAgICAgIG51bUZhaWxlZDogMCxcbiAgICAgICAgICAgICAgICBudW1Ub0FkZDogMCxcbiAgICAgICAgICAgICAgICBudW1Ob3RBZGQ6IDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXRob2RzOiB7XG4gICAgICAgICAgICAgICAgYWRkRGV2aWNlOiBmdW5jdGlvbihzaG9wSWQsIGRldmljZUlkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQWRkaW5nXCIgKyBzaG9wSWQgKyBcIixcIiArIGRldmljZUlkKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGV2aWNlRGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0b3JlOiBzaG9wSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXZpY2VfaWQ6IGRldmljZUlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmVyc2lvbl9udW06IDJcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgKytzZWxmLm51bVRvQWRkO1xuICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS92MS4xL29idC9kZXZpY2UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZGV2aWNlRGF0YVxuICAgICAgICAgICAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmNvZGUgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydChcIua3u+WKoOWksei0pTogXCIgKyBkZXZpY2VJZCArIGRhdGEubWVzc2FnZSArICdcXG4nICsgZGF0YS5lcnJvcnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICsrc2VsZi5udW1GYWlsZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgKytzZWxmLm51bUFkZGVkO1xuICAgICAgICAgICAgICAgICAgICB9KS5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwi5re75Yqg5aSx6LSlOiBcIiArIGRldmljZUlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICsrc2VsZi5udW1GYWlsZWQ7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc3VibWl0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTdWJtaXQhXCIpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYubnVtQWRkZWQgPSAwO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLm51bUZhaWxlZCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYubnVtVG9BZGQgPSAwO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLm51bU5vdEFkZCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzZWxmLnNob3BMc3QubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzID0gc2VsZi5zaG9wTHN0W2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMuZGlydHkgJiYgcy5uZXdEZXZpY2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbnMgPSBzLm5ld0RldmljZXMuc3BsaXQoJywnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGogPSAwOyBqIDwgbnMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5hZGREZXZpY2Uocy5pZCwgbnNbal0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbG9hZERhdGE6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXF1ZXN0ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGVyX3BhZ2U6IDEwLFxuICAgICAgICAgICAgICAgICAgICAgICAgbzogWyctY3JlYXRlZCddLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFnZTogc2VsZi5wYWdlXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWxmLnNlYXJjaFRlcm0ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5zdG9yZV9fbmFtZV9fY29udGFpbnMgPSBzZWxmLnNlYXJjaFRlcm07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogJy9hcGkvdjEuMS9vYnQvc3RvcmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogcmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ2dldCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nXG4gICAgICAgICAgICAgICAgICAgIH0pLmRvbmUoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmhhbmRsZURhdGEoZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaGFuZGxlRGF0YTogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2VfbWV0YSA9IGRhdGEucGFnaW5hdGlvbl9tZXRhO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgIGkgPCBkYXRhLmRhdGEubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkID0gZGF0YS5kYXRhW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgZC5kaXJ0eSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgZC5uZXdEZXZpY2VzID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGV2aWNlaWRMc3QgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcih2YXIgaiA9IDA7IGogPCBkLmRldmljZV9zZXQubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXZpY2VpZExzdC5wdXNoKGQuZGV2aWNlX3NldFtqXS5kZXZpY2VfaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGQuZGV2aWNlX3NldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGQuZGV2aWNlaWRMc3QgPSBkZXZpY2VpZExzdDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3BMc3QgPSBkYXRhLmRhdGE7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBoYW5kbGVBZGRlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm51bVRvQWRkID09PSB0aGlzLm51bUFkZGVkICsgdGhpcy5udW1GYWlsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEb25lIScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkRGF0YSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9hZERhdGEoKTtcbiAgICAgICAgICAgIH0sIFxuICAgICAgICAgICAgd2F0Y2g6IHtcbiAgICAgICAgICAgICAgICBzZWFyY2hUZXJtOiBmdW5jdGlvbihuZXdWYWwsIG9sZFZhbCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWxmLnNlYXJjaFRlcm0ubGVuZ3RoID4gMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2FkRGF0YSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBudW1BZGRlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlQWRkZWQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG4gICAgICAgIGNtQXBwLm1nbXRWbSA9IG1nbXRWbTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVRdWVyeVN0cmluZygpIHtcbiAgICAgICAgaWYgKCdkZXZpY2VpZCcgaW4gUXVlcnlTdHJpbmcpIHtcbiAgICAgICAgICAgIGRldmljZS5yZWYuZGV2aWNlX2lkID0gUXVlcnlTdHJpbmcuZGV2aWNlaWQ7XG4gICAgICAgICAgICAkKCcjYWRkLWRldi1idG4nKS5jbGljaygpO1xuICAgICAgICAgICAgY21BcHAuc2hvcFNlbGVjdG9yVm0uc3dpdGNoVG9TZWxlY3QoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xuICAgICAgICBzZXR1cENTUkYoKTtcbiAgICAgICAgaW5pdE1hcCgpO1xuICAgICAgICBpbml0U2hvcFNlbGVjdG9yKCk7XG4gICAgICAgIGluaXREZXZpY2VQYW5lbCgpO1xuICAgICAgICBpbml0TWdtdERhdGEoKTtcbiAgICAgICAgY21BcHAuc2hvcCA9IHNob3A7XG4gICAgICAgIGNtQXBwLmRldmljZSA9IGRldmljZTtcbiAgICAgICAgaW5pdExheW91dCgpO1xuICAgICAgICBoYW5kbGVRdWVyeVN0cmluZygpO1xuICAgIH0pO1xufSkod2luZG93LmNtQXBwID0gd2luZG93LmNtQXBwIHx8IHt9KTtcbiJdfQ==
